LavaPack.loadBundle([[10,{"../../../shared/constants/network":5709,"../constants/contracts":5,"../lib/util":130,"@ethersproject/contracts":513,"@ethersproject/providers":551,"@metamask/base-controller":1408,"@metamask/eth-query":1703,"@metamask/utils":3201,lodash:4820,loglevel:4826,pify:4956,"single-call-balance-checker-abi":5533,uuid:5620},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getDefaultAccountTrackerControllerState=r.default=void 0;var n=f(e("@metamask/eth-query")),s=e("uuid"),o=f(e("loglevel")),i=f(e("pify")),a=e("@ethersproject/providers"),c=e("@ethersproject/contracts"),l=f(e("single-call-balance-checker-abi")),d=e("lodash"),u=e("@metamask/utils"),h=e("@metamask/base-controller"),p=e("../../../shared/constants/network"),m=e("../constants/contracts"),g=e("../lib/util");function f(e){return e&&e.__esModule?e:{default:e}}function C(e,t,r){y(e,t),t.set(e,r)}function y(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function v(e,t){return e.get(w(e,t))}function b(e,t,r){return e.set(w(e,t),r),r}function w(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const S={accounts:{persist:!0,anonymous:!1},currentBlockGasLimit:{persist:!0,anonymous:!0},accountsByChainId:{persist:!0,anonymous:!1},currentBlockGasLimitByChainId:{persist:!0,anonymous:!0}},k=()=>({accounts:{},currentBlockGasLimit:"",accountsByChainId:{},currentBlockGasLimitByChainId:{}});r.getDefaultAccountTrackerControllerState=k;var A=new WeakMap,T=new WeakMap,E=new WeakMap,M=new WeakMap,_=new WeakMap,P=new WeakMap,I=new WeakMap,R=new WeakSet,N=new WeakMap;class j extends h.BaseController{constructor(e){var t,r;super({name:"AccountTrackerController",metadata:S,state:{accounts:{},currentBlockGasLimit:"",accountsByChainId:{},currentBlockGasLimitByChainId:{},...e.state},messenger:e.messenger}),y(t=this,r=R),r.add(t),C(this,A,new Map),C(this,T,{}),C(this,E,void 0),C(this,M,void 0),C(this,_,{}),C(this,P,void 0),C(this,I,void 0),C(this,N,(async e=>{await w(R,this,U).call(this,undefined,e)})),b(E,this,e.provider),b(M,this,e.blockTracker),b(P,this,e.getNetworkIdentifier),this.messagingSystem.subscribe("KeyringController:accountRemoved",(e=>this.removeAccounts([e])));const n=this.messagingSystem.call("OnboardingController:getState");this.messagingSystem.subscribe("OnboardingController:stateChange",(0,g.previousValueComparator)(((e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:n}=t;return!r&&n&&this.updateAccountsAllActiveNetworks(),!0}),n)),b(I,this,this.messagingSystem.call("AccountsController:getSelectedAccount")),this.messagingSystem.subscribe("AccountsController:selectedEvmAccountChange",(e=>{const{useMultiAccountBalanceChecker:t}=this.messagingSystem.call("PreferencesController:getState");v(I,this).id===e.id||t||(b(I,this,e),this.updateAccountsAllActiveNetworks())}))}resetState(){const{accounts:e,accountsByChainId:t,currentBlockGasLimit:r,currentBlockGasLimitByChainId:n}={accounts:{},currentBlockGasLimit:"",accountsByChainId:{},currentBlockGasLimitByChainId:{}};this.update((s=>{s.accounts=e,s.accountsByChainId=t,s.currentBlockGasLimit=r,s.currentBlockGasLimitByChainId=n}))}start(){b(_,this,{[w(R,this,O).call(this)]:v(M,this).getCurrentBlock()}),v(M,this).once("latest",(e=>{v(_,this)[w(R,this,O).call(this)]=e})),v(M,this).removeListener("latest",v(N,this)),v(M,this).addListener("latest",v(N,this)),this.updateAccounts()}stop(){v(M,this).removeListener("latest",v(N,this))}startPollingByNetworkClientId(e){const t=(0,s.v4)(),r=v(A,this).get(e);if(r)r.add(t);else{const r=new Set;r.add(t),v(A,this).set(e,r),w(R,this,B).call(this,e)}return t}stopAllPolling(){this.stop(),v(A,this).forEach(((e,t)=>{e.forEach((e=>{this.stopPollingByPollingToken(e)}))}))}stopPollingByPollingToken(e){if(!e)throw new Error("pollingToken required");let t=!1;if(v(A,this).forEach(((r,n)=>{r.has(e)&&(t=!0,r.delete(e),0===r.size&&(v(A,this).delete(n),w(R,this,D).call(this,n)))})),!t)throw new Error("pollingToken not found")}syncWithAddresses(e){const{accounts:t}=this.state,r=Object.keys(t),n=[];e.forEach((e=>{r.includes(e)||n.push(e)}));const s=[];r.forEach((t=>{e.includes(t)||s.push(t)})),this.addAccounts(n),this.removeAccounts(s)}addAccounts(e){const{accounts:t,accountsByChainId:r}=this.state,n=(0,d.cloneDeep)(t),s=(0,d.cloneDeep)(r);e.forEach((e=>{n[e]={}})),Object.keys(s).forEach((t=>{e.forEach((e=>{s[t][e]={}}))})),this.update((e=>{e.accounts=n,e.accountsByChainId=s})),v(_,this)[w(R,this,O).call(this)]&&this.updateAccounts(),v(A,this).forEach(((e,t)=>{const{chainId:r}=w(R,this,x).call(this,t);v(_,this)[r]&&this.updateAccounts(t)}))}removeAccounts(e){const{accounts:t,accountsByChainId:r}=this.state,n=(0,d.cloneDeep)(t),s=(0,d.cloneDeep)(r);e.forEach((e=>{delete n[e]})),Object.keys(s).forEach((t=>{e.forEach((e=>{delete s[t][e]}))})),this.update((e=>{e.accounts=n,e.accountsByChainId=s}))}clearAccounts(){this.update((e=>{e.accounts={},e.accountsByChainId={[w(R,this,O).call(this)]:{}}}))}async updateAccountsAllActiveNetworks(){await this.updateAccounts(),await Promise.all(Array.from(v(A,this)).map((([e])=>this.updateAccounts(e))))}async updateAccounts(e){const{completedOnboarding:t}=this.messagingSystem.call("OnboardingController:getState");if(!t)return;const{chainId:r,provider:n,identifier:s}=w(R,this,x).call(this,e),{useMultiAccountBalanceChecker:o}=this.messagingSystem.call("PreferencesController:getState");let i=[];if(o){const{accounts:e}=this.state;i=Object.keys(e)}else{i=[this.messagingSystem.call("AccountsController:getSelectedAccount").address]}s!==p.LOCALHOST_RPC_URL&&"http://127.0.0.1:8545"!==s&&r in m.SINGLE_CALL_BALANCES_ADDRESSES?await w(R,this,$).call(this,i,m.SINGLE_CALL_BALANCES_ADDRESSES[r],n,r):await Promise.all(i.map((e=>w(R,this,L).call(this,e,n,r))))}}function O(){const{selectedNetworkClientId:e}=this.messagingSystem.call("NetworkController:getState"),{configuration:{chainId:t}}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return t}function x(e){if(e){const{configuration:t,provider:r,blockTracker:n}=this.messagingSystem.call("NetworkController:getNetworkClientById",e);return{chainId:t.chainId,provider:r,blockTracker:n,identifier:v(P,this).call(this,t)}}return{chainId:w(R,this,O).call(this),provider:v(E,this),blockTracker:v(M,this),identifier:v(P,this).call(this)}}function B(e){if(v(T,this)[e])return;const{blockTracker:t}=w(R,this,x).call(this,e),r=t=>w(R,this,U).call(this,e,t);t.addListener("latest",r),v(T,this)[e]=r,this.updateAccounts(e)}function D(e){if(!v(T,this)[e])return;const{blockTracker:t}=w(R,this,x).call(this,e);t.removeListener("latest",v(T,this)[e]),delete v(T,this)[e]}function F(e){const{accounts:t,accountsByChainId:r}=this.state;if(r[e])return(0,d.cloneDeep)(r[e]);const n={};return Object.keys(t).forEach((e=>{n[e]={}})),n}async function U(e,t){const{chainId:r,provider:s}=w(R,this,x).call(this,e);v(_,this)[r]=t;const a=await(0,i.default)(new n.default(s)).getBlockByNumber(t,!1);if(!a)return;const c=a.gasLimit;this.update((e=>{r===w(R,this,O).call(this)&&(e.currentBlockGasLimit=c),e.currentBlockGasLimitByChainId[r]=c}));try{await this.updateAccounts(e)}catch(e){o.default.error(e)}}async function L(e,t,r){const{useMultiAccountBalanceChecker:s}=this.messagingSystem.call("PreferencesController:getState");let o="0x0";try{o=await(0,i.default)(new n.default(t)).getBalance(e)}catch(e){if(e&&"object"==typeof e&&(0,u.hasProperty)(e,"data")&&e.data&&(0,u.hasProperty)(e.data,"request")&&e.data.request&&(0,u.hasProperty)(e.data.request,"method")&&"eth_getBalance"!==e.data.request.method)throw e}const a={address:e,balance:o},c=w(R,this,F).call(this,r);if(!c[e])return;let l=c;s||(l={},Object.keys(c).forEach((t=>{e!==t&&(l[t]={address:t,balance:null})}))),l[e]=a,this.update((e=>{r===w(R,this,O).call(this)&&(e.accounts=l),e.accountsByChainId[r]=l}))}async function $(e,t,r,n){const s=await new c.Contract(t,l.default,new a.Web3Provider(r)),i=["0x0000000000000000000000000000000000000000"];try{const t=await s.balances(e,i),r=w(R,this,F).call(this,n),o={};Object.keys(r).forEach((t=>{e.includes(t)||(o[t]={address:t,balance:null})})),e.forEach(((e,r)=>{const n=t[r]?t[r].toHexString():"0x0";o[e]={address:e,balance:n}})),this.update((e=>{n===w(R,this,O).call(this)&&(e.accounts=o),e.accountsByChainId[n]=o}))}catch(t){o.default.warn("MetaMask - Account Tracker single call balance fetch failed",t),Promise.allSettled(e.map((e=>w(R,this,L).call(this,e,r,n))))}}r.default=j}}},{package:"$root$",file:"app/scripts/controllers/account-tracker-controller.ts"}],[100,{"../../../../../shared/constants/app":5693},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;const n={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.LOG_WEB3_SHIM_USAGE],implementation:function(e,t,r,n,{getWeb3ShimUsageState:s,setWeb3ShimUsageRecorded:o}){const{origin:i}=e;s(i)===undefined&&o(i);return t.result=!0,n()},hookNames:{getWeb3ShimUsageState:!0,setWeb3ShimUsageRecorded:!0}};r.default=n}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/log-web3-shim-usage.ts"}],[101,{"../../../../../shared/constants/app":5693,"../../../../../shared/constants/metametrics":5705,"../../util":130,"@metamask/rpc-errors":2556},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/rpc-errors"),s=e("../../../../../shared/constants/app"),o=e("../../../../../shared/constants/metametrics"),i=e("../../util");const a={methodNames:[s.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS],implementation:async function(e,t,r,a,{origin:l,getAccounts:d,getUnlockPromise:u,hasPermission:h,requestAccountsPermission:p,sendMetrics:m,getPermissionsForOrigin:g,metamaskState:f}){if(c.has(l))return t.error=n.rpcErrors.resourceUnavailable(`Already processing ${s.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS}. Please wait.`),a();if(h(s.MESSAGE_TYPE.ETH_ACCOUNTS)){try{c.add(l),await u(!0),t.result=await d(),a()}catch(e){a(e)}finally{c.delete(l)}return undefined}try{await p()}catch(e){return t.error=e,a()}const C=await d();if(C.length>0){t.result=C;const e=g(l).eth_accounts.caveats[0].value.length,r=!Object.keys(f.permissionHistory).includes(l);(0,i.shouldEmitDappViewedEvent)(f.metaMetricsId)&&m({event:o.MetaMetricsEventName.DappViewed,category:o.MetaMetricsEventCategory.InpageProvider,referrer:{url:l},properties:{is_first_visit:r,number_of_accounts:Object.keys(f.accounts).length,number_of_accounts_connected:e}})}else t.error=n.rpcErrors.internal("Accounts unexpectedly unavailable. Please report this bug.");return a()},hookNames:{origin:!0,getAccounts:!0,getUnlockPromise:!0,hasPermission:!0,requestAccountsPermission:!0,sendMetrics:!0,getPermissionsForOrigin:!0,metamaskState:!0}};r.default=a;const c=new Set}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/request-accounts.js"}],[102,{"../../../../../shared/constants/app":5693,"@metamask/rpc-errors":2556},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/rpc-errors");const s={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.SEND_METADATA],implementation:function(e,t,r,s,{addSubjectMetadata:o,subjectType:i}){const{origin:a,params:c}=e;if(!c||"object"!=typeof c||Array.isArray(c))return s(n.rpcErrors.invalidParams({data:c}));{const{icon:e=null,name:t=null,...r}=c;o({...r,iconUrl:e,name:t,subjectType:i,origin:a})}return t.result=!0,s()},hookNames:{addSubjectMetadata:!0,subjectType:!0}};r.default=s}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/send-metadata.js"}],[103,{"../../../../../shared/constants/app":5693,"./ethereum-chain-utils":97,"@metamask/rpc-errors":2556},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/rpc-errors"),s=e("../../../../../shared/constants/app"),o=e("./ethereum-chain-utils");const i={methodNames:[s.MESSAGE_TYPE.SWITCH_ETHEREUM_CHAIN],implementation:async function(e,t,r,i,{getNetworkConfigurationByChainId:a,setActiveNetwork:c,requestPermittedChainsPermission:l,getCaveat:d,getCurrentChainIdForDomain:u,grantPermittedChainsPermissionIncremental:h}){let p;try{p=(0,o.validateSwitchEthereumChainParams)(e,i)}catch(e){return i(e)}const{origin:m}=e;if(u(m)===p)return t.result=null,i();const g=a(p),f=null==g?void 0:g.rpcEndpoints[g.defaultRpcEndpointIndex].networkClientId;if(!f)return i(n.providerErrors.custom({code:4902,message:`Unrecognized chain ID "${p}". Try adding the chain using ${s.MESSAGE_TYPE.ADD_ETHEREUM_CHAIN} first.`}));return(0,o.switchChain)(t,i,p,f,null,{setActiveNetwork:c,getCaveat:d,requestPermittedChainsPermission:l,grantPermittedChainsPermissionIncremental:h})},hookNames:{getNetworkConfigurationByChainId:!0,setActiveNetwork:!0,getCaveat:!0,requestPermittedChainsPermission:!0,getCurrentChainIdForDomain:!0,grantPermittedChainsPermissionIncremental:!0}};r.default=i}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/switch-ethereum-chain.js"}],[104,{"../../../../../shared/constants/app":5693,"@metamask/controller-utils":1434,"@metamask/rpc-errors":2556},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/controller-utils"),s=e("@metamask/rpc-errors"),o=e("../../../../../shared/constants/app");const i={methodNames:[o.MESSAGE_TYPE.WATCH_ASSET,o.MESSAGE_TYPE.WATCH_ASSET_LEGACY],implementation:async function(e,t,r,o,{handleWatchAssetRequest:i}){try{const{params:{options:r,type:a},origin:c,networkClientId:l}=e,{tokenId:d}=r;return[n.ERC721,n.ERC1155].includes(a)&&d!==undefined&&"string"!=typeof d?o(s.rpcErrors.invalidParams({message:`Expected parameter 'tokenId' to be type 'string'. Received type '${typeof d}'`})):(await i({asset:r,type:a,origin:c,networkClientId:l}),t.result=!0,o())}catch(e){return o(e)}},hookNames:{handleWatchAssetRequest:!0}};r.default=i}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/handlers/watch-asset.js"}],[105,{"./createMethodMiddleware":93,"./createUnsupportedMethodMiddleware":94},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./createMethodMiddleware");Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in r&&r[e]===n[e]||Object.defineProperty(r,e,{enumerable:!0,get:function(){return n[e]}}))}));var s=e("./createUnsupportedMethodMiddleware");Object.keys(s).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in r&&r[e]===s[e]||Object.defineProperty(r,e,{enumerable:!0,get:function(){return s[e]}}))}))}}},{package:"$root$",file:"app/scripts/lib/rpc-method-middleware/index.js"}],[106,{"../util":130,"@segment/loosely-validate-event":3272,buffer:4001,"is-retry-allowed":4654,lodash:4820,"remove-trailing-slash":5239,timers:5561},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t,n){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var s=l(e("remove-trailing-slash")),o=l(e("@segment/loosely-validate-event")),i=e("lodash"),a=l(e("is-retry-allowed")),c=e("../util");function l(e){return e&&e.__esModule?e:{default:e}}const d=()=>({});r.default=class{constructor(e,t={}){this.writeKey=e,this.host=(0,s.default)(t.host||"https://api.segment.io"),this.flushInterval=t.flushInterval||1e4,this.flushAt=t.flushAt||Math.max(t.flushAt,1)||20,this.queue=[],this.path="/v1/batch",this.maxQueueSize=460800,this.flushed=!1,this.retryCount=3,Object.defineProperty(this,"enable",{configurable:!1,writable:!1,enumerable:!0,value:!0})}_validate(e,t){(0,o.default)(e,t)}_message(e,t,r){return this._validate(t,e),this.enqueue(e,t,r),this}identify(e,t){return this._message("identify",e,t)}track(e,t){return this._message("track",e,t)}page(e,t){return this._message("page",e,t)}enqueue(e,t,r=d){if(!this.enable)return void n(r);const s={...t,type:e};if(s.context={...s.context,library:{name:"analytics-node"}},s.timestamp||(s.timestamp=new Date),s.messageId||(s.messageId=(0,c.generateRandomId)()),s.anonymousId&&!(0,i.isString)(s.anonymousId)&&(s.anonymousId=JSON.stringify(s.anonymousId)),s.userId&&!(0,i.isString)(s.userId)&&(s.userId=JSON.stringify(s.userId)),this.queue.push({message:s,callback:r}),!this.flushed)return this.flushed=!0,void this.flush();const o=this.queue.length>=this.flushAt,a=this.queue.reduce(((e,t)=>e+JSON.stringify(t).length),0)>=this.maxQueueSize;(o||a)&&this.flush(),this.flushInterval&&!this.timer&&(this.timer=setTimeout(this.flush.bind(this),this.flushInterval))}flush(e=d){if(!this.enable)return n(e),Promise.resolve();if(this.timer&&(clearTimeout(this.timer),this.timer=null),!this.queue.length)return n(e),Promise.resolve();const r=this.queue.splice(0,this.flushAt),s=r.map((e=>e.callback)),o={batch:r.map((e=>e.message)),timestamp:new Date,sentAt:new Date},i={Authorization:`Basic ${t.from(this.writeKey,"utf8").toString("base64")}`};return this._sendRequest(`${this.host}${this.path}`,{method:"POST",body:JSON.stringify(o),headers:i},(t=>{n((()=>{s.forEach((e=>e(t,o))),e(t,o)}))}),0)}_retryRequest(e,t,r,n){const s=100*Math.pow(2,n);setTimeout((()=>{this._sendRequest(e,t,r,n+1)}),s)}async _sendRequest(e,t,r,n){return fetch(e,t).then((async s=>{if(s.ok)r();else if(this._isErrorRetryable({response:s})&&n<=this.retryCount)this._retryRequest(e,t,r,n);else{const e=new Error(s.statusText);r(e)}})).catch((s=>{this._isErrorRetryable(s)&&n<=this.retryCount?this._retryRequest(e,t,r,n):r(s)}))}_isErrorRetryable(e){return!!function(e){return!e.response&&Boolean(e.code)&&"ECONNABORTED"!==e.code&&(0,a.default)(e)}(e)||!!e.response&&(e.response.status>=500&&e.response.status<=599||429===e.response.status)}}}).call(this)}).call(this,e("buffer").Buffer,e("timers").setImmediate)}}},{package:"$root$",file:"app/scripts/lib/segment/analytics.js"}],[107,{"../../../../shared/constants/time":5721,"./analytics":106},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.segment=r.createSegmentMock=void 0;var n,s=e("../../../../shared/constants/time"),o=(n=e("./analytics"))&&n.__esModule?n:{default:n};const i="XdGJ17zKf3NjBPCDQ2UDjJjkx6FYBMGP",a=undefined,c=5*s.SECOND,l=(e=a)=>{const t={queue:[],flush(){t.queue.forEach((([e,t])=>{t()})),t.queue=[]},track(r,n=(()=>undefined)){t.queue.push([r,n]),t.queue.length>=e&&t.flush()},page(){},identify(){}};return t};r.createSegmentMock=l;r.segment=i?new o.default(i,{host:null,flushAt:a,flushInterval:c}):l(a)}}},{package:"$root$",file:"app/scripts/lib/segment/index.js"}],[11,{"../../../shared/constants/alerts":5691,"@metamask/base-controller":1408},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getDefaultAlertControllerState=r.AlertController=void 0;var n=e("@metamask/base-controller"),s=e("../../../shared/constants/alerts");function o(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function i(e,t,r){return e.set(a(e,t),r),r}function a(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const c=()=>({alertEnabledness:s.TOGGLEABLE_ALERT_TYPES.reduce(((e,t)=>(e[t]=!0,e)),{}),unconnectedAccountAlertShownOrigins:{},web3ShimUsageOrigins:{}});r.getDefaultAlertControllerState=c;const l={alertEnabledness:{persist:!0,anonymous:!0},unconnectedAccountAlertShownOrigins:{persist:!0,anonymous:!1},web3ShimUsageOrigins:{persist:!0,anonymous:!1}};var d=new WeakMap,u=new WeakSet;class h extends n.BaseController{constructor(e){var t,r;super({messenger:e.messenger,metadata:l,name:"AlertController",state:{...c(),...e.state}}),o(t=this,r=u),r.add(t),function(e,t,r){o(e,t),t.set(e,r)}(this,d,void 0),i(d,this,this.messagingSystem.call("AccountsController:getSelectedAccount").address),this.messagingSystem.subscribe("AccountsController:selectedAccountChange",(e=>{this.state.unconnectedAccountAlertShownOrigins&&function(e,t){return e.get(a(e,t))}(d,this)!==e.address&&(i(d,this,e.address),this.update((e=>{e.unconnectedAccountAlertShownOrigins={}})))}))}setAlertEnabledness(e,t){this.update((r=>{r.alertEnabledness[e]=t}))}setUnconnectedAccountAlertShown(e){this.update((t=>{t.unconnectedAccountAlertShownOrigins[e]=!0}))}getWeb3ShimUsageState(e){var t;return null===(t=this.state.web3ShimUsageOrigins)||void 0===t?void 0:t[e]}setWeb3ShimUsageRecorded(e){a(u,this,p).call(this,e,s.Web3ShimUsageAlertStates.recorded)}setWeb3ShimUsageAlertDismissed(e){a(u,this,p).call(this,e,s.Web3ShimUsageAlertStates.dismissed)}}function p(e,t){this.update((r=>{r.web3ShimUsageOrigins&&(r.web3ShimUsageOrigins[e]=t)}))}r.AlertController=h}}},{package:"$root$",file:"app/scripts/controllers/alert-controller.ts"}],[111,{"../../../../shared/lib/trace":5735},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.addPersonalMessage=async function({signatureParams:e,signatureController:t}){return s(e,t,"newUnsignedPersonalMessage")},r.addTypedMessage=async function({signatureParams:e,signatureController:t}){return s(e,t,"newUnsignedTypedMessage")};var n=e("../../../../shared/lib/trace");async function s(e,t,r){const[,s]=e,{id:o}=s,i=null==o?void 0:o.toString();(0,n.endTrace)({name:n.TraceName.Middleware,id:i});const a=await t[r](...e);return(0,n.endTrace)({name:n.TraceName.Signature,id:i}),a}}}},{package:"$root$",file:"app/scripts/lib/signature/util.ts"}],[112,{"./snap-keyring":115},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),Object.defineProperty(r,"getAccountsBySnapId",{enumerable:!0,get:function(){return n.getAccountsBySnapId}}),Object.defineProperty(r,"snapKeyringBuilder",{enumerable:!0,get:function(){return n.snapKeyringBuilder}});var n=e("./snap-keyring")}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/index.ts"}],[113,{"@metamask/keyring-api":1938,"@metamask/permission-controller":2302},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.isProtocolAllowed=d,r.keyringSnapPermissionsBuilder=function(e,t){return()=>{if("metamask"===t)return i;if(o.includes(t))return c;const r=e.getSubjectMetadata(t);return(null==r?void 0:r.subjectType)===n.SubjectType.Website&&d(t)?a:[]}};var n=e("@metamask/permission-controller"),s=e("@metamask/keyring-api");const o=["https://portfolio.metamask.io"],i=[s.KeyringRpcMethod.ListAccounts,s.KeyringRpcMethod.GetAccount,s.KeyringRpcMethod.FilterAccountChains,s.KeyringRpcMethod.DeleteAccount,s.KeyringRpcMethod.ListRequests,s.KeyringRpcMethod.GetRequest,s.KeyringRpcMethod.SubmitRequest,s.KeyringRpcMethod.RejectRequest],a=[s.KeyringRpcMethod.ListAccounts,s.KeyringRpcMethod.GetAccount,s.KeyringRpcMethod.CreateAccount,s.KeyringRpcMethod.FilterAccountChains,s.KeyringRpcMethod.UpdateAccount,s.KeyringRpcMethod.DeleteAccount,s.KeyringRpcMethod.ExportAccount,s.KeyringRpcMethod.ListRequests,s.KeyringRpcMethod.GetRequest,s.KeyringRpcMethod.ApproveRequest,s.KeyringRpcMethod.RejectRequest],c=[s.KeyringRpcMethod.ListAccounts,s.KeyringRpcMethod.GetAccount,s.KeyringRpcMethod.GetAccountBalances,s.KeyringRpcMethod.SubmitRequest],l=["https:"];function d(e){try{const t=new URL(e);return l.includes(t.protocol)}catch(e){return!1}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/keyring-snaps-permissions.ts"}],[114,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getSnapAndHardwareInfoForMetrics=async function(e,t,r){var n,s,o;if(!r)return{};const i=r.call("AccountsController:getSelectedAccount"),a=i.address,{keyring:c}=i.metadata;let l;var d;null!==(n=i.metadata.snap)&&void 0!==n&&n.id&&(l=r.call("SnapController:get",null===(d=i.metadata.snap)||void 0===d?void 0:d.id));return{account_type:await e(a),device_model:await t(a),account_hardware_type:await async function(){var e;return null!=c&&null!==(e=c.type)&&void 0!==e&&e.includes("Hardware")?c.type:undefined}(),account_snap_type:null===(s=l)||void 0===s?void 0:s.id,account_snap_version:null===(o=l)||void 0===o?void 0:o.version}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/metrics.ts"}],[115,{"../../../../shared/constants/app":5693,"../../../../shared/constants/metametrics":5705,"../../../../ui/components/component-library/icon":6242,"../../translate":284,"./utils/isBlockedUrl":116,"./utils/showResult":117,"@metamask/eth-snap-keyring":1758,"webextension-polyfill":5670},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getAccountsBySnapId=void 0,r.showAccountCreationDialog=h,r.showAccountNameSuggestionDialog=p,r.snapKeyringBuilder=void 0;var n,s=e("@metamask/eth-snap-keyring"),o=(n=e("webextension-polyfill"))&&n.__esModule?n:{default:n},i=e("../../../../shared/constants/metametrics"),a=e("../../../../shared/constants/app"),c=e("../../translate"),l=e("../../../../ui/components/component-library/icon"),d=e("./utils/isBlockedUrl"),u=e("./utils/showResult");async function h(e,t){try{return Boolean(await t.call("ApprovalController:addRequest",{origin:e,type:a.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountCreation},!0))}catch(e){throw new Error(`Error occurred while showing account creation dialog.\n${e}`)}}async function p(e,t,r){try{return await t.call("ApprovalController:addRequest",{origin:e,type:a.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showNameSnapAccount,requestData:{snapSuggestedAccountName:r}},!0)}catch(e){throw new Error(`Error occurred while showing name account dialog.\n${e}`)}}r.getAccountsBySnapId=async(e,t)=>{const r=await e.getSnapKeyring();return await r.getAccountsBySnapId(t)};r.snapKeyringBuilder=(e,t,r,n,m,g,f)=>{const C=()=>new s.SnapKeyring(t(),{addressExists:async t=>(await e.call("KeyringController:getAccounts")).includes(t.toLowerCase()),redirectUser:async(t,r,n)=>{if(r.length>0||n.length>0){const s=await(0,d.isBlockedUrl)(r,(async()=>await e.call("PhishingController:maybeUpdateState")),(t=>e.call("PhishingController:testOrigin",t))),i=await e.call("ApprovalController:addRequest",{origin:t,requestData:{url:r,message:n,isBlockedUrl:s},type:a.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.showSnapAccountRedirect},!0);Boolean(i)&&r.length>0?o.default.tabs.create({url:r}):console.log("User refused snap account redirection to:",r)}else console.log("Error occurred when redirecting snap account. url or message must be defined")},saveState:async()=>{await r()},addAccount:async(t,n,s,o="",a=!1)=>{const d=g(n),{id:C}=e.call("ApprovalController:startFlow"),y=e=>{m({event:e,category:i.MetaMetricsEventCategory.Accounts,properties:{account_type:i.MetaMetricsEventAccountType.Snap,snap_id:n,snap_name:d}})};try{const m="https://support.metamask.io/managing-my-wallet/accounts-and-addresses/how-to-add-accounts-in-your-wallet/",g=f(n)&&!a,C=g||await h(n,e);if(!C)throw await s(C),new Error("User denied account creation");const v=await p(n,e,o);if(null==v||!v.success)throw await s(null==v?void 0:v.success),new Error("User denied account creation");try{await r(),await s(v.success);const o=e.call("AccountsController:getAccountByAddress",t);if(!o)throw new Error(`Internal account not found for address: ${t}`);e.call("AccountsController:setSelectedAccount",o.id),v.name&&e.call("AccountsController:setAccountName",o.id,v.name),g||(y(i.MetaMetricsEventName.AddSnapAccountSuccessViewed),await(0,u.showSuccess)(e,n,{icon:l.IconName.UserCircleAdd,title:(0,c.t)("snapAccountCreated")},{message:(0,c.t)("snapAccountCreatedDescription"),address:t,learnMoreLink:m}),y(i.MetaMetricsEventName.AddSnapAccountSuccessClicked)),y(i.MetaMetricsEventName.AccountAdded)}catch(t){const r=t.message;throw await(0,u.showError)(e,n,{icon:l.IconName.UserCircleAdd,title:(0,c.t)("snapAccountCreationFailed")},{message:(0,c.t)("snapAccountCreationFailedDescription",d),learnMoreLink:m,error:r}),new Error(`Error occurred while creating snap account: ${r}`)}}finally{e.call("ApprovalController:endFlow",{id:C})}},removeAccount:async(t,s,o)=>{const d=g(s),{id:h}=e.call("ApprovalController:startFlow"),p="https://support.metamask.io/managing-my-wallet/accounts-and-addresses/how-to-remove-an-account-from-your-metamask-wallet/",f=e=>{m({event:e,category:i.MetaMetricsEventCategory.Accounts,properties:{account_type:i.MetaMetricsEventAccountType.Snap,snap_id:s,snap_name:d}})};let C=!1;try{if(C=Boolean(await e.call("ApprovalController:addRequest",{origin:s,type:a.SNAP_MANAGE_ACCOUNTS_CONFIRMATION_TYPES.confirmAccountRemoval,requestData:{publicAddress:t}},!0)),!C)throw await o(C),new Error("User denied account removal");try{await n(t),await o(C),await r(),f(i.MetaMetricsEventName.RemoveSnapAccountSuccessViewed),await(0,u.showError)(e,s,{icon:l.IconName.UserCircleRemove,title:(0,c.t)("snapAccountRemoved")},{message:(0,c.t)("snapAccountRemovedDescription"),learnMoreLink:p}),f(i.MetaMetricsEventName.RemoveSnapAccountSuccessClicked)}catch(t){const r=t.message;throw await(0,u.showError)(e,s,{icon:l.IconName.UserCircleRemove,title:(0,c.t)("snapAccountRemovalFailed")},{message:(0,c.t)("snapAccountRemovalFailedDescription",d),learnMoreLink:p,error:r}),f(i.MetaMetricsEventName.AccountRemoveFailed),new Error(`Error occurred while removing snap account: ${r}`)}}finally{C&&f(i.MetaMetricsEventName.AccountRemoved),e.call("ApprovalController:endFlow",{id:h})}}});return C.type=s.SnapKeyring.type,C}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/snap-keyring.ts"}],[116,{"../keyring-snaps-permissions":113},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.isBlockedUrl=void 0;var n=e("../keyring-snaps-permissions");r.isBlockedUrl=async(e,t,r)=>{try{return!(0,n.isProtocolAllowed)(e)||(await t(),r(e).result)}catch(e){return console.error("Invalid URL passed into snap-keyring:",e),!1}}}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/utils/isBlockedUrl.ts"}],[117,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.showSuccess=r.showError=void 0;const n=e=>({name:"SnapAuthorshipHeader",key:"snapHeader",properties:{snapId:e}});r.showError=(e,t,r,s)=>e.call("ApprovalController:showError",{header:[n(t)],title:r.title,icon:r.icon,error:{key:"snapAccountErrorMessage",name:"SnapAccountErrorMessage",properties:s}});r.showSuccess=(e,t,r,s)=>e.call("ApprovalController:showSuccess",{header:[n(t)],title:r.title,icon:r.icon,message:{key:"snapAccountSuccessMessage",name:"SnapAccountSuccessMessage",properties:s}})}}},{package:"$root$",file:"app/scripts/lib/snap-keyring/utils/showResult.ts"}],[118,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.sanitizeUIState=function(e){const t={...e};for(const e of n)delete t[e];return function(e){const t=e.snaps;if(!t)return;e.snaps=Object.values(t).reduce(((e,t)=>(e[t.id]=function(e){const t={...e};return delete t.sourceCode,delete t.auxiliaryFiles,t}(t),e)),{})}(t),t};const n=["snapStates","unencryptedSnapStates","vault"]}}},{package:"$root$",file:"app/scripts/lib/state-utils.ts"}],[12,{"@metamask/obs-store":2288,events:4308},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("events"))&&n.__esModule?n:{default:n},o=e("@metamask/obs-store");function i(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}function a(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const l={currentAppVersion:"",previousAppVersion:"",previousMigrationVersion:0,currentMigrationVersion:0};var d=new WeakSet;class u extends s.default{constructor({currentAppVersion:e="",currentMigrationVersion:t=0,state:r={}}){super(),i(this,d),a(this,"store",void 0),this.store=new o.ObservableStore({...l,...r}),c(d,this,h).call(this,e),c(d,this,p).call(this,t)}}function h(e){const t=this.store.getState().currentAppVersion;e!==t&&this.store.updateState({currentAppVersion:e,previousAppVersion:t})}function p(e){const t=this.store.getState().currentMigrationVersion;e!==t&&this.store.updateState({previousMigrationVersion:t,currentMigrationVersion:e})}r.default=u}}},{package:"$root$",file:"app/scripts/controllers/app-metadata.ts"}],[120,{"../../../../../shared/lib/four-byte":5728,"@ethersproject/abi":490,"@metamask/utils":3201,"ethereumjs-util":4236},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.decodeTransactionDataWithFourByte=async function(e){const t=e.slice(0,10),r=await(0,i.getMethodFrom4Byte)(t);if(!r)return undefined;const o=r.split("(")[0],u=function(e){let t=e.slice(e.indexOf("(")+1,-1);const r=[];for(;t.includes("(");){const e=d(t);if(!e)break;r.push(e.value),t=`${t.slice(0,e.start)}${r.length-1}#${t.slice(e.end+1)}`}return l(t,r)}(r);a("Generated inputs",u);const h=(0,n.addHexPrefix)(e.slice(10)),p=s.Interface.getAbiCoder().decode(u,h),m=u.map(((e,t)=>c(e,t,p)));return{name:o,params:m}};var n=e("ethereumjs-util"),s=e("@ethersproject/abi"),o=e("@metamask/utils"),i=e("../../../../../shared/lib/four-byte");const a=(0,o.createProjectLogger)("four-byte");function c(e,t,r){var n;const s=r[t],{type:o,name:i}=e;let a=null===(n=e.components)||void 0===n?void 0:n.map(((e,t)=>c(e,t,s)));if(o.endsWith("[]")){const t=o.slice(0,-2);a=s.map(((r,n)=>{const o=`Item ${n+1}`;return c({...e,name:o,type:t},n,s)}))}return{name:i,type:o,value:s,children:a}}function l(e,t){return e.split(",").map((e=>{const r=e.split("#"),n=r.length>1?parseInt(r[0],10):undefined;return{type:n===undefined?e:`tuple${r[1]??""}`,components:n===undefined?undefined:l(t[n],t)}}))}function d(e){let t=-1;for(let r=0;r<e.length;r++)if("("===e[r])t=r;else if(")"===e[r]&&-1!==t)return{start:t,end:r,value:e.slice(t+1,r)};return undefined}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/four-byte.ts"}],[121,{"@metamask/controller-utils":1434,"ethereumjs-util":4236},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getContractProxyAddress=async function(e,t){const r=(await Promise.all(o.map((r=>(0,n.query)(t,"eth_getStorageAt",[e,r,"latest"]))))).find((e=>(0,s.stripHexPrefix)(e)!==i));return r&&(0,s.addHexPrefix)(r.slice(26))};var n=e("@metamask/controller-utils"),s=e("ethereumjs-util");const o=["0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3","0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"],i="0".padEnd(64,"0")}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/proxy.ts"}],[122,{"@ethersproject/abi":490,"@metamask/utils":3201},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.decodeTransactionDataWithSourcify=async function(e,t,r){var a,c;const l=await async function(e,t){var r;const n=await async function(e,t){const r=parseInt(t,16),n=await fetch(`https://sourcify.dev/server/files/any/${r}/${e}`);if(!n.ok)throw new Error("Failed to fetch Sourcify files");return n.json()}(e,t),s=null===(r=n.files)||void 0===r?void 0:r.find((e=>e.name.includes("metadata.json")));if(!s)throw new Error("Metadata not found");return JSON.parse(s.content)}(t,r);s("Retrieved Sourcify metadata",{contractAddress:t,chainId:r,metadata:l});const{abi:d}=l.output,u=new n.Interface(d),h=e.slice(0,10);let p;try{p=u.getFunction(h)}catch(e){}if(!p)return s("Failed to find function in ABI",h,d),undefined;const{name:m,inputs:g}=p,f=i(m,g),C=null===(a=l.output.userdoc)||void 0===a?void 0:a.methods[f],y=null===(c=l.output.devdoc)||void 0===c?void 0:c.methods[f],v=(null==C?void 0:C.notice)??(null==y?void 0:y.details);s("Extracted NatSpec",{signature:f,userDoc:C,devDoc:y});const b=u.decodeFunctionData(h,e),w=g.map(((e,t)=>o(e,t,b,C,y)));return{name:m,description:v,params:w}};var n=e("@ethersproject/abi");const s=(0,e("@metamask/utils").createProjectLogger)("sourcify");function o(e,t,r,n,s){var i,a;const{name:c,type:l,components:d}=e,u=(null==n||null===(i=n.params)||void 0===i?void 0:i[c])??(null==s||null===(a=s.params)||void 0===a?void 0:a[c]),h=r[t];let p=null==d?void 0:d.map(((e,t)=>o(e,t,h,{},{})));if(l.endsWith("[]")){const t=l.slice(0,-2);p=h.map(((r,n)=>{const s=`Item ${n+1}`;return o({...e,name:s,type:t},n,h,{},{})}))}return{name:c,description:u,type:l,value:h,children:p}}function i(e,t){return`${e??""}(${t.map((e=>{var t;return null!==(t=e.components)&&void 0!==t&&t.length?`${i(undefined,e.components)}${e.type.endsWith("[]")?"[]":""}`:e.type})).join(",")})`}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/sourcify.ts"}],[123,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.UNISWAP_ROUTER_COMMANDS=void 0;r.UNISWAP_ROUTER_COMMANDS={0:{name:"V3_SWAP_EXACT_IN",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of input tokens for the trade",name:"amountIn"},{type:"uint256",description:"The minimum amount of output tokens the user wants",name:"amountOutMin"},{type:"bytes",description:"The UniswapV3 encoded path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},1:{name:"V3_SWAP_EXACT_OUT",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of output tokens to receive",name:"amountOut"},{type:"uint256",description:"The maximum number of input tokens that should be spent",name:"amountInMax"},{type:"bytes",description:"The UniswapV3 encoded path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},2:{name:"PERMIT2_TRANSFER_FROM",params:[{type:"address",description:"The token to fetch from Permit2",name:"token"},{type:"address",description:"The recipient of the tokens fetched",name:"recipient"},{type:"uint256",description:"The amount of token to fetch",name:"amount"}]},3:{name:"PERMIT2_PERMIT_BATCH",params:[{type:"bytes",description:"A PermitBatch struct outlining all of the Permit2 permits to execute.",name:"batch"},{type:"bytes",description:"The signature to provide to Permit2",name:"data"}]},4:{name:"SWEEP",params:[{type:"address",description:"The ERC20 token to sweep (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the sweep",name:"recipient"},{type:"uint256",description:"The minimum required tokens to receive from the sweep",name:"amountMin"}]},5:{name:"TRANSFER",params:[{type:"address",description:"The ERC20 token to transfer (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"The amount to transfer",name:"value"}]},6:{name:"PAY_PORTION",params:[{type:"address",description:"The ERC20 token to transfer (or Constants.ETH for ETH)",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"In basis points, the percentage of the contract’s balance to transfer",name:"bips"}]},8:{name:"V2_SWAP_EXACT_IN",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of input tokens for the trade",name:"amountIn"},{type:"uint256",description:"The minimum amount of output tokens the user wants",name:"amountOutMin"},{type:"address[]",description:"The UniswapV2 token path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},9:{name:"V2_SWAP_EXACT_OUT",params:[{type:"address",description:"The recipient of the output of the trade",name:"recipient"},{type:"uint256",description:"The amount of output tokens to receive",name:"amountOut"},{type:"uint256",description:"The maximum number of input tokens that should be spent",name:"amountInMax"},{type:"address[]",description:"The UniswapV2 token path to trade along",name:"path"},{type:"bool",description:"A flag for whether the input tokens should come from the msg.sender (through Permit2) or whether the funds are already in the UniversalRouter",name:"payerIsUser"}]},10:{name:"PERMIT2_PERMIT",params:[{type:"bytes",description:"A PermitSingle struct outlining the Permit2 permit to execute",name:"permitSingle"},{type:"bytes",description:"The signature to provide to Permit2",name:"signature"}]},11:{name:"WRAP_ETH",params:[{type:"address",description:"The recipient of the WETH",name:"recipient"},{type:"uint256",description:"The amount of ETH to wrap",name:"amountMin"}]},12:{name:"UNWRAP_WETH",params:[{type:"address",description:"The recipient of the ETH",name:"recipient"},{type:"uint256",description:"The minimum required ETH to receive from the unwrapping",name:"amountMin"}]},13:{name:"PERMIT2_TRANSFER_FROM_BATCH",params:[{type:"bytes",description:"An array of AllowanceTransferDetails structs that each describe a Permit2 transfer to perform",name:"batchDetails"}]},16:{name:"SEAPORT",params:[{type:"uint256",description:"The ETH value to forward to the Seaport contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Seaport contract",name:"data"}]},17:{name:"LOOKS_RARE_721",params:[{type:"uint256",description:"The ETH value to forward to the LooksRare contract",name:"value"},{type:"bytes",description:"The calldata to use to call the LooksRare contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},18:{name:"NFTX",params:[{type:"uint256",description:"The ETH value to forward to the NFTX contract",name:"value"},{type:"bytes",description:"The calldata to use to call the NFTX contract",name:"data"}]},19:{name:"CRYPTOPUNKS",params:[{type:"uint256",description:"The PunkID to purchase",name:"punkId"},{type:"address",description:"The recipient for the cryptopunk",name:"recipient"},{type:"uint256",description:"The ETH value to forward to the Cryptopunks contract",name:"value"}]},20:{name:"LOOKS_RARE_1155",params:[{type:"uint256",description:"The ETH value to forward to the LooksRare contract",name:"value"},{type:"bytes",description:"The calldata to use to call the LooksRare contract",name:"data"},{type:"address",description:"The recipient of the ERC1155",name:"recipient"},{type:"address",description:"The ERC1155 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The amount of the ERC1155 to transfer",name:"amount"}]},21:{name:"OWNER_CHECK_721",params:[{type:"address",description:"The required owner of the ERC721",name:"owner"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},22:{name:"OWNER_CHECK_1155",params:[{type:"address",description:"The required owner of the ERC1155",name:"owner"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The minimum required amount of the ERC1155",name:"minBalance"}]},23:{name:"SWEEP_ERC721",params:[{type:"address",description:"The ERC721 token address to transfer",name:"token"},{type:"address",description:"The recipient of the transfer",name:"recipient"},{type:"uint256",description:"The token ID to transfer",name:"id"}]},24:{name:"X2Y2_721",params:[{type:"uint256",description:"The ETH value to forward to the X2Y2 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the X2Y2 contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},25:{name:"SUDOSWAP",params:[{type:"uint256",description:"The ETH value to forward to the Sudoswap contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Sudoswap contract",name:"data"}]},26:{name:"NFT20",params:[{type:"uint256",description:"The ETH value to forward to the NFT20 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the NFT20 contract",name:"data"}]},27:{name:"X2Y2_1155",params:[{type:"uint256",description:"The ETH value to forward to the X2Y2 contract",name:"value"},{type:"bytes",description:"The calldata to use to call the X2Y2 contract",name:"data"},{type:"address",description:"The recipient of the ERC1155",name:"recipient"},{type:"address",description:"The ERC1155 token address",name:"token"},{type:"uint256",description:"The ID of the ERC1155",name:"id"},{type:"uint256",description:"The amount of the ERC1155 to transfer",name:"amount"}]},28:{name:"FOUNDATION",params:[{type:"uint256",description:"The ETH value to forward to the Foundation contract",name:"value"},{type:"bytes",description:"The calldata to use to call the Foundation contract",name:"data"},{type:"address",description:"The recipient of the ERC721",name:"recipient"},{type:"address",description:"The ERC721 token address",name:"token"},{type:"uint256",description:"The ID of the ERC721",name:"id"}]},29:{name:"SWEEP_ERC1155",params:[{type:"address",description:"The ERC1155 token address to sweep",name:"token"},{type:"address",description:"The recipient of the sweep",name:"recipient"},{type:"uint256",description:"The token ID to sweep",name:"id"},{type:"uint256",description:"The minimum required tokens to receive from the sweep",name:"amount"}]}}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/uniswap-commands.ts"}],[124,{"../../../../../shared/constants/network":5709,"./uniswap-commands":123,"@ethersproject/abi":490,"ethereumjs-util":4236},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.UNISWAP_UNIVERSAL_ROUTER_ADDRESSES=void 0,r.decodeUniswapRouterTransactionData=function({transactionData:e,contractAddress:t,chainId:r}){const o=l[r];if(null==o||!o.map((e=>e.toLowerCase())).includes(t.toLowerCase()))return undefined;const u=new n.Interface(d);let h;try{h=u.parseTransaction({data:e})}catch(e){return undefined}const p=h.args.commands,m=h.args.inputs;return p.slice(2).match(/.{1,2}/gu).map(((e,t)=>function(e,t){const r=parseInt(e,16),o=31&r,l=i.UNISWAP_ROUTER_COMMANDS[String(o)];if(!l)return undefined;const d=l.params.map((e=>e.type)),u=n.Interface.getAbiCoder().decode(d,t),{name:h}=l,p=l.params.map(((e,t)=>{const{name:r,type:n,description:o}=e,i=u[t];return{name:r,type:n,value:"path"===r?function(e){const t=[];let r=(0,s.stripHexPrefix)(e),n={},o=!0;for(;r.length;){if(o){const e=(0,s.addHexPrefix)(r.slice(0,a));n.firstAddress?(n.secondAddress=e,t.push(n),n={firstAddress:e}):n.firstAddress=e,r=r.slice(a)}else n.tickSpacing=parseInt(r.slice(0,c),16),r=r.slice(c);o=!o}return t}(i):i,description:o}}));return{name:h,params:p}}(e,m[t]))).filter((e=>e!==undefined))};var n=e("@ethersproject/abi"),s=e("ethereumjs-util"),o=e("../../../../../shared/constants/network"),i=e("./uniswap-commands");const a=40,c=6,l=r.UNISWAP_UNIVERSAL_ROUTER_ADDRESSES={[o.CHAIN_IDS.ARBITRUM]:["0x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de5","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x5E325eDA8064b456f4781070C0738d849c824258"],[o.CHAIN_IDS.AVALANCHE]:["0x82635AF6146972cD6601161c4472ffe97237D292","0x4Dae2f939ACf50408e13d58534Ff8c2776d45265"],[o.CHAIN_IDS.BASE]:["0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"],[o.CHAIN_IDS.BSC]:["0x5Dc88340E1c5c6366864Ee415d6034cadd1A9897","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0x4Dae2f939ACf50408e13d58534Ff8c2776d45265"],[o.CHAIN_IDS.MAINNET]:["0xEf1c6E67703c7BD7107eed8303Fbe6EC2554BF6B","0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"],[o.CHAIN_IDS.OPTIMISM]:["0xb555edF5dcF85f42cEeF1f3630a52A108E55A654","0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4","0xCb1355ff08Ab38bBCE60111F1bb2B784bE25D7e8"],[o.CHAIN_IDS.POLYGON]:["0x4C60051384bd2d3C01bfc845Cf5F4b44bcbE9de5","0x643770E279d5D0733F21d6DC03A8efbABf3255B4","0xec7BE89e9d109e7e3Fec59c222CF297125FEFda2"],[o.CHAIN_IDS.SEPOLIA]:["0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD"]},d=[{constant:!0,inputs:[{name:"commands",type:"bytes"},{name:"inputs",type:"bytes[]"},{name:"deadline",type:"uint256"}],name:"execute",type:"function"},{constant:!0,inputs:[{name:"commands",type:"bytes"},{name:"inputs",type:"bytes[]"}],name:"execute",type:"function"}]}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/uniswap.ts"}],[125,{"../../../../../shared/types/transaction-decode":5771,"./four-byte":120,"./proxy":121,"./sourcify":122,"./uniswap":124,"@metamask/utils":3201},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.decodeTransactionData=async function({transactionData:e,contractAddress:t,chainId:r,ethQuery:n}){l("Decoding transaction data",{transactionData:e,contractAddress:t,chainId:r});const u=(0,o.decodeUniswapRouterTransactionData)({transactionData:e,contractAddress:t,chainId:r});if(u)return l("Decoded with Uniswap commands",u),{data:d(u),source:s.DecodedTransactionDataSource.Uniswap};const h=await(0,a.getContractProxyAddress)(t,n);h&&l("Retrieved proxy implementation address",h);const p=h??t,m=(0,i.decodeTransactionDataWithSourcify)(e,p,r),g=(0,c.decodeTransactionDataWithFourByte)(e),[f,C]=await Promise.allSettled([m,g]);if("fulfilled"===f.status&&f.value)return l("Decoded data with Sourcify",f.value),{data:d([f.value]),source:s.DecodedTransactionDataSource.Sourcify};if(l("Failed to decode data with Sourcify",f),"fulfilled"===C.status&&C.value)return l("Decoded data with 4Byte",C.value),{data:d([C.value]),source:s.DecodedTransactionDataSource.FourByte};return l("Failed to decode data with 4Byte",C),undefined};var n=e("@metamask/utils"),s=e("../../../../../shared/types/transaction-decode"),o=e("./uniswap"),i=e("./sourcify"),a=e("./proxy"),c=e("./four-byte");const l=(0,n.createProjectLogger)("transaction-decode");function d(e){return e.map((e=>function(e){return{...e,params:e.params.map((e=>u(e)))}}(e)))}function u(e){var t;return{...e,value:h(e.value),children:null===(t=e.children)||void 0===t?void 0:t.map((e=>u(e)))}}function h(e){const t=e._hex;return t?parseInt(t,16):e}}}},{package:"$root$",file:"app/scripts/lib/transaction/decode/util.ts"}],[126,{"../../../../shared/constants/app":5693,"../../../../shared/constants/gas":5700,"../../../../shared/constants/metametrics":5705,"../../../../shared/constants/transaction":5723,"../../../../shared/lib/transactions-controller-utils":5736,"../../../../shared/modules/conversion.utils":5745,"../../../../shared/modules/metametrics":5753,"../../../../shared/modules/transaction.utils":5768,"../../../../ui/helpers/utils/metrics":6724,"../../../../ui/pages/confirmations/utils":7176,"../snap-keyring/metrics":114,"@metamask/eth-query":1703,"@metamask/transaction-controller":3093,"bignumber.js":3905,"ethereumjs-util":4236},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.handleTransactionSubmitted=r.handleTransactionRejected=r.handleTransactionFailed=r.handleTransactionDropped=r.handleTransactionConfirmed=r.handleTransactionApproved=r.handleTransactionAdded=r.handlePostTransactionBalanceUpdate=r.createTransactionEventFragmentWithTxId=r.METRICS_STATUS_FAILED=void 0;var n,s=(n=e("@metamask/eth-query"))&&n.__esModule?n:{default:n},o=e("bignumber.js"),i=e("ethereumjs-util"),a=e("@metamask/transaction-controller"),c=e("../../../../shared/constants/app"),l=e("../../../../shared/constants/gas"),d=e("../../../../shared/constants/metametrics"),u=e("../../../../shared/constants/transaction"),h=e("../../../../shared/lib/transactions-controller-utils"),p=e("../../../../shared/modules/conversion.utils"),m=e("../../../../shared/modules/metametrics"),g=e("../../../../shared/modules/transaction.utils"),f=e("../../../../ui/helpers/utils/metrics"),C=e("../../../../ui/pages/confirmations/utils"),y=e("../snap-keyring/metrics");const v=r.METRICS_STATUS_FAILED="failed on-chain";r.handleTransactionAdded=async(e,t)=>{if(!t.transactionMeta)return;const{properties:r,sensitiveProperties:n}=await k({transactionEventPayload:t,transactionMetricsRequest:e});b({eventName:u.TransactionMetaMetricsEvent.added,transactionEventPayload:t,transactionMetricsRequest:e,payload:{properties:r,sensitiveProperties:n}})};r.handleTransactionApproved=async(e,t)=>{t.transactionMeta&&await w({eventName:u.TransactionMetaMetricsEvent.approved,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionFailed=async(e,t)=>{if(!t.transactionMeta)return;const r={};t.error&&(r.error=t.error),await w({eventName:u.TransactionMetaMetricsEvent.finalized,extraParams:r,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionConfirmed=async(e,t)=>{if(0===Object.keys(t).length)return;const r={},n={...t},{txReceipt:s}=n;r.gas_used=null==s?void 0:s.gasUsed;const{submittedTime:o}=n;o&&(r.completion_time=function(e){return Math.round((Date.now()-e)/1e3).toString()}(o)),"0x0"===(null==s?void 0:s.status)&&(r.status=v),await w({eventName:u.TransactionMetaMetricsEvent.finalized,extraParams:r,transactionEventPayload:{actionId:n.actionId,transactionMeta:n},transactionMetricsRequest:e})};r.handleTransactionDropped=async(e,t)=>{if(!t.transactionMeta)return;await w({eventName:u.TransactionMetaMetricsEvent.finalized,extraParams:{dropped:!0},transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionRejected=async(e,t)=>{t.transactionMeta&&await w({eventName:u.TransactionMetaMetricsEvent.rejected,transactionEventPayload:t,transactionMetricsRequest:e})};r.handleTransactionSubmitted=async(e,t)=>{if(!t.transactionMeta)return;const{properties:r,sensitiveProperties:n}=await k({transactionEventPayload:t,transactionMetricsRequest:e});b({eventName:u.TransactionMetaMetricsEvent.submitted,transactionEventPayload:t,transactionMetricsRequest:e,payload:{properties:r,sensitiveProperties:n}})};r.createTransactionEventFragmentWithTxId=async(e,{transactionId:t,actionId:r})=>{const n={...e.getTransaction(t),actionId:r},{properties:s,sensitiveProperties:o}=await k({transactionEventPayload:{transactionMeta:n},transactionMetricsRequest:e});b({eventName:u.TransactionMetaMetricsEvent.approved,transactionEventPayload:{actionId:n.actionId,transactionMeta:n},transactionMetricsRequest:e,payload:{properties:s,sensitiveProperties:o}})};function b({eventName:e,transactionEventPayload:{transactionMeta:t,actionId:r},transactionMetricsRequest:n,payload:s}){if(function(e,t,r){const n=S(t,r.id);return void 0!==e(n)}(n.getEventFragmentById,e,t)&&e!==u.TransactionMetaMetricsEvent.submitted)return;const o=S(e,t.id);switch(e){case u.TransactionMetaMetricsEvent.added:n.createEventFragment({category:d.MetaMetricsEventCategory.Transactions,initialEvent:u.TransactionMetaMetricsEvent.added,successEvent:u.TransactionMetaMetricsEvent.approved,failureEvent:u.TransactionMetaMetricsEvent.rejected,properties:s.properties,sensitiveProperties:s.sensitiveProperties,actionId:r,uniqueIdentifier:o,persist:!0});break;case u.TransactionMetaMetricsEvent.approved:case u.TransactionMetaMetricsEvent.rejected:n.createEventFragment({category:d.MetaMetricsEventCategory.Transactions,successEvent:u.TransactionMetaMetricsEvent.approved,failureEvent:u.TransactionMetaMetricsEvent.rejected,properties:s.properties,sensitiveProperties:s.sensitiveProperties,actionId:r,uniqueIdentifier:o,persist:!0});break;case u.TransactionMetaMetricsEvent.submitted:n.createEventFragment({category:d.MetaMetricsEventCategory.Transactions,initialEvent:u.TransactionMetaMetricsEvent.submitted,successEvent:u.TransactionMetaMetricsEvent.finalized,properties:s.properties,sensitiveProperties:s.sensitiveProperties,actionId:r,uniqueIdentifier:o,persist:!0});break;case u.TransactionMetaMetricsEvent.finalized:n.createEventFragment({category:d.MetaMetricsEventCategory.Transactions,successEvent:u.TransactionMetaMetricsEvent.finalized,properties:s.properties,sensitiveProperties:s.sensitiveProperties,actionId:r,uniqueIdentifier:o,persist:!0})}}async function w({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,extraParams:n={}}){const{properties:s,sensitiveProperties:o}=await k({transactionEventPayload:t,transactionMetricsRequest:r,extraParams:n});b({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,payload:{properties:s,sensitiveProperties:o}}),function({eventName:e,transactionEventPayload:{transactionMeta:t},transactionMetricsRequest:r,payload:n}){const s=S(e,t.id);switch(e){case u.TransactionMetaMetricsEvent.approved:case u.TransactionMetaMetricsEvent.rejected:case u.TransactionMetaMetricsEvent.finalized:r.updateEventFragment(s,{properties:n.properties,sensitiveProperties:n.sensitiveProperties})}}({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r,payload:{properties:s,sensitiveProperties:o}}),function({eventName:e,transactionMetricsRequest:t,transactionEventPayload:{transactionMeta:r}}){const n=S(e,r.id);switch(e){case u.TransactionMetaMetricsEvent.approved:case u.TransactionMetaMetricsEvent.finalized:t.finalizeEventFragment(n);break;case u.TransactionMetaMetricsEvent.rejected:t.finalizeEventFragment(n,{abandoned:!0})}}({eventName:e,transactionEventPayload:t,transactionMetricsRequest:r})}function S(e,t){return`transaction-${e===u.TransactionMetaMetricsEvent.finalized||e===u.TransactionMetaMetricsEvent.submitted?"submitted":"added"}-${t}`}async function k({transactionEventPayload:{transactionMeta:e},transactionMetricsRequest:t,extraParams:r={}}){var n;const{type:v,time:b,status:w,chainId:S,origin:k,txParams:{gasPrice:A,gas:T,maxFeePerGas:E,maxPriorityFeePerGas:M,estimateSuggested:_,estimateUsed:P},defaultGasEstimates:I,originalType:R,replacedById:N,customTokenAmount:j,dappProposedTokenAmount:O,currentTokenBalance:x,originalApprovalAmount:B,finalApprovalAmount:D,securityProviderResponse:F,simulationFails:U}=e,L=new s.default(t.provider),$=k===c.ORIGIN_METAMASK?"user":"dapp",{assetType:G,tokenStandard:H}=await(0,g.determineTransactionAssetType)(e,L,t.getTokenStandardAndDetails);let q;if(e.txParams.data){const r=await t.getMethodData(e.txParams.data);q=null==r?void 0:r.name}const K={};if((0,g.isEIP1559Transaction)(e)?(K.max_fee_per_gas=E,K.max_priority_fee_per_gas=M):K.gas_price=A,I){var V,J;const{estimateType:r}=I;if(r){var W,z;K.default_estimate=r;let n=null===(W=e.defaultGasEstimates)||void 0===W?void 0:W.maxFeePerGas,s=null===(z=e.defaultGasEstimates)||void 0===z?void 0:z.maxPriorityFeePerGas;if([l.GasRecommendations.low,l.GasRecommendations.medium,l.GasRecommendations.high].includes(r)){var X,Y;const{gasFeeEstimates:e}=await t.getEIP1559GasFeeEstimates();var Q,Z;if(null!=e&&null!==(X=e[r])&&void 0!==X&&X.suggestedMaxFeePerGas)n=null===(Q=e[r])||void 0===Q?void 0:Q.suggestedMaxFeePerGas,K.default_max_fee_per_gas=n;if(null!=e&&null!==(Y=e[r])&&void 0!==Y&&Y.suggestedMaxPriorityFeePerGas)s=null===(Z=e[r])||void 0===Z?void 0:Z.suggestedMaxPriorityFeePerGas,K.default_max_priority_fee_per_gas=s}}null!==(V=e.defaultGasEstimates)&&void 0!==V&&V.gas&&(K.default_gas=e.defaultGasEstimates.gas),null!==(J=e.defaultGasEstimates)&&void 0!==J&&J.gasPrice&&(K.default_gas_price=e.defaultGasEstimates.gasPrice)}_&&(K.estimate_suggested=_),P&&(K.estimate_used=P),null!=r&&r.gas_used&&(K.gas_used=r.gas_used);const ee=function(e){const t={};for(const r in e)(0,i.isHexString)(e[r])?t[r]=(0,p.hexWEIToDecGWEI)(e[r]):t[r]=e[r];return t}(K);let te="0";e.txParams.maxFeePerGas&&(te="2");const re=v&&[a.TransactionType.contractInteraction,a.TransactionType.tokenMethodApprove,a.TransactionType.tokenMethodIncreaseAllowance,a.TransactionType.tokenMethodSafeTransferFrom,a.TransactionType.tokenMethodSetApprovalForAll,a.TransactionType.tokenMethodTransfer,a.TransactionType.tokenMethodTransferFrom,a.TransactionType.swap,a.TransactionType.swapAndSend,a.TransactionType.swapApproval].includes(v),ne="Approve";let se,oe,ie,ae,ce,le=a.TransactionType.simpleSend;if(v===a.TransactionType.swapAndSend)le=a.TransactionType.swapAndSend;else if(v===a.TransactionType.cancel)le=a.TransactionType.cancel;else if(v===a.TransactionType.retry&&R)le=R;else if(v===a.TransactionType.deployContract)le=a.TransactionType.deployContract;else if(re){var de;le=a.TransactionType.contractInteraction,oe=q,ce=null===(de=e.txParams)||void 0===de?void 0:de.to,oe===ne&&H===u.TokenStandard.ERC20&&("0"===O||"0"===j?se=u.TransactionApprovalAmountType.revoke:j&&j!==O?se=u.TransactionApprovalAmountType.custom:O&&(se=u.TransactionApprovalAmountType.dappProposed),ie=function(e,t,r){if(e===u.TransactionApprovalAmountType.custom&&t&&r)return`${new o.BigNumber(t,10).div(r,10).times(100).round(2)}`;return null}(se,B,D),ae=function(e,t,r){if((e===u.TransactionApprovalAmountType.custom||e===u.TransactionApprovalAmountType.dappProposed)&&t&&r)return`${new o.BigNumber(t,16).div(r,10).times(100).round(2)}`;return null}(se,O,x))}const ue=t.getTransaction(N),he={RETRY:a.TransactionType.retry,CANCEL:a.TransactionType.cancel,SAME_NONCE:"other"};let pe;null!=r&&r.dropped&&(pe=he.SAME_NONCE,(null==ue?void 0:ue.type)===a.TransactionType.cancel?pe=he.CANCEL:(null==ue?void 0:ue.type)===a.TransactionType.retry&&(pe=he.RETRY));const me=[];let ge=null;1===(null==F?void 0:F.flagAsDangerous)?me.push(d.MetaMetricsEventUiCustomization.FlaggedAsMalicious):2===(null==F?void 0:F.flagAsDangerous)&&me.push(d.MetaMetricsEventUiCustomization.FlaggedAsSafetyUnknown);const fe=(0,f.getBlockaidMetricsProps)(e);(null==fe||null===(n=fe.ui_customizations)||void 0===n?void 0:n.length)>0&&me.push(...fe.ui_customizations),U&&me.push(d.MetaMetricsEventUiCustomization.GasEstimationFailed);const Ce=t.getIsRedesignedConfirmationsDeveloperEnabled()||!1,ye=t.getRedesignedTransactionsEnabled();(Ce&&C.REDESIGN_DEV_TRANSACTION_TYPES.includes(e.type)||ye&&C.REDESIGN_USER_TRANSACTION_TYPES.includes(e.type))&&(me.push(d.MetaMetricsEventUiCustomization.RedesignedConfirmation),ge=t.getIsConfirmationAdvancedDetailsOpen());const ve=(0,m.getSmartTransactionMetricsProperties)(t,e),be=(0,f.getSwapAndSendMetricsProps)(e);let we={chain_id:S,referrer:k,source:$,status:w,network:`${parseInt(S,16)}`,eip_1559_version:te,gas_edit_type:"none",gas_edit_attempted:"none",gas_estimation_failed:Boolean(U),account_type:await t.getAccountType(t.getSelectedAddress()),device_model:await t.getDeviceModel(t.getSelectedAddress()),asset_type:G,token_standard:H,transaction_type:le,transaction_speed_up:v===a.TransactionType.retry,...fe,ui_customizations:me.length>0?me:null,transaction_advanced_view:ge,transaction_contract_method:oe,...ve,...be};const Se=await(0,y.getSnapAndHardwareInfoForMetrics)(t.getAccountType,t.getDeviceModel,t.snapAndHardwareMessenger);Object.assign(we,Se),oe===ne&&(we={...we,transaction_approval_amount_type:se});let ke={transaction_envelope_type:(0,g.isEIP1559Transaction)(e)?h.TRANSACTION_ENVELOPE_TYPE_NAMES.FEE_MARKET:h.TRANSACTION_ENVELOPE_TYPE_NAMES.LEGACY,first_seen:b,gas_limit:T,transaction_replaced:pe,transaction_contract_address:ce,...r,...ee};return oe===ne&&(ke={...ke,transaction_approval_amount_vs_balance_ratio:ae,transaction_approval_amount_vs_proposed_ratio:ie}),{properties:we,sensitiveProperties:ke}}r.handlePostTransactionBalanceUpdate=async({getParticipateInMetrics:e,trackEvent:t},{transactionMeta:r,approvalTransactionMeta:n})=>{var s;if(e()&&r.swapMetaData)if("0x0"===(null===(s=r.txReceipt)||void 0===s?void 0:s.status))t({event:"Swap Failed",sensitiveProperties:{...r.swapMetaData},category:d.MetaMetricsEventCategory.Swaps});else{var i;const e=(0,h.getSwapsTokensReceivedFromTxMeta)(r.destinationTokenSymbol,r,r.destinationTokenAddress,r.txParams.from,r.destinationTokenDecimals,n,r.chainId),s=e?`${new o.BigNumber(e,10).div(r.swapMetaData.token_to_amount,10).times(100).round(2)}%`:null,a=null!==(i=r.txReceipt)&&void 0!==i&&i.gasUsed&&r.swapMetaData.estimated_gas?`${new o.BigNumber(r.txReceipt.gasUsed,16).div(r.swapMetaData.estimated_gas,10).times(100).round(2)}%`:null,c=function(e,t){var r,n;let s="0x0";null!=t&&t.txReceipt&&(s=(0,h.calcGasTotal)(t.txReceipt.gasUsed,t.txReceipt.effectiveGasPrice));const i=(0,h.calcGasTotal)(null===(r=e.txReceipt)||void 0===r?void 0:r.gasUsed,null===(n=e.txReceipt)||void 0===n?void 0:n.effectiveGasPrice),a=new o.BigNumber(i,16).plus(s,16).toString(16);return{approvalGasCostInEth:Number((0,p.hexWEIToDecETH)(s)),tradeGasCostInEth:Number((0,p.hexWEIToDecETH)(i)),tradeAndApprovalGasCostInEth:Number((0,p.hexWEIToDecETH)(a))}}(r,n);t({event:d.MetaMetricsEventName.SwapCompleted,category:d.MetaMetricsEventCategory.Swaps,sensitiveProperties:{...r.swapMetaData,token_to_amount_received:e,quote_vs_executionRatio:s,estimated_vs_used_gasRatio:a,approval_gas_cost_in_eth:c.approvalGasCostInEth,trade_gas_cost_in_eth:c.tradeGasCostInEth,trade_and_approval_gas_cost_in_eth:c.tradeAndApprovalGasCostInEth,token_to_amount:r.swapMetaData.token_to_amount.toString(10)}})}}}}},{package:"$root$",file:"app/scripts/lib/transaction/metrics.ts"}],[127,{"../../../../shared/constants/app":5693,"../../../../shared/constants/smartTransactions":5717,"../../../../shared/modules/conversion.utils":5745,"@metamask/smart-transactions-controller/dist/types":2609,"@metamask/transaction-controller":3093,loglevel:4826},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.submitSmartTransactionHook=void 0;var n,s=e("@metamask/smart-transactions-controller/dist/types"),o=e("@metamask/transaction-controller"),i=(n=e("loglevel"))&&n.__esModule?n:{default:n},a=e("../../../../shared/modules/conversion.utils"),c=e("../../../../shared/constants/smartTransactions"),l=e("../../../../shared/constants/app");function d(e,t,r){u(e,t),t.set(e,r)}function u(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function h(e,t){return e.get(m(e,t))}function p(e,t,r){return e.set(m(e,t),r),r}function m(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}var g=new WeakMap,f=new WeakMap,C=new WeakMap,y=new WeakMap,v=new WeakMap,b=new WeakMap,w=new WeakMap,S=new WeakMap,k=new WeakMap,A=new WeakMap,T=new WeakMap,E=new WeakMap,M=new WeakSet;class _{constructor(e){!function(e,t){u(e,t),t.add(e)}(this,M),d(this,g,void 0),d(this,f,void 0),d(this,C,void 0),d(this,y,void 0),d(this,v,void 0),d(this,b,void 0),d(this,w,void 0),d(this,S,void 0),d(this,k,void 0),d(this,A,void 0),d(this,T,void 0),d(this,E,void 0);const{transactionMeta:t,signedTransactionInHex:r,smartTransactionsController:n,transactionController:s,isSmartTransaction:o,controllerMessenger:i,featureFlags:a}=e;p(f,this,""),p(g,this,!1),p(A,this,t),p(T,this,r),p(S,this,n),p(k,this,s),p(w,this,o),p(y,this,i),p(v,this,a),p(b,this,t.origin!==l.ORIGIN_METAMASK),p(C,this,t.chainId),p(E,this,t.txParams)}async submit(){var e;const t=!(null===(e=h(A,this))||void 0===e||!e.type)&&[o.TransactionType.swapAndSend,o.TransactionType.swapApproval].includes(h(A,this).type),r={transactionHash:undefined};if(!h(w,this)||t)return r;const{id:n}=await h(y,this).call("ApprovalController:startFlow");let s;p(f,this,n);try{s=await h(S,this).getFees({...h(E,this),chainId:h(C,this)},undefined)}catch(e){return i.default.error("Error in smart transaction publish hook, falling back to regular transaction submission",e),m(M,this,P).call(this),r}try{var a;const e=await m(M,this,O).call(this,{getFeesResponse:s}),t=null==e?void 0:e.uuid;if(!t)throw new Error("No smart transaction UUID");const r=null===(a=h(v,this))||void 0===a||null===(a=a.smartTransactions)||void 0===a?void 0:a.returnTxHashAsap;let n;if(m(M,this,I).call(this,{uuid:t}),m(M,this,N).call(this,{uuid:t}),n=r&&null!=e&&e.txHash?e.txHash:await m(M,this,j).call(this,{uuid:t}),null===n)throw new Error("Transaction does not have a transaction hash, there was a problem");return{transactionHash:n}}catch(e){throw i.default.error("Error in smart transaction publish hook",e),m(M,this,P).call(this),e}}}function P(){h(g,this)||(p(g,this,!0),h(y,this).call("ApprovalController:endFlow",{id:h(f,this)}))}function I({uuid:e}){const t=()=>{m(M,this,P).call(this)};h(y,this).call("ApprovalController:addRequest",{id:h(f,this),origin:origin,type:l.SMART_TRANSACTION_CONFIRMATION_TYPES.showSmartTransactionStatusPage,requestState:{smartTransaction:{status:s.SmartTransactionStatuses.PENDING,creationTime:Date.now(),uuid:e},isDapp:h(b,this),txId:h(A,this).id}},!0).then(t,t)}async function R({smartTransaction:e}){return await h(y,this).call("ApprovalController:updateRequestState",{id:h(f,this),requestState:{smartTransaction:e,isDapp:h(b,this),txId:h(A,this).id}})}async function N({uuid:e}){h(y,this).subscribe("SmartTransactionsController:smartTransaction",(async t=>{if(t.uuid===e){const{status:e}=t;if(!e||e===s.SmartTransactionStatuses.PENDING)return;h(g,this)||await m(M,this,R).call(this,{smartTransaction:t})}}))}function j({uuid:e}){return new Promise((t=>{h(y,this).subscribe("SmartTransactionsController:smartTransaction",(async r=>{if(r.uuid===e){const{status:e,statusMetadata:n}=r;if(!e||e===s.SmartTransactionStatuses.PENDING)return;i.default.debug("Smart Transaction: ",r),null!=n&&n.minedHash?(i.default.debug("Smart Transaction - Received tx hash: ",null==n?void 0:n.minedHash),t(n.minedHash)):t(null)}}))}))}async function O({getFeesResponse:e}){let t;var r;h(T,this)?t=[h(T,this)]:t=await m(M,this,B).call(this,(null===(r=e.tradeTxFees)||void 0===r?void 0:r.fees)??[],!1);return await h(S,this).submitSignedTransactions({signedTransactions:t,signedCanceledTransactions:[],txParams:h(E,this),transactionMeta:h(A,this)})}function x(e,t){const r={...h(E,this),maxFeePerGas:`0x${(0,a.decimalToHex)(e.maxFeePerGas)}`,maxPriorityFeePerGas:`0x${(0,a.decimalToHex)(e.maxPriorityFeePerGas)}`,gas:t?`0x${(0,a.decimalToHex)(c.CANCEL_GAS_LIMIT_DEC)}`:h(E,this).gas};return t&&(r.to=r.from,r.data="0x"),r}async function B(e,t){const r=e.map((e=>m(M,this,x).call(this,e,t))).map((e=>({...e,chainId:e.chainId||h(C,this)})));return await h(k,this).approveTransactionsWithSameNonce(r,{hasNonce:!0})}r.submitSmartTransactionHook=e=>new _(e).submit()}}},{package:"$root$",file:"app/scripts/lib/transaction/smart-transactions.ts"}],[128,{"../../../../shared/constants/security-provider":5715,"../../../../shared/lib/trace":5735,"../ppom/ppom-util":90,"@metamask/keyring-api":1938,"ethereumjs-util":4236},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.addDappTransaction=async function(e){const{dappRequest:t}=e,{id:r,method:n,origin:s}=t,{securityAlertResponse:o,traceContext:i}=t,l={actionId:r,method:n,origin:s,requireApproval:!0,securityAlertResponse:o};(0,a.endTrace)({name:a.TraceName.Middleware,id:r});const{waitForHash:d}=await c({...e,transactionOptions:{...l,traceContext:i}}),u=await d();return(0,a.endTrace)({name:a.TraceName.Transaction,id:r}),u},r.addTransaction=async function(e){await async function(e){const{chainId:t,ppomController:r,securityAlertsEnabled:n,transactionOptions:s,transactionParams:a,updateSecurityAlertResponse:c,internalAccounts:l}=e,{type:d}=s,u=i.SECURITY_PROVIDER_EXCLUDED_TRANSACTION_TYPES.includes(d);if(!n||u)return;if(l.some((({address:e})=>{var t;return e.toLowerCase()===(null===(t=a.to)||void 0===t?void 0:t.toLowerCase())})))return;try{const{from:n,to:l,value:d,data:u}=a,{actionId:h,origin:p}=s,m={method:"eth_sendTransaction",id:h??"",origin:p??"",params:[{from:n,to:l??"",value:d??"",data:u??""}],jsonrpc:"2.0"},g=(0,o.generateSecurityAlertId)();(0,o.validateRequestWithPPOM)({ppomController:r,request:m,securityAlertId:g,chainId:t,updateSecurityAlertResponse:c});const f={...i.SECURITY_ALERT_RESPONSE_CHECKING_CHAIN,securityAlertId:g};e.transactionOptions.securityAlertResponse=f}catch(e){(0,o.handlePPOMError)(e,"Error validating JSON RPC using PPOM: ")}}(e);const{transactionMeta:t,waitForHash:r}=await c(e);if(!e.waitForSubmit)return r().catch((()=>{})),t;const n=await r();return function(e,t){return t.state.transactions.find((t=>t.hash===e))}(n,e.transactionController)};var n=e("@metamask/keyring-api"),s=e("ethereumjs-util"),o=e("../ppom/ppom-util"),i=e("../../../../shared/constants/security-provider"),a=e("../../../../shared/lib/trace");async function c(e){const{selectedAccount:t}=e;return t.type===n.EthAccountType.Erc4337?async function(e){var t;const{networkClientId:r,transactionController:n,transactionOptions:o,transactionParams:i,userOperationController:a}=e,{maxFeePerGas:c,maxPriorityFeePerGas:d}=i,{origin:u,requireApproval:h,type:p}=o,m={...i,maxFeePerGas:(0,s.addHexPrefix)(c),maxPriorityFeePerGas:(0,s.addHexPrefix)(d)},g=null==o||null===(t=o.swaps)||void 0===t?void 0:t.meta;null!=g&&g.type&&delete g.type;const f={networkClientId:r,origin:u,requireApproval:h,swaps:g,type:p},C=await a.addUserOperationFromTransaction(m,f);a.startPollingByNetworkClientId(r);return{transactionMeta:l(C.id,n),waitForHash:C.transactionHash}}(e):async function(e){const{transactionController:t,transactionOptions:r,transactionParams:n,networkClientId:s}=e,{result:o,transactionMeta:i}=await t.addTransaction(n,{...r});return{transactionMeta:i,waitForHash:()=>o}}(e)}function l(e,t){return t.state.transactions.find((t=>t.id===e))}}}},{package:"$root$",file:"app/scripts/lib/transaction/util.ts"}],[129,{"../../../../shared/constants/app":5693,"../../../../shared/constants/verification":5725,"../../../../ui/selectors":7406,"@ethersproject/hash":519,"@ethersproject/wallet":602,"@metamask/rpc-errors":2556,"@metamask/utils":3201},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createTxVerificationMiddleware=function(e,t=a.TRUSTED_SIGNERS){return function(r,d,u,h){if(r.method!==c.MESSAGE_TYPE.ETH_SEND_TRANSACTION||!Array.isArray(r.params)||!function(e){return(0,i.isObject)(e[0])&&"string"==typeof e[0].data&&"string"==typeof e[0].from&&"string"==typeof e[0].to&&"string"==typeof e[0].value&&(!(0,i.hasProperty)(e[0],"chainId")||"string"==typeof e[0].chainId&&e[0].chainId.startsWith("0x"))}(r.params))return u();const p=r.params[0],m="string"==typeof p.chainId?p.chainId.toLowerCase():(0,l.getCurrentChainId)({metamask:e.state}),g=(0,a.getExperience)(p.to.toLowerCase(),m);if(!g||!a.EXPERIENCES_TO_VERIFY.includes(g))return u();const f=`0x${p.data.slice(-a.TX_SIG_LEN)}`,C=(0,s.verifyMessage)(function(e){const t={to:(0,n.hashMessage)(e.to.toLowerCase()),from:(0,n.hashMessage)(e.from.toLowerCase()),data:(0,n.hashMessage)(e.data.toLowerCase().slice(0,e.data.length-a.TX_SIG_LEN)),value:(0,n.hashMessage)(e.value.toLowerCase())};return(0,n.hashMessage)(JSON.stringify(t))}(p),f);return C!==t[g]?h(o.rpcErrors.invalidParams("Invalid transaction signature.")):u()}};var n=e("@ethersproject/hash"),s=e("@ethersproject/wallet"),o=e("@metamask/rpc-errors"),i=e("@metamask/utils"),a=e("../../../../shared/constants/verification"),c=e("../../../../shared/constants/app"),l=e("../../../../ui/selectors")}}},{package:"$root$",file:"app/scripts/lib/tx-verification/tx-verification-middleware.ts"}],[13,{"../../../shared/constants/alarms":5690,"../../../shared/constants/app":5693,"../../../shared/constants/preferences":5714,"../../../shared/constants/time":5721,"../../../shared/modules/mv3.utils":5754,"../../../ui/helpers/utils/build-types":6714,"../metamask-controller":131,"@metamask/controller-utils":1434,"@metamask/obs-store":2288,events:4308,loglevel:4826,uuid:5620},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.AppStateController=void 0;var n=g(e("events")),s=e("@metamask/obs-store"),o=e("uuid"),i=g(e("loglevel")),a=e("@metamask/controller-utils"),c=e("../metamask-controller"),l=e("../../../shared/constants/time"),d=e("../../../shared/constants/alarms"),u=e("../../../shared/modules/mv3.utils"),h=e("../../../ui/helpers/utils/build-types"),p=e("../../../shared/constants/app"),m=e("../../../shared/constants/preferences");function g(e){return e&&e.__esModule?e:{default:e}}function f(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function C(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function y(e,t){return e.get(b(e,t))}function v(e,t,r){return e.set(b(e,t),r),r}function b(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}var w=new WeakMap,S=new WeakSet;class k extends n.default{constructor(e){const{addUnlockListener:t,isUnlocked:r,initState:n,onInactiveTimeout:o,messenger:i,extension:a}=e;var c,l;super(),f(c=this,l=S),l.add(c),C(this,"extension",void 0),C(this,"onInactiveTimeout",void 0),C(this,"store",void 0),C(this,"timer",void 0),C(this,"isUnlocked",void 0),C(this,"waitingForUnlock",void 0),C(this,"messagingSystem",void 0),function(e,t,r){f(e,t),t.set(e,r)}(this,w,void 0),this.extension=a,this.onInactiveTimeout=o||(()=>undefined),this.store=new s.ObservableStore((e=>({timeoutMinutes:m.DEFAULT_AUTO_LOCK_TIME_LIMIT,connectedStatusPopoverHasBeenShown:!0,defaultHomeActiveTabName:null,browserEnvironment:{},popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[],recoveryPhraseReminderHasBeenShown:!1,recoveryPhraseReminderLastShown:(new Date).getTime(),outdatedBrowserWarningLastShown:null,nftsDetectionNoticeDismissed:!1,showTestnetMessageInDropdown:!0,showBetaHeader:(0,h.isBeta)(),showPermissionsTour:!0,showNetworkBanner:!0,showAccountBanner:!0,trezorModel:null,onboardingDate:null,lastViewedUserSurvey:null,newPrivacyPolicyToastClickedOrClosed:null,newPrivacyPolicyToastShownDate:null,hadAdvancedGasFeesSetPriorToMigration92_3:!1,...e,qrHardware:{},nftsDropdownState:{},usedNetworks:{"0x1":!0,"0x5":!0,"0x539":!0},surveyLinkLastClickedOrClosed:null,signatureSecurityAlertResponses:{},switchedNetworkDetails:null,switchedNetworkNeverShowMessage:!1,currentExtensionPopupId:0}))(n)),this.timer=null,this.isUnlocked=r,this.waitingForUnlock=[],t(this.handleUnlock.bind(this)),i.subscribe("PreferencesController:stateChange",(({preferences:e})=>{const t=this.store.getState();"number"==typeof(null==e?void 0:e.autoLockTimeLimit)&&t.timeoutMinutes!==e.autoLockTimeLimit&&this._setInactiveTimeout(e.autoLockTimeLimit)})),i.subscribe("KeyringController:qrKeyringStateChange",(e=>this.store.updateState({qrHardware:e})));const{preferences:d}=i.call("PreferencesController:getState");"number"==typeof d.autoLockTimeLimit&&this._setInactiveTimeout(d.autoLockTimeLimit),this.messagingSystem=i,this.messagingSystem.registerActionHandler("AppStateController:getState",(()=>this.store.getState())),this.store.subscribe((e=>{this.messagingSystem.publish("AppStateController:stateChange",e,[])})),v(w,this,null)}getUnlockPromise(e){return new Promise((t=>{this.isUnlocked()?t():this.waitForUnlock(t,e)}))}waitForUnlock(e,t){this.waitingForUnlock.push({resolve:e}),this.emit(c.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE),t&&this._requestApproval()}handleUnlock(){if(this.waitingForUnlock.length>0){for(;this.waitingForUnlock.length>0;){var e;null===(e=this.waitingForUnlock.shift())||void 0===e||e.resolve()}this.emit(c.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE)}this._acceptApproval()}setDefaultHomeActiveTabName(e){this.store.updateState({defaultHomeActiveTabName:e})}setConnectedStatusPopoverHasBeenShown(){this.store.updateState({connectedStatusPopoverHasBeenShown:!0})}setRecoveryPhraseReminderHasBeenShown(){this.store.updateState({recoveryPhraseReminderHasBeenShown:!0})}setSurveyLinkLastClickedOrClosed(e){this.store.updateState({surveyLinkLastClickedOrClosed:e})}setOnboardingDate(){this.store.updateState({onboardingDate:Date.now()})}setLastViewedUserSurvey(e){this.store.updateState({lastViewedUserSurvey:e})}setNewPrivacyPolicyToastClickedOrClosed(){this.store.updateState({newPrivacyPolicyToastClickedOrClosed:!0})}setNewPrivacyPolicyToastShownDate(e){this.store.updateState({newPrivacyPolicyToastShownDate:e})}setRecoveryPhraseReminderLastShown(e){this.store.updateState({recoveryPhraseReminderLastShown:e})}setTermsOfUseLastAgreed(e){this.store.updateState({termsOfUseLastAgreed:e})}setSnapsInstallPrivacyWarningShownStatus(e){this.store.updateState({snapsInstallPrivacyWarningShown:e})}setOutdatedBrowserWarningLastShown(e){this.store.updateState({outdatedBrowserWarningLastShown:e})}setLastActiveTime(){this._resetTimer()}_setInactiveTimeout(e){this.store.updateState({timeoutMinutes:e}),this._resetTimer()}_resetTimer(){const{timeoutMinutes:e}=this.store.getState();if(this.timer?clearTimeout(this.timer):u.isManifestV3&&this.extension.alarms.clear(d.AUTO_LOCK_TIMEOUT_ALARM),!e)return;const t=Number(e);u.isManifestV3?(this.extension.alarms.create(d.AUTO_LOCK_TIMEOUT_ALARM,{delayInMinutes:t,periodInMinutes:t}),this.extension.alarms.onAlarm.addListener((e=>{e.name===d.AUTO_LOCK_TIMEOUT_ALARM&&(this.onInactiveTimeout(),this.extension.alarms.clear(d.AUTO_LOCK_TIMEOUT_ALARM))}))):this.timer=setTimeout((()=>this.onInactiveTimeout()),t*l.MINUTE)}setBrowserEnvironment(e,t){this.store.updateState({browserEnvironment:{os:e,browser:t}})}addPollingToken(e,t){t.toString()!==p.POLLING_TOKEN_ENVIRONMENT_TYPES[p.ENVIRONMENT_TYPE_BACKGROUND]&&b(S,this,T).call(this,t)&&b(S,this,A).call(this,e,t)}removePollingToken(e,t){if(t.toString()!==p.POLLING_TOKEN_ENVIRONMENT_TYPES[p.ENVIRONMENT_TYPE_BACKGROUND]){const r=this.store.getState()[t];b(S,this,T).call(this,t)&&this.store.updateState({[t]:r.filter((t=>t!==e))})}}clearPollingTokens(){this.store.updateState({popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[]})}setShowTestnetMessageInDropdown(e){this.store.updateState({showTestnetMessageInDropdown:e})}setShowBetaHeader(e){this.store.updateState({showBetaHeader:e})}setShowPermissionsTour(e){this.store.updateState({showPermissionsTour:e})}setShowNetworkBanner(e){this.store.updateState({showNetworkBanner:e})}setShowAccountBanner(e){this.store.updateState({showAccountBanner:e})}setCurrentExtensionPopupId(e){this.store.updateState({currentExtensionPopupId:e})}setSwitchedNetworkDetails(e){this.store.updateState({switchedNetworkDetails:e})}clearSwitchedNetworkDetails(){this.store.updateState({switchedNetworkDetails:null})}setSwitchedNetworkNeverShowMessage(e){this.store.updateState({switchedNetworkDetails:null,switchedNetworkNeverShowMessage:e})}setTrezorModel(e){this.store.updateState({trezorModel:e})}updateNftDropDownState(e){this.store.updateState({nftsDropdownState:e})}setFirstTimeUsedNetwork(e){const t=this.store.getState(),{usedNetworks:r}=t;r[e]=!0,this.store.updateState({usedNetworks:r})}getSignatureSecurityAlertResponse(e){return this.store.getState().signatureSecurityAlertResponses[e]}addSignatureSecurityAlertResponse(e){const t=this.store.getState(),{signatureSecurityAlertResponses:r}=t;e.securityAlertId&&this.store.updateState({signatureSecurityAlertResponses:{...r,[String(e.securityAlertId)]:e}})}setCurrentPopupId(e){this.store.updateState({currentPopupId:e})}getLastInteractedConfirmationInfo(){return this.store.getState().lastInteractedConfirmationInfo}setLastInteractedConfirmationInfo(e){this.store.updateState({lastInteractedConfirmationInfo:e})}getCurrentPopupId(){return this.store.getState().currentPopupId}_requestApproval(){y(w,this)||(v(w,this,(0,o.v4)()),this.messagingSystem.call("ApprovalController:addRequest",{id:y(w,this),origin:p.ORIGIN_METAMASK,type:a.ApprovalType.Unlock},!0).catch((()=>{v(w,this,null)})))}emit(e){return super.emit(e)}_acceptApproval(){if(y(w,this)){try{this.messagingSystem.call("ApprovalController:acceptRequest",y(w,this))}catch(e){i.default.error("Failed to unlock approval request",e)}v(w,this,null)}}}function A(e,t){const r=this.store.getState()[t];this.store.updateState({[t]:[...r,e]})}function T(e){return["popupGasPollTokens","notificationGasPollTokens","fullScreenGasPollTokens"].includes(e)}r.AppStateController=k}}},{package:"$root$",file:"app/scripts/controllers/app-state-controller.ts"}],[131,{"../../shared/constants/app":5693,"../../shared/constants/hardware-wallets":5701,"../../shared/constants/keyring":5702,"../../shared/constants/logs":5704,"../../shared/constants/metametrics":5705,"../../shared/constants/methods-tags":5706,"../../shared/constants/network":5709,"../../shared/constants/permissions":5713,"../../shared/constants/smartTransactions":5717,"../../shared/constants/swaps":5719,"../../shared/constants/time":5721,"../../shared/constants/tokens":5722,"../../shared/constants/transaction":5723,"../../shared/constants/urls":5724,"../../shared/lib/metamask-controller-utils":5729,"../../shared/lib/storage-helpers":5731,"../../shared/lib/token-util":5734,"../../shared/lib/trace":5735,"../../shared/lib/transactions-controller-utils":5736,"../../shared/modules/caip-stream":5743,"../../shared/modules/environment":5746,"../../shared/modules/mv3.utils":5754,"../../shared/modules/network.utils":5755,"../../shared/modules/selectors":5763,"../../shared/modules/string-utils":5766,"../../shared/modules/transaction.utils":5768,"../../shared/notifications":5770,"../../ui/ducks/metamask/metamask":6677,"../../ui/helpers/utils/snaps":6732,"../../ui/selectors":7406,"./constants/stream":8,"./controllers/account-order":9,"./controllers/account-tracker-controller":10,"./controllers/alert-controller":11,"./controllers/app-metadata":12,"./controllers/app-state-controller":13,"./controllers/bridge/bridge-controller":14,"./controllers/bridge/constants":15,"./controllers/bridge/types":16,"./controllers/decrypt-message":17,"./controllers/encryption-public-key":18,"./controllers/metametrics-controller":19,"./controllers/metametrics-data-deletion/metametrics-data-deletion":20,"./controllers/network-order":21,"./controllers/onboarding":22,"./controllers/permissions":26,"./controllers/preferences-controller":29,"./controllers/push-notifications":32,"./controllers/swaps":33,"./detect-multiple-instances":36,"./lib/AccountIdentitiesPetnamesBridge":47,"./lib/AddressBookPetnamesBridge":48,"./lib/ComposableObservableStore":49,"./lib/PatchStore":50,"./lib/SnapsNameProvider":51,"./lib/WeakRefObjectMap":52,"./lib/accounts/BalancesController":53,"./lib/backup":56,"./lib/createDupeReqFilterStream":57,"./lib/createEvmMethodsToNonEvmAccountReqFilterMiddleware":58,"./lib/createLoggerMiddleware":59,"./lib/createMetaRPCHandler":60,"./lib/createMetamaskMiddleware":61,"./lib/createOnboardingMiddleware":62,"./lib/createOriginMiddleware":63,"./lib/createRPCMethodTrackingMiddleware":64,"./lib/createTabIdMiddleware":66,"./lib/createTracingMiddleware":67,"./lib/encryptor-factory":68,"./lib/hardware-keyring-builder-factory":76,"./lib/multichain/address":82,"./lib/offscreen-bridge/lattice-offscreen-keyring":85,"./lib/offscreen-bridge/ledger-offscreen-bridge":86,"./lib/offscreen-bridge/trezor-offscreen-bridge":87,"./lib/ppom/indexed-db-backend":88,"./lib/ppom/ppom":91,"./lib/ppom/ppom-middleware":89,"./lib/ppom/ppom-util":90,"./lib/rpc-method-middleware":105,"./lib/segment":107,"./lib/signature/util":111,"./lib/snap-keyring":112,"./lib/snap-keyring/keyring-snaps-permissions":113,"./lib/state-utils":118,"./lib/stream-utils":119,"./lib/transaction/decode/util":125,"./lib/transaction/metrics":126,"./lib/transaction/smart-transactions":127,"./lib/transaction/util":128,"./lib/tx-verification/tx-verification-middleware":129,"./lib/util":130,"./services/data-deletion-service":282,"./snaps/preinstalled-snaps":283,"./translate":284,"@ethersproject/abi":490,"@keystonehq/metamask-airgapped-keyring":658,"@metamask/accounts-controller":1337,"@metamask/address-book-controller":1361,"@metamask/announcement-controller":1363,"@metamask/approval-controller":1372,"@metamask/assets-controllers":1394,"@metamask/base-controller":1408,"@metamask/controller-utils":1434,"@metamask/ens-controller":1462,"@metamask/eth-json-rpc-filters":1544,"@metamask/eth-json-rpc-filters/subscriptionManager":1546,"@metamask/eth-json-rpc-middleware":1616,"@metamask/eth-ledger-bridge-keyring":1696,"@metamask/eth-query":1703,"@metamask/eth-trezor-keyring":1829,"@metamask/ethjs-query":1846,"@metamask/gas-fee-controller":1854,"@metamask/json-rpc-engine":1873,"@metamask/json-rpc-middleware-stream":1877,"@metamask/keyring-api":1938,"@metamask/keyring-controller":1991,"@metamask/logging-controller":2019,"@metamask/metamask-eth-abis":2056,"@metamask/name-controller":2067,"@metamask/network-controller":2102,"@metamask/notification-controller":2182,"@metamask/notification-services-controller":2257,"@metamask/obs-store":2288,"@metamask/obs-store/dist/asStream":2287,"@metamask/permission-controller":2302,"@metamask/permission-log-controller":2388,"@metamask/phishing-controller":2418,"@metamask/ppom-validator":2453,"@metamask/profile-sync-controller":2477,"@metamask/queued-request-controller":2497,"@metamask/rate-limit-controller":2499,"@metamask/rpc-errors":2556,"@metamask/scure-bip39/dist/wordlists/english":2560,"@metamask/selected-network-controller":2572,"@metamask/signature-controller":2574,"@metamask/smart-transactions-controller":2608,"@metamask/snaps-controllers":2779,"@metamask/snaps-rpc-methods":2849,"@metamask/snaps-utils":3029,"@metamask/transaction-controller":3093,"@metamask/user-operation-controller":3133,"@sentry/browser":3311,"await-semaphore":3894,buffer:4001,"eth-chainlist":4191,"eth-lattice-keyring":4196,events:4308,lodash:4820,loglevel:4826,nanoid:4913,"readable-stream":5230},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.ONE_KEY_VIA_TREZOR_MINOR_VERSION=r.METAMASK_CONTROLLER_EVENTS=void 0;var n=Vt(e("events")),s=e("readable-stream"),o=e("@metamask/assets-controllers"),i=e("@metamask/json-rpc-engine"),a=e("@metamask/json-rpc-middleware-stream"),c=e("@metamask/obs-store"),l=e("@metamask/obs-store/dist/asStream"),d=e("@metamask/eth-json-rpc-middleware"),u=e("lodash"),h=e("@metamask/keyring-controller"),p=Vt(e("@metamask/eth-json-rpc-filters")),m=Vt(e("@metamask/eth-json-rpc-filters/subscriptionManager")),g=e("@metamask/rpc-errors"),f=e("await-semaphore"),C=Vt(e("loglevel")),y=e("@metamask/eth-trezor-keyring"),v=e("@metamask/eth-ledger-bridge-keyring"),b=Vt(e("eth-lattice-keyring")),w=e("eth-chainlist"),S=e("@keystonehq/metamask-airgapped-keyring"),k=Vt(e("@metamask/eth-query")),A=Vt(e("@metamask/ethjs-query")),T=Vt(e("nanoid")),E=e("@sentry/browser"),M=e("@metamask/address-book-controller"),_=e("@metamask/approval-controller"),P=e("@metamask/base-controller"),I=e("@metamask/ens-controller"),R=e("@metamask/phishing-controller"),N=e("@metamask/announcement-controller"),j=e("@metamask/network-controller"),O=e("@metamask/gas-fee-controller"),x=e("@metamask/permission-controller"),B=Vt(e("@metamask/smart-transactions-controller")),D=e("@metamask/selected-network-controller"),F=e("@metamask/logging-controller"),U=e("@metamask/permission-log-controller"),L=e("@metamask/rate-limit-controller"),$=e("@metamask/notification-controller"),G=e("@metamask/snaps-controllers"),H=e("@metamask/snaps-rpc-methods"),q=e("@metamask/controller-utils"),K=e("@metamask/accounts-controller"),V=e("@metamask/signature-controller"),J=e("@metamask/ppom-validator"),W=e("@metamask/scure-bip39/dist/wordlists/english"),z=e("@metamask/name-controller"),X=e("@metamask/queued-request-controller"),Y=e("@metamask/user-operation-controller"),Q=e("@metamask/transaction-controller"),Z=e("@metamask/snaps-utils"),ee=e("@ethersproject/abi"),te=e("@metamask/metamask-eth-abis"),re=e("@metamask/keyring-api"),ne=e("@metamask/profile-sync-controller"),se=e("@metamask/notification-services-controller"),oe=e("../../shared/modules/environment"),ie=e("../../shared/constants/methods-tags"),ae=e("../../shared/constants/transaction"),ce=e("../../shared/constants/swaps"),le=e("../../shared/constants/network"),de=e("../../shared/constants/smartTransactions"),ue=e("../../shared/constants/hardware-wallets"),he=e("../../shared/constants/keyring"),pe=e("../../shared/constants/permissions"),me=e("../../shared/notifications"),ge=e("../../shared/constants/time"),fe=e("../../shared/constants/app"),Ce=e("../../shared/constants/metametrics"),ye=e("../../shared/constants/logs"),ve=e("../../shared/lib/storage-helpers"),be=e("../../shared/lib/token-util"),we=e("../../shared/modules/string-utils"),Se=e("../../shared/modules/transaction.utils"),ke=e("../../shared/constants/tokens"),Ae=e("../../shared/lib/metamask-controller-utils"),Te=e("../../shared/modules/mv3.utils"),Ee=e("../../shared/modules/network.utils"),Me=e("../../shared/modules/selectors"),_e=e("../../shared/modules/caip-stream"),Pe=e("../../shared/constants/urls"),Ie=e("../../shared/lib/transactions-controller-utils"),Re=e("../../ui/selectors"),Ne=e("../../ui/ducks/metamask/metamask"),je=e("../../shared/lib/trace"),Oe=e("../../ui/helpers/utils/snaps"),xe=e("./lib/accounts/BalancesController"),Be=e("./lib/transaction/metrics"),De=e("./lib/transaction/smart-transactions"),Fe=e("./lib/snap-keyring/keyring-snaps-permissions"),Ue=e("./lib/SnapsNameProvider"),Le=e("./lib/AddressBookPetnamesBridge"),$e=e("./lib/AccountIdentitiesPetnamesBridge"),Ge=e("./lib/ppom/ppom-middleware"),He=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=Kt(t);if(r&&r.has(e))return r.get(e);var n={__proto__:null},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&{}.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}(e("./lib/ppom/ppom")),qe=e("./detect-multiple-instances"),Ke=Vt(e("./lib/ComposableObservableStore")),Ve=Vt(e("./controllers/account-tracker-controller")),Je=Vt(e("./lib/createDupeReqFilterStream")),We=Vt(e("./lib/createLoggerMiddleware")),ze=e("./lib/rpc-method-middleware"),Xe=Vt(e("./lib/createOriginMiddleware")),Ye=Vt(e("./lib/createTabIdMiddleware")),Qe=e("./controllers/network-order"),Ze=e("./controllers/account-order"),et=Vt(e("./lib/createOnboardingMiddleware")),tt=e("./lib/stream-utils"),rt=e("./controllers/preferences-controller"),nt=e("./controllers/app-state-controller"),st=e("./controllers/alert-controller"),ot=Vt(e("./controllers/onboarding")),it=Vt(e("./lib/backup")),at=Vt(e("./controllers/decrypt-message")),ct=Vt(e("./controllers/swaps")),lt=Vt(e("./controllers/metametrics-controller")),dt=e("./lib/segment"),ut=Vt(e("./lib/createMetaRPCHandler")),ht=e("./lib/util"),pt=Vt(e("./lib/createMetamaskMiddleware")),mt=e("./lib/hardware-keyring-builder-factory"),gt=Vt(e("./controllers/encryption-public-key")),ft=Vt(e("./controllers/app-metadata")),Ct=e("./controllers/permissions"),yt=e("./controllers/metametrics-data-deletion/metametrics-data-deletion"),vt=e("./services/data-deletion-service"),bt=Vt(e("./lib/createRPCMethodTrackingMiddleware")),wt=e("./lib/ppom/indexed-db-backend"),St=e("./translate"),kt=e("./lib/offscreen-bridge/trezor-offscreen-bridge"),At=e("./lib/offscreen-bridge/ledger-offscreen-bridge"),Tt=e("./lib/snap-keyring"),Et=e("./lib/encryptor-factory"),Mt=e("./lib/transaction/util"),_t=e("./lib/signature/util"),Pt=e("./lib/offscreen-bridge/lattice-offscreen-keyring"),It=Vt(e("./snaps/preinstalled-snaps")),Rt=e("./lib/WeakRefObjectMap"),Nt=e("./constants/stream"),jt=e("./lib/tx-verification/tx-verification-middleware"),Ot=e("./lib/ppom/ppom-util"),xt=Vt(e("./lib/createEvmMethodsToNonEvmAccountReqFilterMiddleware")),Bt=e("./lib/multichain/address"),Dt=e("./lib/transaction/decode/util"),Ft=e("./controllers/bridge/types"),Ut=Vt(e("./controllers/bridge/bridge-controller")),Lt=e("./controllers/bridge/constants"),$t=e("./controllers/push-notifications"),Gt=Vt(e("./lib/createTracingMiddleware")),Ht=e("./lib/PatchStore"),qt=e("./lib/state-utils");function Kt(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(Kt=function(e){return e?r:t})(e)}function Vt(e){return e&&e.__esModule?e:{default:e}}function Jt(e,t){(function(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")})(e,t),t.add(e)}function Wt(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function zt(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange",QUEUED_REQUEST_STATE_CHANGE:"QueuedRequestController:stateChange",METAMASK_NOTIFICATIONS_LIST_UPDATED:"NotificationServicesController:notificationsListUpdated",METAMASK_NOTIFICATIONS_MARK_AS_READ:"NotificationServicesController:markNotificationsAsRead",NOTIFICATIONS_STATE_CHANGE:"NotificationController:stateChange"};const Xt=r.ONE_KEY_VIA_TREZOR_MINOR_VERSION=99;var Yt=new WeakSet;class Qt extends n.default{constructor(e){var t;super(),Jt(this,Yt),Wt(this,"_trackSnapExportUsage",(0,u.wrap)((0,u.memoize)((()=>(0,u.throttle)(((e,t,r,n)=>{var s;return this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.SnapExportUsed,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:e,export:t,snap_category:null===(s=this._getSnapMetadata(e))||void 0===s?void 0:s.category,success:r,origin:n}})}),60*ge.SECOND)),((e,t,r,n)=>`${e}${t}${n}`)),((e,...t)=>e(...t)(...t)))),Wt(this,"handleWatchAssetRequest",(({asset:e,type:t,origin:r,networkClientId:n})=>{switch(t){case q.ERC20:return this.tokensController.watchAsset({asset:e,type:t,networkClientId:n});case q.ERC721:case q.ERC1155:return this.nftController.watchNft(e,t,r);default:throw new Error(`Asset type ${t} not supported`)}})),Wt(this,"removePermissionsFor",(e=>{try{this.permissionController.revokePermissions(e)}catch(e){if(!(e instanceof x.PermissionsRequestNotFoundError))throw e}})),Wt(this,"updateCaveat",((e,t,r,n)=>{try{this.controllerMessenger.call("PermissionController:updateCaveat",e,t,r,n)}catch(e){if(!(e instanceof x.PermissionsRequestNotFoundError))throw e}})),Wt(this,"updateNetworksList",(e=>{try{this.networkOrderController.updateNetworksList(e)}catch(e){throw C.default.error(e.message),e}})),Wt(this,"updateAccountsList",(e=>{try{this.accountOrderController.updateAccountsList(e)}catch(e){throw C.default.error(e.message),e}})),Wt(this,"updateHiddenAccountsList",(e=>{try{this.accountOrderController.updateHiddenAccountsList(e)}catch(e){throw C.default.error(e.message),e}})),Wt(this,"rejectPermissionsRequest",(e=>{try{this.permissionController.rejectPermissionsRequest(e)}catch(e){if(!(e instanceof x.PermissionsRequestNotFoundError))throw e}})),Wt(this,"acceptPermissionsRequest",(e=>{try{this.permissionController.acceptPermissionsRequest(e)}catch(e){if(!(e instanceof x.PermissionsRequestNotFoundError))throw e}})),Wt(this,"resolvePendingApproval",(async(e,t,r)=>{try{await this.approvalController.accept(e,t,r)}catch(e){if(!(e instanceof _.ApprovalRequestNotFoundError))throw e}})),Wt(this,"rejectPendingApproval",((e,t)=>{try{this.approvalController.reject(e,new g.JsonRpcError(t.code,t.message,t.data))}catch(e){if(!(e instanceof _.ApprovalRequestNotFoundError))throw e}}));const{isFirstMetaMaskControllerSetup:r}=e;this.defaultMaxListeners=20,this.sendUpdate=(0,u.debounce)(this.privateSendUpdate.bind(this),200*ge.MILLISECOND),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const n=e.initState||{},s="12.8.0";this.recordFirstTimeInfo(n),this.featureFlags=e.featureFlags,this.activeControllerConnections=0,this.offscreenPromise=e.offscreenPromise??Promise.resolve(),this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.initializeChainlist(),this.controllerMessenger=new P.ControllerMessenger,this.loggingController=new F.LoggingController({messenger:this.controllerMessenger.getRestricted({name:"LoggingController",allowedActions:[],allowedEvents:[]}),state:n.LoggingController}),this.localStoreApiWrapper=e.localStore,this.currentMigrationVersion=e.currentMigrationVersion,this.store=new Ke.default({state:n,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new f.Mutex,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&this.loggingController.add({type:F.LogType.GenericLog,data:{event:ye.LOG_EVENT.VERSION_UPDATE,previousVersion:e.previousVersion,version:s}})})),this.appMetadataController=new ft.default({state:n.AppMetadataController,currentMigrationVersion:this.currentMigrationVersion,currentAppVersion:s});const i=()=>{this.encryptionPublicKeyController.clearUnapproved(),this.decryptMessageController.clearUnapproved(),this.signatureController.clearUnapproved(),this.approvalController.clear(g.providerErrors.userRejectedRequest())};this.approvalController=new _.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation,typesExcludedFromRateLimiting:[q.ApprovalType.PersonalSign,q.ApprovalType.EthSignTypedData,q.ApprovalType.Transaction,q.ApprovalType.WatchAsset,q.ApprovalType.EthGetEncryptionPublicKey,q.ApprovalType.EthDecrypt]}),this.queuedRequestController=new X.QueuedRequestController({messenger:this.controllerMessenger.getRestricted({name:"QueuedRequestController",allowedActions:["NetworkController:getState","NetworkController:setActiveNetwork","SelectedNetworkController:getNetworkClientIdForDomain"],allowedEvents:["SelectedNetworkController:stateChange"]}),shouldRequestSwitchNetwork:({method:e})=>ie.methodsRequiringNetworkSwitch.includes(e),canRequestSwitchNetworkWithoutApproval:({method:e})=>ie.methodsThatCanSwitchNetworkWithoutApproval.includes(e),clearPendingConfirmations:i,showApprovalRequest:()=>{this.approvalController.getTotalApprovalCount()>0&&e.showUserConfirmation()}});const a=this.controllerMessenger.getRestricted({name:"NetworkController"});let c=n.NetworkController;if(!c){c=(0,j.getDefaultNetworkControllerState)();const e=c.networkConfigurationsByChainId;let t;e[le.CHAIN_IDS.MAINNET].name=le.MAINNET_DISPLAY_NAME,delete e[le.CHAIN_IDS.GOERLI],delete e[le.CHAIN_IDS.LINEA_GOERLI],Object.values(e).forEach((e=>{const t=e.rpcEndpoints[0].networkClientId;e.blockExplorerUrls=[q.BlockExplorerUrl[t]],e.defaultBlockExplorerUrlIndex=0})),t=e[le.CHAIN_IDS.MAINNET],c.selectedNetworkClientId=t.rpcEndpoints[t.defaultRpcEndpointIndex].networkClientId}this.networkController=new j.NetworkController({messenger:a,state:c,infuraProjectId:e.infuraProjectId}),this.networkController.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker,this.deprecatedNetworkVersions={};const l=this.controllerMessenger.getRestricted({name:"AccountsController",allowedEvents:["SnapController:stateChange","KeyringController:accountRemoved","KeyringController:stateChange"],allowedActions:["KeyringController:getAccounts","KeyringController:getKeyringsByType","KeyringController:getKeyringForAccount"]});this.accountsController=new K.AccountsController({messenger:l,state:n.AccountsController});const d=this.controllerMessenger.getRestricted({name:"PreferencesController",allowedActions:["AccountsController:setSelectedAccount","AccountsController:getSelectedAccount","AccountsController:getAccountByAddress","AccountsController:setAccountName","NetworkController:getState"],allowedEvents:["AccountsController:stateChange"]});this.preferencesController=new rt.PreferencesController({state:{currentLocale:e.initLangCode??"",...n.PreferencesController},messenger:d});const p=this.controllerMessenger.getRestricted({name:"TokenListController",allowedActions:["NetworkController:getNetworkClientById"],allowedEvents:["NetworkController:stateChange"]});this.tokenListController=new o.TokenListController({chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state}),preventPollingOnNetworkRestart:!zt(Yt,this,er).call(this,this.preferencesController.state),messenger:p,state:n.TokenListController});const m=this.controllerMessenger.getRestricted({name:"AssetsContractController",allowedActions:["NetworkController:getNetworkClientById","NetworkController:getNetworkConfigurationByNetworkClientId","NetworkController:getSelectedNetworkClient","NetworkController:getState"],allowedEvents:["PreferencesController:stateChange","NetworkController:networkDidChange"]});this.assetsContractController=new o.AssetsContractController({messenger:m,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state})});const w=this.controllerMessenger.getRestricted({name:"TokensController",allowedActions:["ApprovalController:addRequest","NetworkController:getNetworkClientById","AccountsController:getSelectedAccount","AccountsController:getAccount"],allowedEvents:["NetworkController:networkDidChange","AccountsController:selectedEvmAccountChange","PreferencesController:stateChange","TokenListController:stateChange"]});this.tokensController=new o.TokensController({state:n.TokensController,provider:this.provider,messenger:w,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state})});const k=this.controllerMessenger.getRestricted({name:"NftController",allowedEvents:["PreferencesController:stateChange","NetworkController:networkDidChange","AccountsController:selectedEvmAccountChange"],allowedActions:[`${this.approvalController.name}:addRequest`,`${this.networkController.name}:getNetworkClientById`,"AccountsController:getSelectedAccount","AccountsController:getAccount","AssetsContractController:getERC721AssetName","AssetsContractController:getERC721AssetSymbol","AssetsContractController:getERC721TokenURI","AssetsContractController:getERC721OwnerOf","AssetsContractController:getERC1155BalanceOf","AssetsContractController:getERC1155TokenURI"]});this.nftController=new o.NftController({state:n.NftController,messenger:k,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state}),onNftAdded:({address:e,symbol:t,tokenId:r,standard:n,source:s})=>this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.NftAdded,category:Ce.MetaMetricsEventCategory.Wallet,sensitiveProperties:{token_contract_address:e,token_symbol:t,token_id:r,token_standard:n,asset_type:ae.AssetType.NFT,source:s}})}),this.nftController.setApiKey(null);const A=this.controllerMessenger.getRestricted({name:"NftDetectionController",allowedEvents:["NetworkController:stateChange","PreferencesController:stateChange"],allowedActions:["ApprovalController:addRequest","NetworkController:getState","NetworkController:getNetworkClientById","AccountsController:getSelectedAccount"]});this.nftDetectionController=new o.NftDetectionController({messenger:A,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state}),getOpenSeaApiKey:()=>this.nftController.openSeaApiKey,getBalancesInSingleCall:this.assetsContractController.getBalancesInSingleCall.bind(this.assetsContractController),addNft:this.nftController.addNft.bind(this.nftController),getNftState:()=>this.nftController.state,disabled:!this.preferencesController.state.useNftDetection});const T=this.controllerMessenger.getRestricted({name:"MetaMetricsController",allowedActions:["PreferencesController:getState","NetworkController:getState","NetworkController:getNetworkClientById"],allowedEvents:["PreferencesController:stateChange","NetworkController:networkDidChange"]});this.metaMetricsController=new lt.default({state:n.MetaMetricsController,messenger:T,segment:dt.segment,version:"12.8.0",environment:"production",extension:this.extension,captureException:E.captureException}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const H=new vt.DataDeletionService,W=this.controllerMessenger.getRestricted({name:"MetaMetricsDataDeletionController",allowedActions:["MetaMetricsController:getState"],allowedEvents:[]});this.metaMetricsDataDeletionController=new yt.MetaMetricsDataDeletionController({dataDeletionService:H,messenger:W,state:n.metaMetricsDataDeletionController});const ee=this.controllerMessenger.getRestricted({name:"GasFeeController",allowedActions:["NetworkController:getEIP1559Compatibility","NetworkController:getNetworkClientById","NetworkController:getState"],allowedEvents:["NetworkController:stateChange"]}),te=ce.GAS_API_BASE_URL;this.gasFeeController=new O.GasFeeController({state:n.GasFeeController,interval:1e4,messenger:ee,clientId:ce.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkDidChange:e=>{a.subscribe("NetworkController:networkDidChange",(()=>e(this.networkController.state)))},getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${te}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${te}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>(0,Re.getCurrentChainId)({metamask:this.networkController.state})===le.CHAIN_IDS.BSC,getChainId:()=>(0,Re.getCurrentChainId)({metamask:this.networkController.state})}),this.appStateController=new nt.AppStateController({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:n.AppStateController,onInactiveTimeout:()=>this.setLocked(),messenger:this.controllerMessenger.getRestricted({name:"AppStateController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,"PreferencesController:getState"],allowedEvents:["KeyringController:qrKeyringStateChange","PreferencesController:stateChange"]}),extension:this.extension});const re=this.controllerMessenger.getRestricted({name:"CurrencyRateController",allowedActions:[`${this.networkController.name}:getNetworkClientById`]});this.currencyRateController=new o.CurrencyRateController({includeUsdRate:!0,messenger:re,state:n.CurrencyController});const ue=this.currencyRateController.fetchMultiExchangeRate.bind(this.currencyRateController);this.currencyRateController.fetchMultiExchangeRate=(...e)=>this.preferencesController.state.useCurrencyRateCheck?ue(...e):{conversionRate:null,usdConversionRate:null};const he=this.controllerMessenger.getRestricted({name:"PhishingController"});this.phishingController=new R.PhishingController({messenger:he,state:n.PhishingController,hotlistRefreshInterval:undefined,stalelistRefreshInterval:undefined}),this.ppomController=new J.PPOMController({messenger:this.controllerMessenger.getRestricted({name:"PPOMController",allowedEvents:["NetworkController:stateChange","NetworkController:networkDidChange"],allowedActions:["NetworkController:getNetworkClientById"]}),storageBackend:new wt.IndexedDBPPOMStorage("PPOMDB",1),provider:this.provider,ppomProvider:{PPOM:He.PPOM,ppomInit:()=>He.default("./ppom_bg.wasm")},state:n.PPOMController,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state}),securityAlertsEnabled:this.preferencesController.state.securityAlertsEnabled,onPreferencesChange:d.subscribe.bind(d,"PreferencesController:stateChange"),cdnBaseUrl:"static.cx.metamask.io/api/v1/confirmations/ppom",blockaidPublicKey:"066ad3e8af5583385e312c156d238055215d5f25247c1e91055afa756cb98a88"});const ve=this.controllerMessenger.getRestricted({name:"AnnouncementController"});this.announcementController=new N.AnnouncementController({messenger:ve,allAnnouncements:me.UI_NOTIFICATIONS,state:n.AnnouncementController});const be=this.controllerMessenger.getRestricted({name:"NetworkOrderController",allowedEvents:["NetworkController:stateChange"]});this.networkOrderController=new Qe.NetworkOrderController({messenger:be,state:n.NetworkOrderController});const we=this.controllerMessenger.getRestricted({name:"AccountOrderController"});this.accountOrderController=new Ze.AccountOrderController({messenger:we,state:n.AccountOrderController});const Se=this.controllerMessenger.getRestricted({name:"BalancesController",allowedEvents:["AccountsController:accountAdded","AccountsController:accountRemoved"],allowedActions:["AccountsController:listMultichainAccounts","SnapController:handleRequest"]});this.multichainBalancesController=new xe.BalancesController({messenger:Se,state:n.MultichainBalancesController});const ke=this.controllerMessenger.getRestricted({name:"RatesController"});this.multichainRatesController=new o.RatesController({state:n.MultichainRatesController,messenger:ke,includeUsdRate:!0,fetchMultiExchangeRate:o.fetchMultiExchangeRate});const Ae=this.controllerMessenger.getRestricted({name:"TokenRatesController",allowedActions:["TokensController:getState","NetworkController:getNetworkClientById","NetworkController:getState","AccountsController:getAccount","AccountsController:getSelectedAccount"],allowedEvents:["NetworkController:stateChange","AccountsController:selectedEvmAccountChange","PreferencesController:stateChange","TokensController:stateChange"]});this.tokenRatesController=new o.TokenRatesController({state:n.TokenRatesController,messenger:Ae,tokenPricesService:new o.CodefiTokenPricesServiceV2,disabled:!this.preferencesController.state.useCurrencyRateCheck}),this.controllerMessenger.subscribe("PreferencesController:stateChange",(0,ht.previousValueComparator)(((e,t)=>{const{useCurrencyRateCheck:r}=e,{useCurrencyRateCheck:n}=t;n&&!r?this.tokenRatesController.enable():!n&&r&&this.tokenRatesController.disable()}),this.preferencesController.state)),this.ensController=new I.EnsController({messenger:this.controllerMessenger.getRestricted({name:"EnsController",allowedActions:["NetworkController:getNetworkClientById"],allowedEvents:[]}),provider:this.provider,onNetworkDidChange:a.subscribe.bind(a,"NetworkController:networkDidChange")});const Ee=this.controllerMessenger.getRestricted({name:"OnboardingController",allowedActions:[],allowedEvents:[]});this.onboardingController=new ot.default({messenger:Ee,state:n.OnboardingController});let _e=[(0,h.keyringBuilderFactory)(S.MetaMaskKeyring)];const Pe=null===(t=this.opts.overrides)||void 0===t?void 0:t.keyrings;if(!1===Te.isManifestV3){const e=[(null==Pe?void 0:Pe.lattice)||b.default,S.MetaMaskKeyring],t=[{keyring:(null==Pe?void 0:Pe.trezor)||y.TrezorKeyring,bridge:(null==Pe?void 0:Pe.trezorBridge)||y.TrezorConnectBridge},{keyring:(null==Pe?void 0:Pe.ledger)||v.LedgerKeyring,bridge:(null==Pe?void 0:Pe.ledgerBridge)||v.LedgerIframeBridge}];_e=e.map((e=>(0,h.keyringBuilderFactory)(e))),t.forEach((e=>_e.push((0,mt.hardwareKeyringBuilderFactory)(e.keyring,e.bridge))))}else _e.push((0,mt.hardwareKeyringBuilderFactory)(y.TrezorKeyring,(null==Pe?void 0:Pe.trezorBridge)||kt.TrezorOffscreenBridge),(0,mt.hardwareKeyringBuilderFactory)(v.LedgerKeyring,(null==Pe?void 0:Pe.ledgerBridge)||At.LedgerOffscreenBridge),(0,h.keyringBuilderFactory)(Pt.LatticeKeyringOffscreen));const Ie=this.controllerMessenger.getRestricted({name:"SnapKeyringBuilder",allowedActions:["ApprovalController:addRequest","ApprovalController:acceptRequest","ApprovalController:rejectRequest","ApprovalController:startFlow","ApprovalController:endFlow","ApprovalController:showSuccess","ApprovalController:showError","PhishingController:test","PhishingController:maybeUpdateState","KeyringController:getAccounts","AccountsController:setSelectedAccount","AccountsController:getAccountByAddress","AccountsController:setAccountName"]});_e.push((0,Tt.snapKeyringBuilder)(Ie,(()=>this.snapController),(async()=>{await this.keyringController.persistAllKeyrings(),await this.accountsController.updateAccounts()}),(e=>this.removeAccount(e)),this.metaMetricsController.trackEvent.bind(this.metaMetricsController),(e=>{if(!e)return null;const t=this.getLocale(),{snaps:r}=this.snapController.state,n=r[e];if(!n)return(0,Z.stripSnapPrefix)(e);if(n.localizationFiles){return(0,Z.getLocalizedSnapManifest)(n.manifest,t,n.localizationFiles).proposedName}return n.manifest.proposedName}),(e=>It.default.some((t=>t.snapId===e)))));const Oe=this.controllerMessenger.getRestricted({name:"KeyringController"});this.keyringController=new h.KeyringController({cacheEncryptionKey:!0,keyringBuilders:_e,state:n.KeyringController,encryptor:e.encryptor||(0,Et.encryptorFactory)(6e5),messenger:Oe}),this.controllerMessenger.subscribe("KeyringController:unlock",(()=>this._onUnlock())),this.controllerMessenger.subscribe("KeyringController:lock",(()=>this._onLock())),this.controllerMessenger.subscribe("KeyringController:stateChange",(e=>{this._onKeyringControllerUpdate(e)})),this.permissionController=new x.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`,"SnapController:getPermitted","SnapController:install","SubjectMetadataController:getSubjectMetadata"]}),state:n.PermissionController,caveatSpecifications:(0,Ct.getCaveatSpecifications)({getInternalAccounts:this.accountsController.listAccounts.bind(this.accountsController),findNetworkClientIdByChainId:this.networkController.findNetworkClientIdByChainId.bind(this.networkController)}),permissionSpecifications:{...(0,Ct.getPermissionSpecifications)({getInternalAccounts:this.accountsController.listAccounts.bind(this.accountsController),getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e=[],t=[])=>{const r=t.filter((t=>!e.some((e=>e.address.toLowerCase()===t.toLowerCase())))).map((e=>this.keyringController.getAccountKeyringType(e))),n=e.length,s=Object.keys(this.accountTrackerController.state.accounts||{}).length;(0,E.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${n} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${s} accounts in the account tracker.`))}}),...this.getSnapPermissionSpecifications()},unrestrictedMethods:Ct.unrestrictedMethods}),this.selectedNetworkController=new D.SelectedNetworkController({messenger:this.controllerMessenger.getRestricted({name:"SelectedNetworkController",allowedActions:["NetworkController:getNetworkClientById","NetworkController:getState","NetworkController:getSelectedNetworkClient","PermissionController:hasPermissions","PermissionController:getSubjectNames"],allowedEvents:["NetworkController:stateChange","PermissionController:stateChange"]}),state:n.SelectedNetworkController,useRequestQueuePreference:this.preferencesController.state.useRequestQueue,onPreferencesStateChange:e=>{d.subscribe("PreferencesController:stateChange",e)},domainProxyMap:new Rt.WeakRefObjectMap}),this.permissionLogController=new U.PermissionLogController({messenger:this.controllerMessenger.getRestricted({name:"PermissionLogController"}),restrictedMethods:new Set(Object.keys(pe.RestrictedMethods)),state:n.PermissionLogController}),this.subjectMetadataController=new x.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:n.SubjectMetadataController,subjectCacheLimit:100});const Be=Te.isManifestV3&&"undefined"!=typeof chrome&&void 0!==chrome.offscreen,De={messenger:this.controllerMessenger.getRestricted({name:"ExecutionService"}),setupSnapProvider:this.setupSnapProvider.bind(this)};this.snapExecutionService=!1===Be?new G.IframeExecutionService({...De,iframeUrl:new URL("https://execution.metamask.io/iframe/6.9.2/index.html")}):new G.OffscreenExecutionService({...De,offscreenPromise:this.offscreenPromise});const Fe=this.controllerMessenger.getRestricted({name:"SnapController",allowedEvents:["ExecutionService:unhandledError","ExecutionService:outboundRequest","ExecutionService:outboundResponse"],allowedActions:[`${this.permissionController.name}:getEndowments`,`${this.permissionController.name}:getPermissions`,`${this.permissionController.name}:hasPermission`,`${this.permissionController.name}:hasPermissions`,`${this.permissionController.name}:requestPermissions`,`${this.permissionController.name}:revokeAllPermissions`,`${this.permissionController.name}:revokePermissions`,`${this.permissionController.name}:revokePermissionForAllSubjects`,`${this.permissionController.name}:getSubjectNames`,`${this.permissionController.name}:updateCaveat`,`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:updateRequestState`,`${this.permissionController.name}:grantPermissions`,`${this.subjectMetadataController.name}:getSubjectMetadata`,`${this.subjectMetadataController.name}:addSubjectMetadata`,"ExecutionService:executeSnap","ExecutionService:getRpcRequestHandler","ExecutionService:terminateSnap","ExecutionService:terminateAllSnaps","ExecutionService:handleRpcRequest","SnapsRegistry:get","SnapsRegistry:getMetadata","SnapsRegistry:update","SnapsRegistry:resolveVersion","SnapInterfaceController:createInterface","SnapInterfaceController:getInterface"]}),Ge=!0;this.snapController=new G.SnapController({environmentEndowmentPermissions:Object.values(pe.EndowmentPermissions),excludedPermissions:{...pe.ExcludedSnapPermissions,...pe.ExcludedSnapEndowments},closeAllConnections:this.removeAllConnections.bind(this),state:n.SnapController,messenger:Fe,featureFlags:{dappsCanUpdateSnaps:!0,allowLocalSnaps:!1,requireAllowlist:Ge,rejectInvalidPlatformVersion:!0},encryptor:(0,Et.encryptorFactory)(6e5),getMnemonic:this.getPrimaryKeyringMnemonic.bind(this),preinstalledSnaps:It.default,getFeatureFlags:()=>({disableSnaps:!1===this.preferencesController.state.useExternalServices})}),this.notificationController=new $.NotificationController({messenger:this.controllerMessenger.getRestricted({name:"NotificationController"}),state:n.NotificationController}),this.rateLimitController=new L.RateLimitController({state:n.RateLimitController,messenger:this.controllerMessenger.getRestricted({name:"RateLimitController"}),implementations:{showNativeNotification:{method:(e,t)=>{const r=this.controllerMessenger.call("SubjectMetadataController:getState").subjectMetadata[e];return this.platform._showNotification((null==r?void 0:r.name)??e,t).catch((e=>{C.default.error("Failed to create notification",e)})),null},rateLimitCount:2,rateLimitTimeout:3e5},showInAppNotification:{method:(e,t)=>(this.controllerMessenger.call("NotificationController:show",e,t),null),rateLimitCount:5,rateLimitTimeout:6e4}}});const Je=this.controllerMessenger.getRestricted({name:"CronjobController",allowedEvents:["SnapController:snapInstalled","SnapController:snapUpdated","SnapController:snapUninstalled","SnapController:snapEnabled","SnapController:snapDisabled"],allowedActions:[`${this.permissionController.name}:getPermissions`,"SnapController:handleRequest","SnapController:getAll"]});this.cronjobController=new G.CronjobController({state:n.CronjobController,messenger:Je});const We=this.controllerMessenger.getRestricted({name:"SnapsRegistry",allowedEvents:[],allowedActions:[]});this.snapsRegistry=new G.JsonSnapsRegistry({state:n.SnapsRegistry,messenger:We,refetchOnAllowlistMiss:Ge,url:{registry:"https://acl.execution.metamask.io/latest/registry.json",signature:"https://acl.execution.metamask.io/latest/signature.json"},publicKey:"0x025b65308f0f0fb8bc7f7ff87bfc296e0330eee5d3c1d1ee4a048b2fd6a86fa0a6"});const ze=this.controllerMessenger.getRestricted({name:"SnapInterfaceController",allowedActions:[`${this.phishingController.name}:maybeUpdateState`,`${this.phishingController.name}:testOrigin`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.snapController.name}:get`]});this.snapInterfaceController=new G.SnapInterfaceController({state:n.SnapInterfaceController,messenger:ze});const Xe=this.controllerMessenger.getRestricted({name:"SnapInsightsController",allowedActions:[`${this.snapController.name}:handleRequest`,`${this.snapController.name}:getAll`,`${this.permissionController.name}:getPermissions`,`${this.snapInterfaceController.name}:deleteInterface`],allowedEvents:["TransactionController:unapprovedTransactionAdded","TransactionController:transactionStatusUpdated","SignatureController:stateChange"]});this.snapInsightsController=new G.SnapInsightsController({state:n.SnapInsightsController,messenger:Xe}),this.authenticationController=new ne.AuthenticationController.Controller({state:n.AuthenticationController,messenger:this.controllerMessenger.getRestricted({name:"AuthenticationController",allowedActions:["KeyringController:getState","SnapController:handleRequest"],allowedEvents:["KeyringController:lock","KeyringController:unlock"]}),metametrics:{getMetaMetricsId:()=>this.metaMetricsController.getMetaMetricsId(),agent:"extension"}}),this.userStorageController=new ne.UserStorageController.Controller({getMetaMetricsState:()=>this.metaMetricsController.state.participateInMetaMetrics??!1,state:n.UserStorageController,config:{accountSyncing:{onAccountAdded:e=>{this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.ProfileSyncing,event:Ce.MetaMetricsEventName.AccountsSyncAdded,properties:{profile_id:e}})},onAccountNameUpdated:e=>{this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.ProfileSyncing,event:Ce.MetaMetricsEventName.AccountsSyncNameUpdated,properties:{profile_id:e}})}}},env:{isAccountSyncingEnabled:!(0,oe.isProduction)()&&Te.isManifestV3},messenger:this.controllerMessenger.getRestricted({name:"UserStorageController",allowedActions:["KeyringController:getState","KeyringController:addNewAccount","SnapController:handleRequest","AuthenticationController:getBearerToken","AuthenticationController:getSessionProfile","AuthenticationController:isSignedIn","AuthenticationController:performSignOut","AuthenticationController:performSignIn","NotificationServicesController:disableNotificationServices","NotificationServicesController:selectIsNotificationServicesEnabled","AccountsController:listAccounts","AccountsController:updateAccountMetadata"],allowedEvents:["KeyringController:lock","KeyringController:unlock","AccountsController:accountAdded","AccountsController:accountRenamed"]})});const Ye=this.controllerMessenger.getRestricted({name:"NotificationServicesPushController",allowedActions:["AuthenticationController:getBearerToken"],allowedEvents:[]});this.notificationServicesPushController=new se.NotificationServicesPushController.Controller({messenger:Ye,state:n.NotificationServicesPushController,env:{apiKey:"AIzaSyAA6MJdRkQ00zNh_moTLwxCSxcg3vznbBM",authDomain:"notifications-faf39.firebaseapp.com",storageBucket:"notifications-faf39.appspot.com",projectId:"notifications-faf39",messagingSenderId:"824598429541",appId:"1:824598429541:web:3016d3c90f1f19a6beab8c",measurementId:"G-1FGDTTCWX5",vapidKey:"BBbjhCfHvwIqRsUrBvpfx0viLJIzWHp-beyw8-I124jeZlhNGDOegS_0_I029fFb2stzRuaNkCdTAf9F3I2m3wc"},config:{isPushEnabled:Te.isManifestV3,platform:"extension",onPushNotificationReceived:$t.onPushNotificationReceived,onPushNotificationClicked:$t.onPushNotificationClicked}}),Ye.subscribe("NotificationServicesPushController:onNewNotifications",(e=>{this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.PushNotifications,event:Ce.MetaMetricsEventName.PushNotificationReceived,properties:{notification_id:e.id,notification_type:e.type,chain_id:null==e?void 0:e.chain_id}})})),Ye.subscribe("NotificationServicesPushController:pushNotificationClicked",(e=>{this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.PushNotifications,event:Ce.MetaMetricsEventName.PushNotificationClicked,properties:{notification_id:e.id,notification_type:e.type,chain_id:null==e?void 0:e.chain_id}})})),this.notificationServicesController=new se.NotificationServicesController.Controller({messenger:this.controllerMessenger.getRestricted({name:"NotificationServicesController",allowedActions:["KeyringController:getAccounts","KeyringController:getState","AuthenticationController:getBearerToken","AuthenticationController:isSignedIn","UserStorageController:enableProfileSyncing","UserStorageController:getStorageKey","UserStorageController:performGetStorage","UserStorageController:performSetStorage","NotificationServicesPushController:enablePushNotifications","NotificationServicesPushController:disablePushNotifications","NotificationServicesPushController:subscribeToPushNotifications","NotificationServicesPushController:updateTriggerPushNotifications"],allowedEvents:["KeyringController:stateChange","KeyringController:lock","KeyringController:unlock","NotificationServicesPushController:onNewNotifications"]}),state:n.NotificationServicesController,env:{isPushIntegrated:Te.isManifestV3,featureAnnouncements:{platform:"extension",spaceId:"jdkgyfmyd9sw",accessToken:"mAYNB_k65snv4AXW4o8ksZN8BwWDQF9702HKV7yBDZI"}}}),this.accountTrackerController=new Ve.default({state:{accounts:{}},messenger:this.controllerMessenger.getRestricted({name:"AccountTrackerController",allowedActions:["AccountsController:getSelectedAccount","NetworkController:getState","NetworkController:getNetworkClientById","OnboardingController:getState","PreferencesController:getState"],allowedEvents:["AccountsController:selectedEvmAccountChange","OnboardingController:stateChange","KeyringController:accountRemoved"]}),provider:this.provider,blockTracker:this.blockTracker,getNetworkIdentifier:e=>{const{type:t,rpcUrl:r}=e??(0,Ne.getProviderConfig)({metamask:this.networkController.state});return t===le.NETWORK_TYPES.RPC?r:t}}),this.on("controllerConnectionChanged",(e=>{const{completedOnboarding:t}=this.onboardingController.state;e>0&&t?this.triggerNetworkrequests():this.stopNetworkRequests()})),this.controllerMessenger.subscribe(`${this.onboardingController.name}:stateChange`,(0,ht.previousValueComparator)((async(e,t)=>{const{completedOnboarding:r}=e,{completedOnboarding:n}=t;if(!r&&n){const{address:e}=this.accountsController.getSelectedAccount();this._addAccountsWithBalance(),this.postOnboardingInitialization(),this.triggerNetworkrequests(),await this.tokenDetectionController.detectTokens({selectedAddress:e})}}),this.onboardingController.state));const et=this.controllerMessenger.getRestricted({name:"TokenDetectionController",allowedActions:["AccountsController:getAccount","AccountsController:getSelectedAccount","KeyringController:getState","NetworkController:getNetworkClientById","NetworkController:getNetworkConfigurationByNetworkClientId","NetworkController:getState","PreferencesController:getState","TokenListController:getState","TokensController:getState","TokensController:addDetectedTokens"],allowedEvents:["AccountsController:selectedEvmAccountChange","KeyringController:lock","KeyringController:unlock","NetworkController:networkDidChange","PreferencesController:stateChange","TokenListController:stateChange"]});this.tokenDetectionController=new o.TokenDetectionController({messenger:et,getBalancesInSingleCall:this.assetsContractController.getBalancesInSingleCall.bind(this.assetsContractController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),useAccountsAPI:!0,platform:"extension"});const tt=this.controllerMessenger.getRestricted({name:"AddressBookController",allowedActions:[],allowedEvents:[]});this.addressBookController=new M.AddressBookController({messenger:tt,state:n.AddressBookController}),this.alertController=new st.AlertController({state:n.AlertController,messenger:this.controllerMessenger.getRestricted({name:"AlertController",allowedEvents:["AccountsController:selectedAccountChange"],allowedActions:["AccountsController:getSelectedAccount"]})}),this.backup=new it.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,accountsController:this.accountsController,networkController:this.networkController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.snapAndHardwareMetricsParams={getSelectedAccount:this.accountsController.getSelectedAccount.bind(this.accountsController),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]})};const ut=this.controllerMessenger.getRestricted({name:"TransactionController",allowedActions:[`${this.approvalController.name}:addRequest`,"NetworkController:findNetworkClientIdByChainId","NetworkController:getNetworkClientById","AccountsController:getSelectedAccount"],allowedEvents:["NetworkController:stateChange"]});this.txController=new Q.TransactionController({blockTracker:this.blockTracker,getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getGasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getNetworkClientRegistry:this.networkController.getNetworkClientRegistry.bind(this.networkController),getNetworkState:()=>this.networkController.state,getPermittedAccounts:this.getPermittedAccounts.bind(this),getSavedGasFees:()=>this.preferencesController.state.advancedGasFee[(0,Re.getCurrentChainId)({metamask:this.networkController.state})],incomingTransactions:{etherscanApiKeysByChainId:{[le.CHAIN_IDS.MAINNET]:"HF4132KPUFK3EA3AUYSAVWB9D1QSTIZWHJ",[le.CHAIN_IDS.SEPOLIA]:"HF4132KPUFK3EA3AUYSAVWB9D1QSTIZWHJ"},includeTokenTransfers:!1,isEnabled:()=>{var e;return Boolean((null===(e=this.preferencesController.state.incomingTransactionsPreferences)||void 0===e?void 0:e[(0,Re.getCurrentChainId)({metamask:this.networkController.state})])&&this.onboardingController.state.completedOnboarding)},queryEntireHistory:!1,updateTransactions:!1},isMultichainEnabled:"",isSimulationEnabled:()=>this.preferencesController.state.useTransactionSimulations,messenger:ut,onNetworkStateChange:e=>{a.subscribe("NetworkController:networkDidChange",(()=>e()))},pendingTransactions:{isResubmitEnabled:()=>{const e=this._getMetaMaskState();return!((0,Me.getSmartTransactionsPreferenceEnabled)(e)&&(0,Me.getCurrentChainSupportsSmartTransactions)(e))}},provider:this.provider,testGasFeeFlows:!1,trace:je.trace,hooks:{publish:this._publishSmartTransactionHook.bind(this)},sign:(...e)=>this.keyringController.signTransaction(...e),state:n.TransactionController}),this._addTransactionControllerListeners(),this.decryptMessageController=new at.default({getState:this.getState.bind(this),messenger:this.controllerMessenger.getRestricted({name:"DecryptMessageController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`,`${this.keyringController.name}:decryptMessage`]}),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyController=new gt.default({messenger:this.controllerMessenger.getRestricted({name:"EncryptionPublicKeyController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`]}),getEncryptionPublicKey:this.keyringController.getEncryptionPublicKey.bind(this.keyringController),getAccountKeyringType:this.keyringController.getAccountKeyringType.bind(this.keyringController),getState:this.getState.bind(this),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.signatureController=new V.SignatureController({messenger:this.controllerMessenger.getRestricted({name:"SignatureController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.keyringController.name}:signMessage`,`${this.keyringController.name}:signPersonalMessage`,`${this.keyringController.name}:signTypedMessage`,`${this.loggingController.name}:add`,`${this.networkController.name}:getNetworkClientById`]}),trace:je.trace,decodingApiUrl:null,isDecodeSignatureRequestEnabled:()=>!0===this.preferencesController.state.useExternalServices&&this.preferencesController.state.useTransactionSimulations&&!1}),this.signatureController.hub.on("cancelWithReason",(({message:e,reason:t})=>{this.metaMetricsController.trackEvent({event:t,category:Ce.MetaMetricsEventCategory.Transactions,properties:{action:"Sign Request",type:e.type}})}));const bt=this.controllerMessenger.getRestricted({name:"SwapsController",allowedActions:["NetworkController:getState","NetworkController:getNetworkClientById","TokenRatesController:getState"],allowedEvents:[]});this.swapsController=new ct.default({messenger:bt,provider:this.provider,getBufferedGasLimit:async(e,t)=>{const{gas:r,simulationFails:n}=await this.txController.estimateGasBuffered(e.txParams,t);return{gasLimit:r,simulationFails:n}},getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getLayer1GasFee:this.txController.getLayer1GasFee.bind(this.txController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},n.SwapsController);const St=this.controllerMessenger.getRestricted({name:Lt.BRIDGE_CONTROLLER_NAME,allowedActions:["AccountsController:getSelectedAccount","NetworkController:getSelectedNetworkClient","NetworkController:findNetworkClientIdByChainId"],allowedEvents:[]});this.bridgeController=new Ut.default({messenger:St});const Nt=this.controllerMessenger.getRestricted({name:"SmartTransactionsController",allowedActions:["NetworkController:getNetworkClientById"],allowedEvents:["NetworkController:stateChange"]});this.smartTransactionsController=new B.default({supportedChainIds:(0,de.getAllowedSmartTransactionsChainIds)(),getNonceLock:this.txController.getNonceLock.bind(this.txController),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),state:n.SmartTransactionsController,messenger:Nt,getTransactions:this.txController.getTransactions.bind(this.txController),getMetaMetricsProps:async()=>{const e=this.accountsController.getSelectedAccount().address;return{accountHardwareType:await(0,Me.getHardwareWalletType)(this._getMetaMaskState()),accountType:await this.getAccountType(e),deviceModel:await this.getDeviceModel(e)}}});const jt=()=>this.preferencesController.state.useExternalNameSources;this.nameController=new z.NameController({messenger:this.controllerMessenger.getRestricted({name:"NameController",allowedActions:[]}),providers:[new z.ENSNameProvider({reverseLookup:this.ensController.reverseResolveAddress.bind(this.ensController)}),new z.EtherscanNameProvider({isEnabled:jt}),new z.TokenNameProvider({isEnabled:jt}),new z.LensNameProvider({isEnabled:jt}),new Ue.SnapsNameProvider({messenger:this.controllerMessenger.getRestricted({name:"SnapsNameProvider",allowedActions:["SnapController:getAll","SnapController:get","SnapController:handleRequest","PermissionController:getState"]})})],state:n.NameController});const Ot=this.controllerMessenger.getRestricted({name:"PetnamesBridge",allowedEvents:["NameController:stateChange","AccountsController:stateChange","AddressBookController:stateChange"],allowedActions:["AccountsController:listAccounts"]});new Le.AddressBookPetnamesBridge({addressBookController:this.addressBookController,nameController:this.nameController,messenger:Ot}).init(),new $e.AccountIdentitiesPetnamesBridge({nameController:this.nameController,messenger:Ot}).init(),this.userOperationController=new Y.UserOperationController({entrypoint:null,getGasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),messenger:this.controllerMessenger.getRestricted({name:"UserOperationController",allowedActions:["ApprovalController:addRequest","NetworkController:getNetworkClientById","KeyringController:prepareUserOperation","KeyringController:patchUserOperation","KeyringController:signUserOperation"]}),state:n.UserOperationController}),this.userOperationController.hub.on("user-operation-added",this._onUserOperationAdded.bind(this)),this.userOperationController.hub.on("transaction-updated",this._onUserOperationTransactionUpdated.bind(this)),a.subscribe("NetworkController:networkDidChange",(()=>{this.accountTrackerController.updateAccounts()})),a.subscribe("NetworkController:networkWillChange",i.bind(this)),this.metamaskMiddleware=(0,pt.default)({static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${s}`},version:s,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===fe.ORIGIN_METAMASK){const e=this.accountsController.getSelectedAccount().address;return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:(e,t)=>(0,Mt.addDappTransaction)(this.getAddTransactionRequest({transactionParams:e,dappRequest:t})),processTypedMessage:(...e)=>(0,_t.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processTypedMessageV3:(...e)=>(0,_t.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processTypedMessageV4:(...e)=>(0,_t.addTypedMessage)({signatureController:this.signatureController,signatureParams:e}),processPersonalMessage:(...e)=>(0,_t.addPersonalMessage)({signatureController:this.signatureController,signatureParams:e}),processEncryptionPublicKey:this.encryptionPublicKeyController.newRequestEncryptionPublicKey.bind(this.encryptionPublicKeyController),processDecryptMessage:this.decryptMessageController.newRequestDecryptMessage.bind(this.decryptMessageController),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.state.transactions.find((t=>t.hash===e&&t.status===Q.TransactionStatus.submitted))}),this.on("update",(e=>this._onStateUpdate(e)));const xt={AccountTracker:this.accountTrackerController,TokenRatesController:this.tokenRatesController,DecryptMessageController:this.decryptMessageController,EncryptionPublicKeyController:this.encryptionPublicKeyController,SignatureController:this.signatureController,SwapsController:this.swapsController,BridgeController:this.bridgeController,EnsController:this.ensController,ApprovalController:this.approvalController,PPOMController:this.ppomController};this.store.updateStructure({AccountsController:this.accountsController,AppStateController:this.appStateController.store,AppMetadataController:this.appMetadataController.store,MultichainBalancesController:this.multichainBalancesController,TransactionController:this.txController,KeyringController:this.keyringController,PreferencesController:this.preferencesController,MetaMetricsController:this.metaMetricsController,MetaMetricsDataDeletionController:this.metaMetricsDataDeletionController,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController,AlertController:this.alertController,OnboardingController:this.onboardingController,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController,SubjectMetadataController:this.subjectMetadataController,AnnouncementController:this.announcementController,NetworkOrderController:this.networkOrderController,AccountOrderController:this.accountOrderController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,PhishingController:this.phishingController,SelectedNetworkController:this.selectedNetworkController,LoggingController:this.loggingController,MultichainRatesController:this.multichainRatesController,SnapController:this.snapController,CronjobController:this.cronjobController,SnapsRegistry:this.snapsRegistry,NotificationController:this.notificationController,SnapInterfaceController:this.snapInterfaceController,SnapInsightsController:this.snapInsightsController,PPOMController:this.ppomController,NameController:this.nameController,UserOperationController:this.userOperationController,AuthenticationController:this.authenticationController,UserStorageController:this.userStorageController,NotificationServicesController:this.notificationServicesController,NotificationServicesPushController:this.notificationServicesPushController,...xt}),this.memStore=new Ke.default({config:{AccountsController:this.accountsController,AppStateController:this.appStateController.store,AppMetadataController:this.appMetadataController.store,MultichainBalancesController:this.multichainBalancesController,NetworkController:this.networkController,KeyringController:this.keyringController,PreferencesController:this.preferencesController,MetaMetricsController:this.metaMetricsController,MetaMetricsDataDeletionController:this.metaMetricsDataDeletionController,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController,OnboardingController:this.onboardingController,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController,SubjectMetadataController:this.subjectMetadataController,AnnouncementController:this.announcementController,NetworkOrderController:this.networkOrderController,AccountOrderController:this.accountOrderController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,NftController:this.nftController,SelectedNetworkController:this.selectedNetworkController,LoggingController:this.loggingController,TxController:this.txController,MultichainRatesController:this.multichainRatesController,SnapController:this.snapController,CronjobController:this.cronjobController,SnapsRegistry:this.snapsRegistry,NotificationController:this.notificationController,SnapInterfaceController:this.snapInterfaceController,SnapInsightsController:this.snapInsightsController,NameController:this.nameController,UserOperationController:this.userOperationController,AuthenticationController:this.authenticationController,UserStorageController:this.userStorageController,NotificationServicesController:this.notificationServicesController,QueuedRequestController:this.queuedRequestController,NotificationServicesPushController:this.notificationServicesPushController,...xt},controllerMessenger:this.controllerMessenger});const Bt=[this.accountTrackerController.resetState.bind(this.accountTrackerController),this.decryptMessageController.resetState.bind(this.decryptMessageController),this.encryptionPublicKeyController.resetState.bind(this.encryptionPublicKeyController),this.signatureController.resetState.bind(this.signatureController),this.swapsController.resetState.bind(this.swapsController),this.bridgeController.resetState.bind(this.bridgeController),this.ensController.resetState.bind(this.ensController),this.approvalController.clear.bind(this.approvalController)];Te.isManifestV3?!0===r&&(this.resetStates(Bt),this.extension.storage.session.set({isFirstMetaMaskControllerSetup:!1})):this.resetStates(Bt);!this.isUnlocked()&&this.onboardingController.state.completedOnboarding,this._startUISync(),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.setupMultichainDataAndSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(qe.onMessageReceived),(0,qe.checkForMultipleVersionsRunning)(),this.onboardingController.state.completedOnboarding&&this.postOnboardingInitialization()}postOnboardingInitialization(){const{usePhishDetect:e}=this.preferencesController.state;this.networkController.lookupNetwork(),e&&this.phishingController.maybeUpdateState();const t=this.preferencesController.state,{useTokenDetection:r,useNftDetection:n}=t??{};this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.Onboarding,event:Ce.MetaMetricsUserTrait.TokenDetectionEnabled,properties:{[Ce.MetaMetricsUserTrait.TokenDetectionEnabled]:r}}),this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.Onboarding,event:Ce.MetaMetricsUserTrait.NftAutodetectionEnabled,properties:{[Ce.MetaMetricsUserTrait.NftAutodetectionEnabled]:n}})}triggerNetworkrequests(){this.accountTrackerController.start(),this.txController.startIncomingTransactionPolling(),this.tokenDetectionController.enable()}stopNetworkRequests(){this.accountTrackerController.stop(),this.txController.stopIncomingTransactionPolling(),this.tokenDetectionController.disable()}resetStates(e){e.forEach((e=>{try{e()}catch(e){console.error(e)}}))}async getSnapKeyring(){let[e]=this.keyringController.getKeyringsByType(he.KeyringType.snap);return e||(e=await this.keyringController.addNewKeyring(he.KeyringType.snap)),e}trackInsightSnapView(e){this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.InsightSnapViewed,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:e}})}_getSnapMetadata(e){var t;return null===(t=this.snapsRegistry.state.database)||void 0===t||null===(t=t.verifiedSnaps)||void 0===t||null===(t=t[e])||void 0===t?void 0:t.metadata}async handleSnapRequest(e){try{const t=await this.controllerMessenger.call("SnapController:handleRequest",e);return this._trackSnapExportUsage(e.snapId,e.handler,!0,e.origin),t}catch(t){throw this._trackSnapExportUsage(e.snapId,e.handler,!1,e.origin),t}}getLocale(){const{currentLocale:e}=this.preferencesController.state;return e}getSnapPermissionSpecifications(){return{...(0,H.buildSnapEndowmentSpecifications)(Object.keys(pe.ExcludedSnapEndowments)),...(0,H.buildSnapRestrictedMethodSpecifications)(Object.keys(pe.ExcludedSnapPermissions),{getPreferences:()=>({locale:this.getLocale(),currency:this.currencyRateController.state.currentCurrency}),clearSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:clearSnapState"),getMnemonic:this.getPrimaryKeyringMnemonic.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:get"),handleSnapRpcRequest:this.handleSnapRequest.bind(this),getSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getSnapState"),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),showNativeNotification:(e,t)=>this.controllerMessenger.call("RateLimitController:call",e,"showNativeNotification",e,t.message),showInAppNotification:(e,t)=>this.controllerMessenger.call("RateLimitController:call",e,"showInAppNotification",e,t.message),updateSnapState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:updateSnapState"),maybeUpdatePhishingList:()=>{const{usePhishDetect:e}=this.preferencesController.state;e&&this.controllerMessenger.call("PhishingController:maybeUpdateState")},isOnPhishingList:e=>{const{usePhishDetect:t}=this.preferencesController.store.getState();return!!t&&this.controllerMessenger.call("PhishingController:testOrigin",e).result},createInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:createInterface"),getInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:getInterface"),getSnapKeyring:this.getSnapKeyring.bind(this)})}}dismissNotifications(e){this.notificationController.dismiss(e)}markNotificationsAsRead(e){this.notificationController.markRead(e)}setupControllerEventSubscriptions(){let e;this.controllerMessenger.subscribe("PreferencesController:stateChange",(0,ht.previousValueComparator)((async(e,t)=>{var r;const{currentLocale:n}=t,s=(0,Re.getCurrentChainId)({metamask:this.networkController.state});await(0,St.updateCurrentLocale)(n),null!==(r=t.incomingTransactionsPreferences)&&void 0!==r&&r[s]?this.txController.startIncomingTransactionPolling():this.txController.stopIncomingTransactionPolling(),zt(Yt,this,Zt).call(this,t,e)}),this.preferencesController.state)),this.controllerMessenger.subscribe(`${this.accountsController.name}:selectedAccountChange`,(async t=>{t.address&&t.address!==e&&(e=t.address,await this._onAccountChange(t.address))})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(e,t)=>{const r=(0,Ct.diffMap)(e,t);for(const[e,t]of r.entries())this._notifyAccountsChange(e,t)}),Ct.getPermittedAccountsByOrigin),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(e,t)=>{const r=(0,Ct.diffMap)(e,t);for(const[e,t]of r.entries()){const r=this.selectedNetworkController.getNetworkClientIdForDomain(e),{chainId:n}=this.networkController.getNetworkConfigurationByNetworkClientId(r);if(t.length>0&&!t.includes(n)){const r=this.networkController.findNetworkClientIdByChainId(t[0]);this.selectedNetworkController.setNetworkClientIdForDomain(e,r),this.networkController.setActiveNetwork(r)}}}),Ct.getPermittedChainsByOrigin),this.controllerMessenger.subscribe("NetworkController:networkDidChange",(async()=>{await this.txController.updateIncomingTransactions()})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstallStarted`,((e,t,r)=>{var n;const s=null===(n=this._getSnapMetadata(e))||void 0===n?void 0:n.category;this.metaMetricsController.trackEvent({event:r?Ce.MetaMetricsEventName.SnapUpdateStarted:Ce.MetaMetricsEventName.SnapInstallStarted,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:e,origin:t,snap_category:s}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstallFailed`,((e,t,r,n)=>{var s;const o=n.includes("User rejected the request."),i=r?Ce.MetaMetricsEventName.SnapUpdateFailed:Ce.MetaMetricsEventName.SnapInstallFailed,a=r?Ce.MetaMetricsEventName.SnapUpdateRejected:Ce.MetaMetricsEventName.SnapInstallRejected,c=null===(s=this._getSnapMetadata(e))||void 0===s?void 0:s.category;this.metaMetricsController.trackEvent({event:o?a:i,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:e,origin:t,snap_category:c}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapInstalled`,((e,t)=>{var r;const n=e.id,s=null===(r=this._getSnapMetadata(n))||void 0===r?void 0:r.category;this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.SnapInstalled,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:n,version:e.version,origin:t,snap_category:s}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapUpdated`,((e,t,r)=>{var n;const s=e.id,o=null===(n=this._getSnapMetadata(s))||void 0===n?void 0:n.category;this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.SnapUpdated,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:s,old_version:t,new_version:e.version,origin:r,snap_category:o}})})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapTerminated`,(e=>{const t=Object.values(this.approvalController.state.pendingApprovals).filter((t=>t.origin===e.id&&t.type.startsWith(pe.RestrictedMethods.snap_dialog)));for(const e of t)this.approvalController.reject(e.id,new Error("Snap was terminated."))})),this.controllerMessenger.subscribe(`${this.snapController.name}:snapUninstalled`,(e=>{var t;const r=Object.values(this.notificationController.state.notifications).reduce(((t,r)=>(r.origin===e.id&&t.push(r.id),t)),[]);this.dismissNotifications(r);const n=e.id,s=null===(t=this._getSnapMetadata(n))||void 0===t?void 0:t.category;this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.SnapUninstalled,category:Ce.MetaMetricsEventCategory.Snaps,properties:{snap_id:n,version:e.version,snap_category:s}})}))}setupMultichainDataAndSubscriptions(){(0,re.isEvmAccountType)(this.accountsController.getSelectedMultichainAccount().type)||this.multichainRatesController.start(),this.controllerMessenger.subscribe("AccountsController:selectedAccountChange",(e=>{(0,re.isEvmAccountType)(e.type)?this.multichainRatesController.stop():this.multichainRatesController.start()})),this.multichainBalancesController.start(),this.multichainBalancesController.updateBalances()}createPublicConfigStore(){const e=new c.ObservableStore,t=async({isUnlocked:e})=>{const{chainId:t,networkVersion:r}=await this.getProviderNetworkState();return{isUnlocked:e,chainId:t,networkVersion:r??"loading"}},r=async r=>{var n;(null===(n=r.networksMetadata[r.selectedNetworkClientId])||void 0===n?void 0:n.status)===le.NetworkStatus.Available&&e.putState(await t(r))};return this.on("update",r),r(this.getState()),e}async getProviderState(e){const t=await this.getProviderNetworkState(this.preferencesController.getUseRequestQueue()?e:undefined);return{isUnlocked:this.isUnlocked(),accounts:await this.getPermittedAccounts(e),...t}}async getProviderNetworkState(e=D.METAMASK_DOMAIN){const t=this.controllerMessenger.call("SelectedNetworkController:getNetworkClientIdForDomain",e),r=this.controllerMessenger.call("NetworkController:getNetworkClientById",t),{chainId:n}=r.configuration,{completedOnboarding:s}=this.onboardingController.state;let o=this.deprecatedNetworkVersions[t];if(!o&&s){const e=new k.default(r.provider);o=await new Promise((t=>{e.sendAsync({method:"net_version"},((e,r)=>{e?(console.error(e),t(null)):t((0,Ee.convertNetworkId)(r))}))})),this.deprecatedNetworkVersions[t]=o}return{chainId:n,networkVersion:o??"loading"}}getState(){const{vault:e}=this.keyringController.state,t=Boolean(e),r=this.memStore.getFlatState();return{isInitialized:t,...(0,qt.sanitizeUIState)(r)}}getApi(){const{accountsController:e,addressBookController:t,alertController:r,appStateController:n,keyringController:s,nftController:o,nftDetectionController:i,currencyRateController:a,tokenDetectionController:c,ensController:l,tokenListController:d,gasFeeController:u,metaMetricsController:h,networkController:p,announcementController:m,onboardingController:g,permissionController:f,preferencesController:C,tokensController:y,smartTransactionsController:v,txController:b,assetsContractController:w,backup:S,approvalController:A,phishingController:T,tokenRatesController:E,authenticationController:M,userStorageController:_,notificationServicesController:P,notificationServicesPushController:I}=this;return{getState:this.getState.bind(this),setCurrentCurrency:a.setCurrentCurrency.bind(a),setUseBlockie:C.setUseBlockie.bind(C),setUseNonceField:C.setUseNonceField.bind(C),setUsePhishDetect:C.setUsePhishDetect.bind(C),setUseMultiAccountBalanceChecker:C.setUseMultiAccountBalanceChecker.bind(C),setUseSafeChainsListValidation:C.setUseSafeChainsListValidation.bind(C),setUseTokenDetection:C.setUseTokenDetection.bind(C),setUseNftDetection:C.setUseNftDetection.bind(C),setUse4ByteResolution:C.setUse4ByteResolution.bind(C),setUseCurrencyRateCheck:C.setUseCurrencyRateCheck.bind(C),setOpenSeaEnabled:C.setOpenSeaEnabled.bind(C),getUseRequestQueue:this.preferencesController.getUseRequestQueue.bind(this.preferencesController),getProviderConfig:()=>(0,Ne.getProviderConfig)({metamask:this.networkController.state}),grantPermissionsIncremental:this.permissionController.grantPermissionsIncremental.bind(this.permissionController),grantPermissions:this.permissionController.grantPermissions.bind(this.permissionController),setSecurityAlertsEnabled:C.setSecurityAlertsEnabled.bind(C),setAddSnapAccountEnabled:C.setAddSnapAccountEnabled.bind(C),setBitcoinSupportEnabled:C.setBitcoinSupportEnabled.bind(C),setBitcoinTestnetSupportEnabled:C.setBitcoinTestnetSupportEnabled.bind(C),setUseExternalNameSources:C.setUseExternalNameSources.bind(C),setUseTransactionSimulations:C.setUseTransactionSimulations.bind(C),setUseRequestQueue:this.setUseRequestQueue.bind(this),setIpfsGateway:C.setIpfsGateway.bind(C),setIsIpfsGatewayEnabled:C.setIsIpfsGatewayEnabled.bind(C),setUseAddressBarEnsResolution:C.setUseAddressBarEnsResolution.bind(C),setParticipateInMetaMetrics:h.setParticipateInMetaMetrics.bind(h),setDataCollectionForMarketing:h.setDataCollectionForMarketing.bind(h),setMarketingCampaignCookieId:h.setMarketingCampaignCookieId.bind(h),setCurrentLocale:C.setCurrentLocale.bind(C),setIncomingTransactionsPreferences:C.setIncomingTransactionsPreferences.bind(C),setServiceWorkerKeepAlivePreference:C.setServiceWorkerKeepAlivePreference.bind(C),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),requestUserApproval:A.addAndShowApprovalRequest.bind(A),addNewAccount:this.addNewAccount.bind(this),getSeedPhrase:this.getSeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),getNextAvailableAccountName:e.getNextAvailableAccountName.bind(e),getAccountsBySnapId:e=>(0,Tt.getAccountsBySnapId)(this,e),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),getDeviceNameForMetric:this.getDeviceNameForMetric.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),submitQRHardwareCryptoHDKey:s.submitQRCryptoHDKey.bind(s),submitQRHardwareCryptoAccount:s.submitQRCryptoAccount.bind(s),cancelSyncQRHardware:s.cancelQRSynchronization.bind(s),submitQRHardwareSignature:s.submitQRSignature.bind(s),cancelQRHardwareSignRequest:s.cancelQRSignRequest.bind(s),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setActiveNetwork:e=>this.networkController.setActiveNetwork(e),setActiveNetworkConfigurationId:e=>{this.networkController.setActiveNetwork(e)},setNetworkClientIdForDomain:(e,t)=>this.selectedNetworkController.setNetworkClientIdForDomain(e,t),rollbackToPreviousProvider:p.rollbackToPreviousProvider.bind(p),addNetwork:this.networkController.addNetwork.bind(this.networkController),updateNetwork:this.networkController.updateNetwork.bind(this.networkController),removeNetwork:this.networkController.removeNetwork.bind(this.networkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getNetworkConfigurationByNetworkClientId:this.networkController.getNetworkConfigurationByNetworkClientId.bind(this.networkController),setSelectedAddress:e=>{const t=this.accountsController.getAccountByAddress(e);if(!t)throw new Error(`No account found for address: ${e}`);this.accountsController.setSelectedAccount(t.id)},toggleExternalServices:this.toggleExternalServices.bind(this),addToken:y.addToken.bind(y),updateTokenType:y.updateTokenType.bind(y),setFeatureFlag:C.setFeatureFlag.bind(C),setPreference:C.setPreference.bind(C),addKnownMethodData:C.addKnownMethodData.bind(C),setDismissSeedBackUpReminder:C.setDismissSeedBackUpReminder.bind(C),setOverrideContentSecurityPolicyHeader:C.setOverrideContentSecurityPolicyHeader.bind(C),setAdvancedGasFee:C.setAdvancedGasFee.bind(C),setTheme:C.setTheme.bind(C),setSnapsAddSnapAccountModalDismissed:C.setSnapsAddSnapAccountModalDismissed.bind(C),setSelectedInternalAccount:e=>{this.accountsController.getAccount(e)&&this.accountsController.setSelectedAccount(e)},setAccountName:e.setAccountName.bind(e),setAccountLabel:(e,t)=>{const r=this.accountsController.getAccountByAddress(e);if(r===undefined)throw new Error(`No account found for address: ${e}`);this.accountsController.setAccountName(r.id,t)},getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),getTokenSymbol:this.getTokenSymbol.bind(this),addNft:o.addNft.bind(o),addNftVerifyOwnership:o.addNftVerifyOwnership.bind(o),removeAndIgnoreNft:o.removeAndIgnoreNft.bind(o),removeNft:o.removeNft.bind(o),checkAndUpdateAllNftsOwnershipStatus:o.checkAndUpdateAllNftsOwnershipStatus.bind(o),checkAndUpdateSingleNftOwnershipStatus:o.checkAndUpdateSingleNftOwnershipStatus.bind(o),getNFTContractInfo:o.getNFTContractInfo.bind(o),isNftOwner:o.isNftOwner.bind(o),setAddressBook:t.set.bind(t),removeFromAddressBook:t.delete.bind(t),setLastActiveTime:n.setLastActiveTime.bind(n),setCurrentExtensionPopupId:n.setCurrentExtensionPopupId.bind(n),setDefaultHomeActiveTabName:n.setDefaultHomeActiveTabName.bind(n),setConnectedStatusPopoverHasBeenShown:n.setConnectedStatusPopoverHasBeenShown.bind(n),setRecoveryPhraseReminderHasBeenShown:n.setRecoveryPhraseReminderHasBeenShown.bind(n),setRecoveryPhraseReminderLastShown:n.setRecoveryPhraseReminderLastShown.bind(n),setTermsOfUseLastAgreed:n.setTermsOfUseLastAgreed.bind(n),setSurveyLinkLastClickedOrClosed:n.setSurveyLinkLastClickedOrClosed.bind(n),setOnboardingDate:n.setOnboardingDate.bind(n),setLastViewedUserSurvey:n.setLastViewedUserSurvey.bind(n),setNewPrivacyPolicyToastClickedOrClosed:n.setNewPrivacyPolicyToastClickedOrClosed.bind(n),setNewPrivacyPolicyToastShownDate:n.setNewPrivacyPolicyToastShownDate.bind(n),setSnapsInstallPrivacyWarningShownStatus:n.setSnapsInstallPrivacyWarningShownStatus.bind(n),setOutdatedBrowserWarningLastShown:n.setOutdatedBrowserWarningLastShown.bind(n),setShowTestnetMessageInDropdown:n.setShowTestnetMessageInDropdown.bind(n),setShowBetaHeader:n.setShowBetaHeader.bind(n),setShowPermissionsTour:n.setShowPermissionsTour.bind(n),setShowAccountBanner:n.setShowAccountBanner.bind(n),setShowNetworkBanner:n.setShowNetworkBanner.bind(n),updateNftDropDownState:n.updateNftDropDownState.bind(n),setFirstTimeUsedNetwork:n.setFirstTimeUsedNetwork.bind(n),setSwitchedNetworkDetails:n.setSwitchedNetworkDetails.bind(n),clearSwitchedNetworkDetails:n.clearSwitchedNetworkDetails.bind(n),setSwitchedNetworkNeverShowMessage:n.setSwitchedNetworkNeverShowMessage.bind(n),getLastInteractedConfirmationInfo:n.getLastInteractedConfirmationInfo.bind(n),setLastInteractedConfirmationInfo:n.setLastInteractedConfirmationInfo.bind(n),tryReverseResolveAddress:l.reverseResolveAddress.bind(l),setLocked:this.setLocked.bind(this),createNewVaultAndKeychain:this.createNewVaultAndKeychain.bind(this),createNewVaultAndRestore:this.createNewVaultAndRestore.bind(this),exportAccount:this.exportAccount.bind(this),updateTransaction:b.updateTransaction.bind(b),approveTransactionsWithSameNonce:b.approveTransactionsWithSameNonce.bind(b),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),estimateGasFee:b.estimateGasFee.bind(b),getNextNonce:this.getNextNonce.bind(this),addTransaction:(e,t)=>(0,Mt.addTransaction)(this.getAddTransactionRequest({transactionParams:e,transactionOptions:t,waitForSubmit:!1})),addTransactionAndWaitForPublish:(e,t)=>(0,Mt.addTransaction)(this.getAddTransactionRequest({transactionParams:e,transactionOptions:t,waitForSubmit:!0})),createTransactionEventFragment:Be.createTransactionEventFragmentWithTxId.bind(null,this.getTransactionMetricsRequest()),getTransactions:this.txController.getTransactions.bind(this.txController),updateEditableParams:this.txController.updateEditableParams.bind(this.txController),updateTransactionGasFees:b.updateTransactionGasFees.bind(b),updateTransactionSendFlowHistory:b.updateTransactionSendFlowHistory.bind(b),updatePreviousGasParams:b.updatePreviousGasParams.bind(b),abortTransactionSigning:b.abortTransactionSigning.bind(b),getLayer1GasFee:b.getLayer1GasFee.bind(b),decryptMessage:this.decryptMessageController.decryptMessage.bind(this.decryptMessageController),decryptMessageInline:this.decryptMessageController.decryptMessageInline.bind(this.decryptMessageController),cancelDecryptMessage:this.decryptMessageController.cancelDecryptMessage.bind(this.decryptMessageController),encryptionPublicKey:this.encryptionPublicKeyController.encryptionPublicKey.bind(this.encryptionPublicKeyController),cancelEncryptionPublicKey:this.encryptionPublicKeyController.cancelEncryptionPublicKey.bind(this.encryptionPublicKeyController),setSeedPhraseBackedUp:g.setSeedPhraseBackedUp.bind(g),completeOnboarding:g.completeOnboarding.bind(g),setFirstTimeFlowType:g.setFirstTimeFlowType.bind(g),setAlertEnabledness:r.setAlertEnabledness.bind(r),setUnconnectedAccountAlertShown:r.setUnconnectedAccountAlertShown.bind(r),setWeb3ShimUsageAlertDismissed:r.setWeb3ShimUsageAlertDismissed.bind(r),removePermissionsFor:this.removePermissionsFor,approvePermissionsRequest:this.acceptPermissionsRequest,rejectPermissionsRequest:this.rejectPermissionsRequest,...(0,Ct.getPermissionBackgroundApiMethods)(f),disableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:disable"),enableSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:enable"),updateSnap:(e,t)=>(this.controllerMessenger.call("SnapController:install",e,t),null),removeSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:remove"),handleSnapRequest:this.handleSnapRequest.bind(this),revokeDynamicSnapPermissions:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:revokeDynamicPermissions"),dismissNotifications:this.dismissNotifications.bind(this),markNotificationsAsRead:this.markNotificationsAsRead.bind(this),disconnectOriginFromSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:disconnectOrigin"),updateNetworksList:this.updateNetworksList.bind(this),updateAccountsList:this.updateAccountsList.bind(this),updateHiddenAccountsList:this.updateHiddenAccountsList.bind(this),getPhishingResult:async e=>(await T.maybeUpdateState(),T.test(e)),deleteInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:deleteInterface"),updateInterfaceState:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:updateInterfaceState"),fetchAndSetQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:fetchAndSetQuotes"),setSelectedQuoteAggId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSelectedQuoteAggId"),resetSwapsState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:resetSwapsState"),setSwapsTokens:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTokens"),clearSwapsQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:clearSwapsQuotes"),setApproveTxId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setApproveTxId"),setTradeTxId:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setTradeTxId"),setSwapsTxGasPrice:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxGasPrice"),setSwapsTxGasLimit:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxGasLimit"),setSwapsTxMaxFeePerGas:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxMaxFeePerGas"),setSwapsTxMaxFeePriorityPerGas:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsTxMaxFeePriorityPerGas"),safeRefetchQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:safeRefetchQuotes"),stopPollingForQuotes:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:stopPollingForQuotes"),setBackgroundSwapRouteState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setBackgroundSwapRouteState"),resetPostFetchState:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:resetPostFetchState"),setSwapsErrorKey:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsErrorKey"),setInitialGasEstimate:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setInitialGasEstimate"),setCustomApproveTxData:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setCustomApproveTxData"),setSwapsLiveness:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsLiveness"),setSwapsFeatureFlags:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsFeatureFlags"),setSwapsUserFeeLevel:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsUserFeeLevel"),setSwapsQuotesPollingLimitEnabled:this.controllerMessenger.call.bind(this.controllerMessenger,"SwapsController:setSwapsQuotesPollingLimitEnabled"),[Ft.BridgeBackgroundAction.SET_FEATURE_FLAGS]:this.controllerMessenger.call.bind(this.controllerMessenger,`${Lt.BRIDGE_CONTROLLER_NAME}:${Ft.BridgeBackgroundAction.SET_FEATURE_FLAGS}`),[Ft.BridgeBackgroundAction.RESET_STATE]:this.controllerMessenger.call.bind(this.controllerMessenger,`${Lt.BRIDGE_CONTROLLER_NAME}:${Ft.BridgeBackgroundAction.RESET_STATE}`),[Ft.BridgeUserAction.SELECT_SRC_NETWORK]:this.controllerMessenger.call.bind(this.controllerMessenger,`${Lt.BRIDGE_CONTROLLER_NAME}:${Ft.BridgeUserAction.SELECT_SRC_NETWORK}`),[Ft.BridgeUserAction.SELECT_DEST_NETWORK]:this.controllerMessenger.call.bind(this.controllerMessenger,`${Lt.BRIDGE_CONTROLLER_NAME}:${Ft.BridgeUserAction.SELECT_DEST_NETWORK}`),[Ft.BridgeUserAction.UPDATE_QUOTE_PARAMS]:this.controllerMessenger.call.bind(this.controllerMessenger,`${Lt.BRIDGE_CONTROLLER_NAME}:${Ft.BridgeUserAction.UPDATE_QUOTE_PARAMS}`),fetchSmartTransactionFees:v.getFees.bind(v),clearSmartTransactionFees:v.clearFees.bind(v),submitSignedTransactions:v.submitSignedTransactions.bind(v),cancelSmartTransaction:v.cancelSmartTransaction.bind(v),fetchSmartTransactionsLiveness:v.fetchLiveness.bind(v),updateSmartTransaction:v.updateSmartTransaction.bind(v),setStatusRefreshInterval:v.setStatusRefreshInterval.bind(v),trackMetaMetricsEvent:h.trackEvent.bind(h),trackMetaMetricsPage:h.trackPage.bind(h),createEventFragment:h.createEventFragment.bind(h),updateEventFragment:h.updateEventFragment.bind(h),finalizeEventFragment:h.finalizeEventFragment.bind(h),trackInsightSnapView:this.trackInsightSnapView.bind(this),resolvePendingApproval:this.resolvePendingApproval,rejectPendingApproval:this.rejectPendingApproval,resetViewedNotifications:m.resetViewed.bind(m),updateViewedNotifications:m.updateViewed.bind(m),currencyRateStartPolling:a.startPolling.bind(a),currencyRateStopPollingByPollingToken:a.stopPollingByPollingToken.bind(a),tokenRatesStartPolling:E.startPolling.bind(E),tokenRatesStopPollingByPollingToken:E.stopPollingByPollingToken.bind(E),tokenDetectionStartPolling:c.startPolling.bind(c),tokenDetectionStopPollingByPollingToken:c.stopPollingByPollingToken.bind(c),tokenListStartPolling:d.startPolling.bind(d),tokenListStopPollingByPollingToken:d.stopPollingByPollingToken.bind(d),gasFeeStartPollingByNetworkClientId:u.startPollingByNetworkClientId.bind(u),gasFeeStopPollingByPollingToken:u.stopPollingByPollingToken.bind(u),getGasFeeTimeEstimate:u.getTimeEstimate.bind(u),addPollingTokenToAppState:n.addPollingToken.bind(n),removePollingTokenFromAppState:n.removePollingToken.bind(n),backupUserData:S.backupUserData.bind(S),restoreUserData:S.restoreUserData.bind(S),detectTokens:c.detectTokens.bind(c),detectNfts:i.detectNfts.bind(i),addDetectedTokens:y.addDetectedTokens.bind(y),addImportedTokens:y.addTokens.bind(y),ignoreTokens:y.ignoreTokens.bind(y),getBalancesInSingleCall:w.getBalancesInSingleCall.bind(w),performSignIn:M.performSignIn.bind(M),performSignOut:M.performSignOut.bind(M),enableProfileSyncing:_.enableProfileSyncing.bind(_),disableProfileSyncing:_.disableProfileSyncing.bind(_),setIsProfileSyncingEnabled:_.setIsProfileSyncingEnabled.bind(_),syncInternalAccountsWithUserStorage:_.syncInternalAccountsWithUserStorage.bind(_),deleteAccountSyncingDataFromUserStorage:_.performDeleteStorageAllFeatureEntries.bind(_),checkAccountsPresence:P.checkAccountsPresence.bind(P),createOnChainTriggers:P.createOnChainTriggers.bind(P),deleteOnChainTriggersByAccount:P.deleteOnChainTriggersByAccount.bind(P),updateOnChainTriggersByAccount:P.updateOnChainTriggersByAccount.bind(P),fetchAndUpdateMetamaskNotifications:P.fetchAndUpdateMetamaskNotifications.bind(P),markMetamaskNotificationsAsRead:P.markMetamaskNotificationsAsRead.bind(P),setFeatureAnnouncementsEnabled:P.setFeatureAnnouncementsEnabled.bind(P),enablePushNotifications:I.enablePushNotifications.bind(I),disablePushNotifications:I.disablePushNotifications.bind(I),updateTriggerPushNotifications:I.updateTriggerPushNotifications.bind(I),enableMetamaskNotifications:P.enableMetamaskNotifications.bind(P),disableMetamaskNotifications:P.disableNotificationServices.bind(P),throwTestError:this.throwTestError.bind(this),updateProposedNames:this.nameController.updateProposedNames.bind(this.nameController),setName:this.nameController.setName.bind(this.nameController),multichainUpdateBalance:e=>this.multichainBalancesController.updateBalance(e),multichainUpdateBalances:()=>this.multichainBalancesController.updateBalances(),decodeTransactionData:e=>(0,Dt.decodeTransactionData)({...e,ethQuery:new k.default(this.provider)}),createMetaMetricsDataDeletionTask:this.metaMetricsDataDeletionController.createMetaMetricsDataDeletionTask.bind(this.metaMetricsDataDeletionController),updateDataDeletionTaskStatus:this.metaMetricsDataDeletionController.updateDataDeletionTaskStatus.bind(this.metaMetricsDataDeletionController),endTrace:je.endTrace}}async exportAccount(e,t){return await this.verifyPassword(t),this.keyringController.exportAccount(t,e)}async getTokenStandardAndDetails(e,t,r){var n,s;const{tokenList:o}=this.tokenListController.state,{tokens:i}=this.tokensController.state,a={...ke.STATIC_MAINNET_TOKEN_LIST[null==e?void 0:e.toLowerCase()]||{},...o[e.toLowerCase()]||{},...i.find((({address:t})=>(0,we.isEqualCaseInsensitive)(t,e)))||{}},c=(0,we.isEqualCaseInsensitive)(a.standard,ae.TokenStandard.ERC20)||!0===a.erc20,l=!(r||(0,we.isEqualCaseInsensitive)(a.standard,ae.TokenStandard.ERC1155)||(0,we.isEqualCaseInsensitive)(a.standard,ae.TokenStandard.ERC721)||a.erc721),d=a.decimals!==undefined&&a.symbol;let u;if(c||l&&d)try{const r=t?await(0,be.fetchTokenBalance)(e,t,this.provider):undefined;u={address:e,balance:r,standard:ae.TokenStandard.ERC20,decimals:a.decimals,symbol:a.symbol}}catch(e){C.default.warn(`Failed to get token balance. Error: ${e}`)}u===undefined&&(u=await this.assetsContractController.getTokenStandardAndDetails(e,t,r));if((0,we.isEqualCaseInsensitive)(u.standard,ae.TokenStandard.ERC1155))try{const n=await(0,be.fetchERC1155Balance)(e,t,r,this.provider),s=null!=n&&n._hex?parseInt(n._hex,16).toString():null;u={...u,balance:s}}catch(e){C.default.warn("Failed to get token balance. Error:",e)}return{...u,decimals:null===(n=u)||void 0===n||null===(n=n.decimals)||void 0===n?void 0:n.toString(10),balance:null===(s=u)||void 0===s||null===(s=s.balance)||void 0===s?void 0:s.toString(10)}}async getTokenSymbol(e){try{const t=await this.assetsContractController.getTokenStandardAndDetails(e);return null==t?void 0:t.symbol}catch(e){return null}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{return await this.keyringController.createNewVaultAndKeychain(e)}finally{t()}}async createNewVaultAndRestore(e,r){const n=await this.createVaultMutex.acquire();try{const{completedOnboarding:n}=this.onboardingController.state,s=t.from(r);this.permissionController.clearState(),this.snapController.clearState(),this.notificationController.clear(),this.accountTrackerController.clearAccounts(),this.txController.clearUnapprovedTransactions(),n&&this.tokenDetectionController.enable(),await this.keyringController.createNewVaultAndRestore(e,this._convertMnemonicToWordlistIndices(s)),n&&(await this._addAccountsWithBalance(),this.setLedgerTransportPreference())}finally{n()}}async _addAccountsWithBalance(){const e=(0,Re.getCurrentChainId)({metamask:this.networkController.state}),t=new k.default(this.provider),r=await this.keyringController.getAccounts();let n=r[r.length-1];for(let i=r.length;;i++){if("0x0"===await this.getBalance(n,t)){var s,o;await this.tokenDetectionController.detectTokens({chainIds:[e],selectedAddress:n});const t=null===(s=this.tokensController.state.allTokens)||void 0===s||null===(s=s[e])||void 0===s?void 0:s[n],r=null===(o=this.tokensController.state.allDetectedTokens)||void 0===o||null===(o=o[e])||void 0===o?void 0:o[n];if(0===((null==t?void 0:t.length)??0)&&0===((null==r?void 0:r.length)??0)){1!==i&&await this.removeAccount(n);break}}n=await this.keyringController.addNewAccount(i)}}_convertMnemonicToWordlistIndices(e){const t=e.toString().split(" ").map((e=>W.wordlist.indexOf(e)));return new Uint8Array(new Uint16Array(t).buffer)}_convertEnglishWordlistIndicesToCodepoints(e){return t.from(Array.from(new Uint16Array(e.buffer)).map((e=>W.wordlist[e])).join(" "))}getBalance(e,t){return new Promise(((r,n)=>{const s=this.accountTrackerController.state.accounts[e];s&&s.balance?r(s.balance):t.getBalance(e,((e,t)=>{e?(n(e),C.default.error(e)):r(t||"0x0")}))}))}async submitPassword(e){const{completedOnboarding:t}=this.onboardingController.state;await this.offscreenPromise,await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){C.default.error("Error while unlocking extension.",e)}await this.accountsController.updateAccounts(),t&&this.setLedgerTransportPreference()}async _loginUser(e){try{await this.submitPassword(e),await this.accountTrackerController.updateAccountsAllActiveNetworks()}finally{this._startUISync()}}_startUISync(){this.emit("startUISync"),this.startUISync=!0,this.memStore.subscribe(this.sendUpdate.bind(this))}async submitEncryptionKey(){try{const{loginToken:e,loginSalt:t}=await this.extension.storage.session.get(["loginToken","loginSalt"]);if(e&&t){const{vault:r}=this.keyringController.state;if(JSON.parse(r).salt!==t)return console.warn("submitEncryptionKey: Stored salt and vault salt do not match"),void await this.clearLoginArtifacts();await this.keyringController.submitEncryptionKey(e,t)}}catch(e){throw await this.clearLoginArtifacts(),e}}async clearLoginArtifacts(){await this.extension.storage.session.remove(["loginToken","loginSalt"])}async verifyPassword(e){await this.keyringController.verifyPassword(e)}getPrimaryKeyringMnemonic(){const[e]=this.keyringController.getKeyringsByType(he.KeyringType.hdKeyTree);if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){var r,n,s,o;const i=null===(r=this.opts.overrides)||void 0===r?void 0:r.keyrings;let a=null;switch(e){case ue.HardwareDeviceNames.trezor:a=(null==i||null===(n=i.trezor)||void 0===n?void 0:n.type)||y.TrezorKeyring.type;break;case ue.HardwareDeviceNames.ledger:a=(null==i||null===(s=i.ledger)||void 0===s?void 0:s.type)||v.LedgerKeyring.type;break;case ue.HardwareDeviceNames.qr:a=S.MetaMaskKeyring.type;break;case ue.HardwareDeviceNames.lattice:a=(null==i||null===(o=i.lattice)||void 0===o?void 0:o.type)||b.default.type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let[c]=await this.keyringController.getKeyringsByType(a);if(c||(c=await this.keyringController.addNewKeyring(a)),t&&c.setHdPath&&c.setHdPath(t),e===ue.HardwareDeviceNames.lattice&&(c.appName="MetaMask"),e===ue.HardwareDeviceNames.trezor){const e=c.getModel();this.appStateController.setTrezorModel(e)}return c.network=(0,Ne.getProviderConfig)({metamask:this.networkController.state}).type,c}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(ue.HardwareDeviceNames.ledger);return await e.attemptMakeApp()}async connectHardware(e,t,r){const n=await this.getKeyringForDevice(e,r);e===ue.HardwareDeviceNames.ledger&&await this.setLedgerTransportPreference(n);let s=[];switch(t){case-1:s=await n.getPreviousPage();break;case 1:s=await n.getNextPage();break;default:s=await n.getFirstPage()}const o=await this.keyringController.getAccounts(),i=[...new Set(o.concat(s.map((e=>e.address.toLowerCase()))))];return this.accountTrackerController.syncWithAddresses(i),s}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async getDeviceNameForMetric(e,t){if(e===ue.HardwareDeviceNames.trezor){const r=await this.getKeyringForDevice(e,t),{minorVersion:n}=r.bridge;if(n&&n===Xt)return ue.HardwareDeviceNames.oneKeyViaTrezor}return e}async forgetDevice(e){const t=await this.getKeyringForDevice(e);for(const e of t.accounts)await this.removeAccount(e);return t.forgetDevice(),!0}async getAccountType(e){switch(await this.keyringController.getAccountKeyringType(e)){case he.KeyringType.trezor:case he.KeyringType.lattice:case he.KeyringType.qr:case he.KeyringType.ledger:return"hardware";case he.KeyringType.imported:return"imported";case he.KeyringType.snap:return"snap";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case he.KeyringType.trezor:return t.getModel();case he.KeyringType.qr:return t.getName();case he.KeyringType.ledger:return ue.HardwareDeviceNames.ledger;case he.KeyringType.lattice:return ue.HardwareDeviceNames.lattice;default:return undefined}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,n){const s=await this.getKeyringForDevice(t,r);s.setAccountToUnlock(e);const o=await this.keyringController.addNewAccountForKeyring(s),i=this.getAccountLabel(t===ue.HardwareDeviceNames.qr?s.getName():t,e,n);this.preferencesController.setAccountLabel(o,i),this.preferencesController.setSelectedAddress(o);const a=this.accountsController.getAccountByAddress(o);this.accountsController.setAccountName(a.id,i);const c=this.accountsController.listAccounts(),{identities:l}=this.preferencesController.state;return{unlockedAccount:o,identities:l,accounts:c}}async addNewAccount(e){const t=await this.keyringController.getAccounts(),r=await this.keyringController.addNewAccount(e);return t.includes(r)||this.preferencesController.setSelectedAddress(r),r}async getSeedPhrase(e){return this._convertEnglishWordlistIndicesToCodepoints(await this.keyringController.exportSeedPhrase(e))}async resetAccount(){const e=this.accountsController.getSelectedAccount().address;return this.txController.wipeTransactions(!1,e),this.smartTransactionsController.wipeSmartTransactions({address:e,ignoreNetwork:!1}),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,pe.RestrictedMethods.eth_accounts)}catch(e){if(t&&e.code===g.errorCodes.provider.unauthorized)return[];throw e}}removeAllChainIdPermissions(e){this.permissionController.updatePermissionsByCaveat(pe.CaveatTypes.restrictNetworkSwitching,(t=>Ct.CaveatMutatorFactories[pe.CaveatTypes.restrictNetworkSwitching].removeChainId(e,t)))}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(pe.CaveatTypes.restrictReturnedAccounts,(t=>Ct.CaveatMutatorFactories[pe.CaveatTypes.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var n;0===(null==r?void 0:r.length)&&(null===(n=t.destroy)||void 0===n||n.call(t));return e}async importAccountWithStrategy(e,t){const r=await this.keyringController.importAccountWithStrategy(e,t);this.preferencesController.setSelectedAddress(r)}getAddTransactionRequest({transactionParams:e,transactionOptions:t,dappRequest:r,...n}){var s;return{internalAccounts:this.accountsController.listAccounts(),dappRequest:r,networkClientId:(null==r?void 0:r.networkClientId)??this.networkController.state.selectedNetworkClientId,selectedAccount:this.accountsController.getAccountByAddress(e.from),transactionController:this.txController,transactionOptions:t,transactionParams:e,userOperationController:this.userOperationController,chainId:(0,Re.getCurrentChainId)({metamask:this.networkController.state}),ppomController:this.ppomController,securityAlertsEnabled:null===(s=this.preferencesController.state)||void 0===s?void 0:s.securityAlertsEnabled,updateSecurityAlertResponse:this.updateSecurityAlertResponse.bind(this),...n}}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.stopTransaction(e,t,r);return this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.speedUpTransaction(e,t,r);return this.getState()}async estimateGas(e){return new Promise(((t,r)=>new A.default(this.provider).estimateGas(e,((e,n)=>e?r(e):t(n.toString(16))))))}async updateSecurityAlertResponse(e,t,r){await(0,Ot.updateSecurityAlertResponse)({appStateController:this.appStateController,method:e,securityAlertId:t,securityAlertResponse:r,signatureController:this.signatureController,transactionController:this.txController})}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setUseRequestQueue(e){this.preferencesController.setUseRequestQueue(e)}setupUntrustedCommunicationEip1193({connectionStream:e,sender:t,subjectType:r}){if(t.url&&this.onboardingController.state.completedOnboarding&&this.preferencesController.state.usePhishDetect){const{hostname:r}=new URL(t.url);this.phishingController.maybeUpdateState();const n=this.phishingController.test(t.url);if(null!=n&&n.result)return this.sendPhishingWarning(e,r),void this.metaMetricsController.trackEvent({event:Ce.MetaMetricsEventName.PhishingPageDisplayed,category:Ce.MetaMetricsEventCategory.Phishing,properties:{url:r}})}let n;n=r||(t.id&&t.id!==this.extension.runtime.id?x.SubjectType.Extension:x.SubjectType.Website);const s=(0,tt.setupMultiplex)(e);this.setupProviderConnectionEip1193(s.createStream("metamask-provider"),t,n),t.url&&this.setupPublicConfig(s.createStream("publicConfig"))}setupUntrustedCommunicationCaip({connectionStream:e,sender:t,subjectType:r}){let n;n=r||(t.id&&t.id!==this.extension.runtime.id?x.SubjectType.Extension:x.SubjectType.Website);const s=(0,_e.createCaipStream)(e);this.setupProviderConnectionCaip(s,t,n)}setupTrustedCommunication(e,t){const r=(0,tt.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnectionEip1193(r.createStream("provider"),t,x.SubjectType.Internal)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.state;if(!t)return;const r=(0,tt.setupMultiplex)(e).createStream("metamask-phishing-safelist");r.on("data",(0,ut.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this),backToSafetyPhishingWarning:this.backToSafetyPhishingWarning.bind(this)},r))}setUpCookieHandlerCommunication({connectionStream:e}){const{metaMetricsId:t,dataCollectionForMarketing:r,participateInMetaMetrics:n}=this.metaMetricsController.state;if(t&&r&&n){const t=(0,tt.setupMultiplex)(e).createStream(Nt.METAMASK_COOKIE_HANDLER);t.on("data",(0,ut.default)({getCookieFromMarketingPage:this.getCookieFromMarketingPage.bind(this)},t))}}getCookieFromMarketingPage(e){const{ga_client_id:t}=e;this.metaMetricsController.setMarketingCampaignCookieId(t)}sendPhishingWarning(e,t){(0,tt.setupMultiplex)(e).createStream("phishing").write({hostname:t})}setupControllerConnection(e){const t=new Ht.PatchStore(this.memStore);let r=!1;const n=()=>{if(!(0,tt.isStreamWritable)(e)||!r)return;const n=t.flushPendingPatches();e.write({jsonrpc:"2.0",method:"sendUpdate",params:[n]})},o={...this.getApi(),startPatches:()=>{r=!0,n()},getStatePatches:()=>t.flushPendingPatches()};this.on("update",n),this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,ut.default)(o,e));const i=()=>{(0,tt.isStreamWritable)(e)&&e.write({jsonrpc:"2.0",method:"startUISync"})};this.startUISync?i():this.once("startUISync",i);const a=()=>{e.mmFinished||(this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.mmFinished=!0,this.removeListener("update",n),t.destroy())};e.mmFinished=!1,(0,s.finished)(e,a),e.once("close",a),e.once("end",a)}setupProviderConnectionEip1193(e,t,r){let n,o;n=r===x.SubjectType.Internal?fe.ORIGIN_METAMASK:r===x.SubjectType.Snap?t.snapId:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:x.SubjectType.Extension}),t.tab&&t.tab.id&&(o=t.tab.id);const i=this.setupProviderEngineEip1193({origin:n,sender:t,subjectType:r,tabId:o}),c=(0,Je.default)(),l=(0,a.createEngineStream)({engine:i}),d=this.addConnection(n,{engine:i});(0,s.pipeline)(e,c,l,e,(e=>{var t;i.destroy(),d&&this.removeConnection(n,d),!e||null!==(t=e.message)&&void 0!==t&&t.match("Premature close")||C.default.error(e)})),r!==x.SubjectType.Internal&&this._notifyChainChangeForConnection({engine:i},n)}setupProviderConnectionCaip(e,t,r){let n,o;n=r===x.SubjectType.Internal?fe.ORIGIN_METAMASK:r===x.SubjectType.Snap?t.snapId:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:x.SubjectType.Extension}),t.tab&&t.tab.id&&(o=t.tab.id);const i=this.setupProviderEngineCaip({origin:n,tabId:o}),c=(0,Je.default)(),l=(0,a.createEngineStream)({engine:i}),d=this.addConnection(n,{engine:i});(0,s.pipeline)(e,c,l,e,(e=>{i._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),d&&this.removeConnection(n,d),e&&C.default.error(e)})),r!==x.SubjectType.Internal&&this._notifyChainChangeForConnection({engine:i},n)}setupSnapProvider(e,t){this.setupUntrustedCommunicationEip1193({connectionStream:t,sender:{snapId:e},subjectType:x.SubjectType.Snap})}setupProviderEngineEip1193({origin:e,subjectType:t,sender:r,tabId:n}){const s=new i.JsonRpcEngine;s.push((0,Xe.default)({origin:e})),s.push((0,D.createSelectedNetworkMiddleware)(this.controllerMessenger));const o=(0,X.createQueuedRequestMiddleware)({enqueueRequest:this.queuedRequestController.enqueueRequest.bind(this.queuedRequestController),useRequestQueue:this.preferencesController.getUseRequestQueue.bind(this.preferencesController),shouldEnqueueRequest:e=>ie.methodsThatShouldBeEnqueued.includes(e.method)});s.push(o);const a=this.selectedNetworkController.getProviderAndBlockTracker(e),c=(0,p.default)(a),l=(0,m.default)(a);l.events.on("notification",(e=>s.emit("notification",e))),n&&s.push((0,Ye.default)({tabId:n})),s.push((0,We.default)({origin:e})),s.push(this.permissionLogController.createMiddleware()),e===Pe.BaseUrl.Portfolio&&s.push((0,jt.createTxVerificationMiddleware)(this.networkController)),s.push((0,Gt.default)()),s.push((0,Ge.createPPOMMiddleware)(this.ppomController,this.preferencesController,this.networkController,this.appStateController,this.accountsController,this.updateSecurityAlertResponse.bind(this)));return s.push((0,bt.default)({getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),isConfirmationRedesignEnabled:()=>this.preferencesController.state.preferences.redesignedConfirmationsEnabled,snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]}),appStateController:this.appStateController,metaMetricsController:this.metaMetricsController})),s.push((0,ze.createUnsupportedMethodMiddleware)()),s.push((0,ze.createLegacyMethodMiddleware)({getAccounts:this.getPermittedAccounts.bind(this,e)})),t!==x.SubjectType.Internal&&s.push(this.permissionController.createPermissionMiddleware({origin:e})),t===x.SubjectType.Website&&s.push((0,et.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),s.push((0,xt.default)({messenger:this.controllerMessenger.getRestricted({name:"EvmMethodsToNonEvmAccountFilterMessenger",allowedActions:["AccountsController:getSelectedAccount"]})})),s.push((0,ze.createMethodMiddleware)({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),metamaskState:this.getState(),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.handleWatchAssetRequest.bind(this),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),startApprovalFlow:this.approvalController.startFlow.bind(this.approvalController),endApprovalFlow:this.approvalController.endFlow.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{},...!(0,Oe.isSnapId)(e)&&{[Ct.PermissionNames.permittedChains]:{}}}),requestPermittedChainsPermission:t=>this.permissionController.requestPermissionsIncremental({origin:e},{[Ct.PermissionNames.permittedChains]:{caveats:[Ct.CaveatFactories[pe.CaveatTypes.restrictNetworkSwitching](t)]}}),grantPermittedChainsPermissionIncremental:t=>this.permissionController.grantPermissionsIncremental({subject:{origin:e},approvedPermissions:{[Ct.PermissionNames.permittedChains]:{caveats:[Ct.CaveatFactories[pe.CaveatTypes.restrictNetworkSwitching](t)]}}}),requestPermissionsForOrigin:t=>this.permissionController.requestPermissions({origin:e},{...t[Ct.PermissionNames.eth_accounts]&&{[Ct.PermissionNames.permittedChains]:{}},...t[Ct.PermissionNames.permittedChains]&&{[Ct.PermissionNames.eth_accounts]:{}},...t}),revokePermissionsForOrigin:t=>{try{this.permissionController.revokePermissions({[e]:t})}catch(e){console.log(e)}},getCaveat:({target:t,caveatType:r})=>{try{return this.permissionController.getCaveat(e,t,r)}catch(e){if(!(e instanceof x.PermissionDoesNotExistError))throw e}return undefined},setActiveNetwork:async t=>{await this.networkController.setActiveNetwork(t),this.permissionController.hasPermission(e,Ct.PermissionNames.eth_accounts)&&this.selectedNetworkController.setNetworkClientIdForDomain(e,t)},addNetwork:this.networkController.addNetwork.bind(this.networkController),updateNetwork:this.networkController.updateNetwork.bind(this.networkController),getNetworkConfigurationByChainId:this.networkController.getNetworkConfigurationByChainId.bind(this.networkController),getCurrentChainIdForDomain:e=>{const t=this.selectedNetworkController.getNetworkClientIdForDomain(e),{chainId:r}=this.networkController.getNetworkConfigurationByNetworkClientId(t);return r},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController)})),s.push((0,H.createSnapsMethodMiddleware)(t===x.SubjectType.Snap,{getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),getSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getPermitted",e),requestPermissions:async t=>await this.permissionController.requestPermissions({origin:e},t),getPermissions:this.permissionController.getPermissions.bind(this.permissionController,e),getSnapFile:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getFile",e),installSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:install",e),invokeSnap:this.permissionController.executeRestrictedMethod.bind(this.permissionController,e,pe.RestrictedMethods.wallet_snap),getIsLocked:()=>!this.appStateController.isUnlocked(),getInterfaceState:(...t)=>this.controllerMessenger.call("SnapInterfaceController:getInterface",e,...t).state,createInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:createInterface",e),updateInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:updateInterface",e),resolveInterface:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapInterfaceController:resolveInterface",e),getSnap:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:get"),getAllSnaps:this.controllerMessenger.call.bind(this.controllerMessenger,"SnapController:getAll"),getCurrencyRate:e=>{const t=this.multichainRatesController.state.rates[e],{fiatCurrency:r}=this.multichainRatesController.state;return t?{...t,currency:r}:undefined},hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),handleSnapRpcRequest:t=>this.handleSnapRequest({...t,origin:e}),getAllowedKeyringMethods:(0,Fe.keyringSnapPermissionsBuilder)(this.subjectMetadataController,e)})),s.push(c),s.push(l.middleware),s.push(this.metamaskMiddleware),s.push((0,d.providerAsMiddleware)(a.provider)),s}setupProviderEngineCaip({origin:e,tabId:t}){const r=new i.JsonRpcEngine;return r.push(((r,n,s,o)=>(console.log("CAIP request received",{origin:e,tabId:t,request:r}),o(new Error("CAIP RPC Pipeline not yet implemented."))))),r}setupPublicConfig(e){const t=(0,l.storeAsStream)(this.publicConfigStore);(0,s.pipeline)(t,e,(e=>{var r;t.destroy(),!e||null!==(r=e.message)&&void 0!==r&&r.match("Premature close")||C.default.error(e)}))}addConnection(e,{engine:t}){if(e===fe.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const r=(0,T.default)();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{try{this.notifyConnection(r,await t(e))}catch(e){console.error(e)}}))}))}notifyConnection(e,t){try{e.engine&&e.engine.emit("notification",t)}catch(e){console.error(e)}}async _onKeyringControllerUpdate(e){const{keyrings:t}=e,r=t.reduce(((e,{accounts:t})=>e.concat(t)),[]).filter(Bt.isEthAddress);r.length&&this.accountTrackerController.syncWithAddresses(r)}_onUnlock(){this.notifyAllConnections((async e=>({method:Ct.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.unMarkPasswordForgotten(),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:Ct.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this._notifyChainChange()}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.state.isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async initializeChainlist(){const e=`cachedFetch:${le.CHAIN_SPEC_URL}`,{cachedResponse:t}=await(0,ve.getStorageItem)(e)||{};t||await(0,ve.setStorageItem)(e,{cachedResponse:(0,w.rawChainData)(),cachedTime:0})}async getPendingNonce(e,t){const{nonceDetails:r,releaseLock:n}=await this.txController.getNonceLock(e,undefined),s=r.params.highestSuggested;return n(),s}async getNextNonce(e,t){const r=await this.txController.getNonceLock(e,undefined);return r.releaseLock(),r.nextNonce}throwTestError(e){setTimeout((()=>{const t=new Error(e);throw t.name="TestError",t}))}_addTransactionControllerListeners(){const e=this.getTransactionMetricsRequest();this.controllerMessenger.subscribe("TransactionController:postTransactionBalanceUpdated",Be.handlePostTransactionBalanceUpdate.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:unapprovedTransactionAdded",(t=>(0,Be.handleTransactionAdded)(e,{transactionMeta:t}))),this.controllerMessenger.subscribe("TransactionController:transactionApproved",Be.handleTransactionApproved.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionDropped",Be.handleTransactionDropped.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionConfirmed",Be.handleTransactionConfirmed.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionFailed",Be.handleTransactionFailed.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionNewSwap",(({transactionMeta:e})=>this.controllerMessenger.call("SwapsController:setTradeTxId",e.id))),this.controllerMessenger.subscribe("TransactionController:transactionNewSwapApproval",(({transactionMeta:e})=>this.controllerMessenger.call("SwapsController:setApproveTxId",e.id))),this.controllerMessenger.subscribe("TransactionController:transactionRejected",Be.handleTransactionRejected.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionSubmitted",Be.handleTransactionSubmitted.bind(null,e)),this.controllerMessenger.subscribe("TransactionController:transactionStatusUpdated",(({transactionMeta:e})=>{this._onFinishedTransaction(e)}))}getTransactionMetricsRequest(){return{...{createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getSelectedAddress:()=>this.accountsController.getSelectedAccount().address,getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),getTransaction:e=>this.txController.state.transactions.find((t=>t.id===e)),getIsSmartTransaction:()=>(0,Me.getIsSmartTransaction)(this._getMetaMaskState()),getSmartTransactionByMinedTxHash:e=>this.smartTransactionsController.getSmartTransactionByMinedTxHash(e),getRedesignedConfirmationsEnabled:()=>this.preferencesController.state.preferences.redesignedConfirmationsEnabled,getRedesignedTransactionsEnabled:()=>this.preferencesController.state.preferences.redesignedTransactionsEnabled,getMethodData:e=>{if(!e)return null;const{knownMethodData:t,use4ByteResolution:r}=this.preferencesController.state,n=(0,ht.addHexPrefix)(e);return(0,ht.getMethodDataName)(t,r,n,this.preferencesController.addKnownMethodData.bind(this.preferencesController),this.provider)},getIsRedesignedConfirmationsDeveloperEnabled:()=>this.preferencesController.state.preferences.isRedesignedConfirmationsDeveloperEnabled,getIsConfirmationAdvancedDetailsOpen:()=>this.preferencesController.state.preferences.showConfirmationAdvancedDetails},snapAndHardwareMessenger:this.controllerMessenger.getRestricted({name:"SnapAndHardwareMessenger",allowedActions:["KeyringController:getKeyringForAccount","SnapController:get","AccountsController:getSelectedAccount"]}),provider:this.provider}}toggleExternalServices(e){this.preferencesController.toggleExternalServices(e),this.tokenListController.updatePreventPollingOnNetworkRestart(!e),e?(this.tokenDetectionController.enable(),this.gasFeeController.enableNonRPCGasFeeApis()):(this.tokenDetectionController.disable(),this.gasFeeController.disableNonRPCGasFeeApis())}async setLedgerTransportPreference(e){const t=window.navigator.hid?ue.LedgerTransportTypes.webhid:ue.LedgerTransportTypes.u2f,r=e||await this.getKeyringForDevice(ue.HardwareDeviceNames.ledger);return null!=r&&r.updateTransportMethod?r.updateTransportMethod(t).catch((e=>{throw e})):undefined}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t="12.8.0";e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e}onClientClosed(){try{this.gasFeeController.stopAllPolling(),this.currencyRateController.stopAllPolling(),this.tokenRatesController.stopAllPolling(),this.tokenDetectionController.stopAllPolling(),this.tokenListController.stopAllPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=fe.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.stopPollingByPollingToken(e),this.currencyRateController.stopPollingByPollingToken(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.Phishing,event:Ce.MetaMetricsEventName.ProceedAnywayClicked,properties:{url:e,referrer:{url:e}}}),this.phishingController.bypass(e)}async backToSafetyPhishingWarning(){this.metaMetricsController.trackEvent({category:Ce.MetaMetricsEventCategory.Navigation,event:Ce.MetaMetricsEventName.PortfolioLinkClicked,properties:{location:"phishing_page",text:"Back to safety"}}),await this.platform.switchToAnotherURL(undefined,"https://portfolio.metamask.io/?metamaskEntry=phishing_page_portfolio_button")}setLocked(){return this.keyringController.setLocked()}async _onAccountChange(e){const t=(0,Ct.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[r,n]of t.entries())n.includes(e)&&this._notifyAccountsChange(r,n);await this.txController.updateIncomingTransactions()}async _notifyAccountsChange(e,t){this.isUnlocked()&&this.notifyConnections(e,{method:Ct.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)}async _notifyChainChange(){this.preferencesController.getUseRequestQueue()?this.notifyAllConnections((async e=>({method:Ct.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState(e)}))):this.notifyAllConnections({method:Ct.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState()})}async _notifyChainChangeForConnection(e,t){this.preferencesController.getUseRequestQueue()?this.notifyConnection(e,{method:Ct.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState(t)}):this.notifyConnection(e,{method:Ct.NOTIFICATION_NAMES.chainChanged,params:await this.getProviderNetworkState()})}async _onFinishedTransaction(e){[Q.TransactionStatus.confirmed,Q.TransactionStatus.failed].includes(e.status)&&(await this._createTransactionNotifcation(e),await this._updateNFTOwnership(e),this._trackTransactionFailure(e))}async _createTransactionNotifcation(e){const{chainId:t}=e;let r={};if(t){var n,s;const e=null===(n=this.networkController.state.networkConfigurationsByChainId)||void 0===n?void 0:n[t];r={blockExplorerUrl:null==e||null===(s=e.blockExplorerUrls)||void 0===s?void 0:s[null==e?void 0:e.defaultBlockExplorerUrlIndex]}}try{await this.platform.showTransactionNotification(e,r)}catch(e){C.default.error("Failed to create transaction notification",e)}}async _updateNFTOwnership(e){const{type:t,txParams:r,chainId:n,txReceipt:s}=e,o=this.accountsController.getSelectedAccount().address,{allNfts:i}=this.nftController.state,a=null==s?void 0:s.logs,c=t===Q.TransactionType.contractInteraction&&a,l=(t===Q.TransactionType.tokenMethodTransferFrom||t===Q.TransactionType.tokenMethodSafeTransferFrom)&&r!==undefined;if(c||l)if(l){var d;const{data:e,to:t,from:s}=r,o=(0,Se.parseStandardTokenTransactionData)(e),a=(0,be.getTokenIdParam)(o)??(0,Ae.getTokenValueParam)(o),c=null==i||null===(d=i[s])||void 0===d||null===(d=d[n])||void 0===d?void 0:d.find((({address:e,tokenId:r})=>(0,we.isEqualCaseInsensitive)(e,t)&&r===a));c&&this.nftController.checkAndUpdateSingleNftOwnershipStatus(c,!1,{userAddress:s})}else{const e=a.map((e=>{const t=e.topics&&e.topics[0]===Ie.TRANSFER_SINFLE_LOG_TOPIC_HASH,r=e.topics&&e.topics[0]===Ie.TOKEN_TRANSFER_LOG_TOPIC_HASH;let n;return t&&(n=e.topics&&e.topics[3]&&e.topics[3].match(null==o?void 0:o.slice(2))),r&&(n=e.topics&&e.topics[2]&&e.topics[2].match(null==o?void 0:o.slice(2))),{isERC1155NftTransfer:t,isERC721NftTransfer:r,isTransferToSelectedAddress:n,...e}}));if(0!==e.length){const t=[];e.forEach((e=>{if(e.isTransferToSelectedAddress&&(e.isERC1155NftTransfer||e.isERC721NftTransfer)){let r;r=e.isERC1155NftTransfer?new ee.Interface(te.abiERC1155):new ee.Interface(te.abiERC721);try{const n=r.parseLog({data:e.data,topics:e.topics});t.push({contract:e.address,...n})}catch(e){}}}));const r=[],s=[];t.forEach((e=>{var t;const a=(0,be.getTokenIdParam)(e),c=null==i||null===(t=i[o])||void 0===t||null===(t=t[n])||void 0===t?void 0:t.find((({address:t,tokenId:r})=>(0,we.isEqualCaseInsensitive)(t,e.contract)&&r===a));c?r.push(c):s.push({tokenId:a,...e})}));const a=r.map((async e=>this.nftController.checkAndUpdateSingleNftOwnershipStatus(e,!1,{selectedAddress:o})));await Promise.allSettled(a);const c=s.map((async e=>this.nftController.addNft(e.contract,e.tokenId)));await Promise.allSettled(c)}}}_trackTransactionFailure(e){var t;const{txReceipt:r}=e,n=this.getState();r&&"0x0"===r.status&&this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:Ce.MetaMetricsEventCategory.Background,properties:{action:"Transactions",errorMessage:null===(t=e.simulationFails)||void 0===t?void 0:t.reason,numberOfTokens:n.tokens.length,numberOfAccounts:Object.keys(n.accounts).length}},{matomoEvent:!0})}_onUserOperationAdded(e){const t=this.txController.state.transactions.find((t=>t.id===e.id));t&&(t.type===Q.TransactionType.swap?this.controllerMessenger.publish("TransactionController:transactionNewSwap",{transactionMeta:t}):t.type===Q.TransactionType.swapApproval&&this.controllerMessenger.publish("TransactionController:transactionNewSwapApproval",{transactionMeta:t}))}_onUserOperationTransactionUpdated(e){const t={...e,txParams:{...e.txParams,from:this.accountsController.getSelectedAccount().address}};this.txController.state.transactions.some((e=>e.id===t.id))||this.txController.update((e=>{e.transactions.push(t)})),this.txController.updateTransaction(t,"Generated from user operation"),this.controllerMessenger.publish("TransactionController:transactionStatusUpdated",{transactionMeta:t})}_publishSmartTransactionHook(e,t){const r=this._getMetaMaskState(),n=(0,Me.getIsSmartTransaction)(r);if(!n)return{transactionHash:undefined};const s=(0,Me.getFeatureFlagsByChainId)(r);return(0,De.submitSmartTransactionHook)({transactionMeta:e,signedTransactionInHex:t,transactionController:this.txController,smartTransactionsController:this.smartTransactionsController,controllerMessenger:this.controllerMessenger,isSmartTransaction:n,isHardwareWallet:(0,Me.isHardwareWallet)(r),featureFlags:s})}_getMetaMaskState(){return{metamask:this.getState()}}}function Zt(e,t){const r=zt(Yt,this,er).call(this,t),n=zt(Yt,this,er).call(this,e);r!==n&&this.tokenListController.updatePreventPollingOnNetworkRestart(!n)}function er(e){const{useTokenDetection:t,useTransactionSimulations:r,preferences:n}=e??{},{petnamesEnabled:s}=n??{};return t||s||r}r.default=Qt}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"$root$",file:"app/scripts/metamask-controller.js"}],[132,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:2,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/002.js"}],[133,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:3,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/003.js"}],[1336,{"./utils.cjs":1338,"@metamask/base-controller":1408,"@metamask/eth-snap-keyring":1758,"@metamask/keyring-api":1938,"@metamask/keyring-controller":1991,"@metamask/utils":1349},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,s,o,i,a,c,l,d,u,h,p,m,g,f,C,y=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)};Object.defineProperty(r,"__esModule",{value:!0}),r.AccountsController=r.EMPTY_ACCOUNT=void 0;const v=e("@metamask/base-controller"),b=e("@metamask/eth-snap-keyring"),w=e("@metamask/keyring-api"),S=e("@metamask/keyring-controller"),k=e("@metamask/utils"),A=e("./utils.cjs"),T="AccountsController",E={internalAccounts:{persist:!0,anonymous:!1}},M={internalAccounts:{accounts:{},selectedAccount:""}};r.EMPTY_ACCOUNT={id:"",address:"",options:{},methods:[],type:w.EthAccountType.Eoa,metadata:{name:"",keyring:{type:""},importTime:0}};class _ extends v.BaseController{constructor({messenger:e,state:t}){super({messenger:e,name:T,metadata:E,state:{...M,...t}}),n.add(this),this.messagingSystem.subscribe("SnapController:stateChange",(e=>y(this,n,"m",c).call(this,e))),this.messagingSystem.subscribe("KeyringController:stateChange",(e=>y(this,n,"m",a).call(this,e))),y(this,n,"m",C).call(this)}getAccount(e){return this.state.internalAccounts.accounts[e]}listAccounts(){return Object.values(this.state.internalAccounts.accounts).filter((e=>(0,w.isEvmAccountType)(e.type)))}listMultichainAccounts(e){const t=Object.values(this.state.internalAccounts.accounts);if(!e)return t;if(!(0,k.isCaipChainId)(e))throw new Error(`Invalid CAIP-2 chain ID: ${String(e)}`);return t.filter((t=>y(this,n,"m",u).call(this,t,e)))}getAccountExpect(e){const t=this.getAccount(e);if(t===undefined)throw new Error(`Account Id "${e}" not found`);return t}getSelectedAccount(){if(""===this.state.internalAccounts.selectedAccount)return r.EMPTY_ACCOUNT;const e=this.getAccountExpect(this.state.internalAccounts.selectedAccount);if((0,w.isEvmAccountType)(e.type))return e;const t=this.listAccounts();if(!t.length)throw new Error("No EVM accounts");return y(this,n,"m",d).call(this,t)}getSelectedMultichainAccount(e){if(""===this.state.internalAccounts.selectedAccount)return r.EMPTY_ACCOUNT;if(!e)return this.getAccountExpect(this.state.internalAccounts.selectedAccount);if(!(0,k.isCaipChainId)(e))throw new Error(`Invalid CAIP-2 chain ID: ${e}`);const t=Object.values(this.state.internalAccounts.accounts).filter((t=>y(this,n,"m",u).call(this,t,e)));return y(this,n,"m",d).call(this,t)}getAccountByAddress(e){return this.listMultichainAccounts().find((t=>t.address.toLowerCase()===e.toLowerCase()))}setSelectedAccount(e){const t=this.getAccountExpect(e);this.update((e=>{e.internalAccounts.accounts[t.id].metadata.lastSelected=Date.now(),e.internalAccounts.selectedAccount=t.id})),y(this,n,"m",m).call(this,t)}setAccountName(e,t){this.updateAccountMetadata(e,{name:t,nameLastUpdatedAt:Date.now()})}updateAccountMetadata(e,t){const r=this.getAccountExpect(e);if(t.name&&this.listMultichainAccounts().find((r=>r.metadata.name===t.name&&r.id!==e)))throw new Error("Account name already exists");this.update((n=>{const s={...r,metadata:{...r.metadata,...t}};n.internalAccounts.accounts[e]=s,t.name&&this.messagingSystem.publish("AccountsController:accountRenamed",s)}))}async updateAccounts(){const e=await y(this,n,"m",o).call(this),t=await y(this,n,"m",i).call(this),r=new Map,s=this.state.internalAccounts.accounts,a=[...t,...e].reduce(((e,t)=>{const o=(0,A.keyringTypeToName)(t.metadata.keyring.type),i=r.get(o)??0;i?r.set(o,i+1):r.set(o,1);const a=s[t.id];return e[t.id]={...t,metadata:{...t.metadata,name:y(this,n,"m",f).call(this,a?.id,"name")??`${o} ${i+1}`,importTime:y(this,n,"m",f).call(this,a?.id,"importTime")??Date.now(),lastSelected:y(this,n,"m",f).call(this,a?.id,"lastSelected")??0}},e}),{});this.update((e=>{if(e.internalAccounts.accounts=a,!e.internalAccounts.accounts[e.internalAccounts.selectedAccount]){const t=y(this,n,"m",d).call(this,Object.values(a));t?(e.internalAccounts.selectedAccount=t.id,e.internalAccounts.accounts[t.id].metadata.lastSelected=y(this,n,"m",h).call(this),y(this,n,"m",m).call(this,t)):e.internalAccounts.selectedAccount=""}}))}loadBackup(e){e.internalAccounts&&this.update((t=>{t.internalAccounts=e.internalAccounts}))}getNextAvailableAccountName(e=S.KeyringTypes.hd,t){const r=(0,A.keyringTypeToName)(e),s=y(this,n,"m",l).call(this,e,t),o=s.reduce(((e,t)=>{const n=new RegExp(`${r} ([0-9]+)$`,"u").exec(t.metadata.name);if(n){const t=parseInt(n[1],10);return Math.max(e,t)}return e}),0),i=Math.max(s.length+1,o+1);return`${r} ${i}`}}r.AccountsController=_,n=new WeakSet,s=function(e,t){return{id:(0,A.getUUIDFromAddressOfNormalAccount)(e),address:e,options:{},methods:[w.EthMethod.PersonalSign,w.EthMethod.Sign,w.EthMethod.SignTransaction,w.EthMethod.SignTypedDataV1,w.EthMethod.SignTypedDataV3,w.EthMethod.SignTypedDataV4],type:w.EthAccountType.Eoa,metadata:{name:"",importTime:Date.now(),keyring:{type:t}}}},o=async function(){const[e]=this.messagingSystem.call("KeyringController:getKeyringsByType",b.SnapKeyring.type);if(!e)return[];return e.listAccounts()},i=async function(){const e=await this.messagingSystem.call("KeyringController:getAccounts"),t=[];for(const r of e){const e=await this.messagingSystem.call("KeyringController:getKeyringForAccount",r),s=e.type;if(!(0,A.isNormalKeyringType)(s))continue;const o=(0,A.getUUIDFromAddressOfNormalAccount)(r),i=y(this,n,"m",f).call(this,o,"nameLastUpdatedAt");t.push({id:o,address:r,options:{},methods:[w.EthMethod.PersonalSign,w.EthMethod.Sign,w.EthMethod.SignTransaction,w.EthMethod.SignTypedDataV1,w.EthMethod.SignTypedDataV3,w.EthMethod.SignTypedDataV4],type:w.EthAccountType.Eoa,metadata:{name:y(this,n,"m",f).call(this,o,"name")??"",...i&&{nameLastUpdatedAt:i},importTime:y(this,n,"m",f).call(this,o,"importTime")??Date.now(),lastSelected:y(this,n,"m",f).call(this,o,"lastSelected")??0,keyring:{type:e.type}}})}return t},a=function(e){if(e.isUnlocked&&e.keyrings.length>0){const t=[],r=[];for(const n of e.keyrings)n.type===S.KeyringTypes.snap?r.push(...n.accounts.map((e=>({address:e,type:n.type})))):t.push(...n.accounts.map((e=>({address:e,type:n.type}))));const{previousNormalInternalAccounts:s,previousSnapInternalAccounts:o}=this.listMultichainAccounts().reduce(((e,t)=>(t.metadata.keyring.type===S.KeyringTypes.snap?e.previousSnapInternalAccounts.push(t):e.previousNormalInternalAccounts.push(t),e)),{previousNormalInternalAccounts:[],previousSnapInternalAccounts:[]}),i=[],a=[];for(const e of t)this.state.internalAccounts.accounts[(0,A.getUUIDFromAddressOfNormalAccount)(e.address)]||i.push(e);for(const e of r)o.find((t=>t.address.toLowerCase()===e.address.toLowerCase()))||i.push(e);for(const e of s)t.find((({address:t})=>t.toLowerCase()===e.address.toLowerCase()))||a.push(e);for(const e of o)r.find((({address:t})=>t.toLowerCase()===e.address.toLowerCase()))||a.push(e);this.update((e=>{if(a.length>0)for(const t of a)e.internalAccounts.accounts=y(this,n,"m",g).call(this,e.internalAccounts.accounts,t.id);if(i.length>0)for(const t of i)e.internalAccounts.accounts=y(this,n,"m",p).call(this,e.internalAccounts.accounts,t);const t=Object.values(e.internalAccounts.accounts);if(!e.internalAccounts.accounts[this.state.internalAccounts.selectedAccount]){const r=y(this,n,"m",d).call(this,t);r?(e.internalAccounts.selectedAccount=r.id,e.internalAccounts.accounts[r.id].metadata.lastSelected=y(this,n,"m",h).call(this),y(this,n,"m",m).call(this,r)):e.internalAccounts.selectedAccount=""}}))}},c=function(e){const{snaps:t}=e,r=this.listMultichainAccounts().filter((e=>e.metadata.snap));this.update((e=>{r.forEach((r=>{const n=e.internalAccounts.accounts[r.id];if(n.metadata.snap){const e=n.metadata.snap.id,r=t[e];r&&(n.metadata.snap.enabled=r.enabled&&!r.blocked)}}))}))},l=function(e,t){return(t??this.listMultichainAccounts()).filter((t=>e===S.KeyringTypes.hd||e===S.KeyringTypes.simple?t.metadata.keyring.type===S.KeyringTypes.hd||t.metadata.keyring.type===S.KeyringTypes.simple:t.metadata.keyring.type===e))},d=function(e){const[t]=e.sort(((e,t)=>(t.metadata.lastSelected??0)-(e.metadata.lastSelected??0)));return t},u=function(e,t){return e.type.startsWith((0,k.parseCaipChainId)(t).namespace)},h=function(){return Date.now()},p=function(e,t){let r;if(t.type!==S.KeyringTypes.snap)r=y(this,n,"m",s).call(this,t.address,t.type);else{const[n]=this.messagingSystem.call("KeyringController:getKeyringsByType",b.SnapKeyring.type);if(r=n.getAccountByAddress(t.address),!r)return e}const o=0===Object.keys(e).length,i=this.getNextAvailableAccountName(r.metadata.keyring.type,Object.values(e)),a={...r,metadata:{...r.metadata,name:i,importTime:Date.now(),lastSelected:o?y(this,n,"m",h).call(this):0}};return e[r.id]=a,this.messagingSystem.publish("AccountsController:accountAdded",a),e},m=function(e){(0,w.isEvmAccountType)(e.type)&&this.messagingSystem.publish("AccountsController:selectedEvmAccountChange",e),this.messagingSystem.publish("AccountsController:selectedAccountChange",e)},g=function(e,t){return delete e[t],this.messagingSystem.publish("AccountsController:accountRemoved",t),e},f=function(e,t,r){const n=r??this.getAccount(e);return n?n.metadata[t]:undefined},C=function(){this.messagingSystem.registerActionHandler(`${T}:setSelectedAccount`,this.setSelectedAccount.bind(this)),this.messagingSystem.registerActionHandler(`${T}:listAccounts`,this.listAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${T}:listMultichainAccounts`,this.listMultichainAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${T}:setAccountName`,this.setAccountName.bind(this)),this.messagingSystem.registerActionHandler(`${T}:updateAccounts`,this.updateAccounts.bind(this)),this.messagingSystem.registerActionHandler(`${T}:getSelectedAccount`,this.getSelectedAccount.bind(this)),this.messagingSystem.registerActionHandler(`${T}:getSelectedMultichainAccount`,this.getSelectedMultichainAccount.bind(this)),this.messagingSystem.registerActionHandler(`${T}:getAccountByAddress`,this.getAccountByAddress.bind(this)),this.messagingSystem.registerActionHandler(`${T}:getNextAvailableAccountName`,this.getNextAvailableAccountName.bind(this)),this.messagingSystem.registerActionHandler("AccountsController:getAccount",this.getAccount.bind(this)),this.messagingSystem.registerActionHandler("AccountsController:updateAccountMetadata",this.updateAccountMetadata.bind(this))}}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/AccountsController.cjs"}],[1337,{"./AccountsController.cjs":1336,"./utils.cjs":1338},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getUUIDFromAddressOfNormalAccount=r.keyringTypeToName=r.AccountsController=void 0;var n=e("./AccountsController.cjs");Object.defineProperty(r,"AccountsController",{enumerable:!0,get:function(){return n.AccountsController}});var s=e("./utils.cjs");Object.defineProperty(r,"keyringTypeToName",{enumerable:!0,get:function(){return s.keyringTypeToName}}),Object.defineProperty(r,"getUUIDFromAddressOfNormalAccount",{enumerable:!0,get:function(){return s.getUUIDFromAddressOfNormalAccount}})}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/index.cjs"}],[1338,{"@ethereumjs/util":468,"@metamask/keyring-controller":1991,"ethereum-cryptography/sha256":4227,uuid:5620},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.isNormalKeyringType=r.getUUIDFromAddressOfNormalAccount=r.getUUIDOptionsFromAddressOfNormalAccount=r.keyringTypeToName=void 0;const n=e("@ethereumjs/util"),s=e("@metamask/keyring-controller"),o=e("ethereum-cryptography/sha256"),i=e("uuid");function a(e){return{random:(0,o.sha256)((0,n.toBuffer)(e)).slice(0,16)}}r.keyringTypeToName=function(e){if((0,s.isCustodyKeyring)(e))return"Custody";switch(e){case s.KeyringTypes.simple:case s.KeyringTypes.hd:return"Account";case s.KeyringTypes.trezor:return"Trezor";case s.KeyringTypes.ledger:return"Ledger";case s.KeyringTypes.lattice:return"Lattice";case s.KeyringTypes.qr:return"QR";case s.KeyringTypes.snap:return"Snap Account";default:throw new Error(`Unknown keyring ${e}`)}},r.getUUIDOptionsFromAddressOfNormalAccount=a,r.getUUIDFromAddressOfNormalAccount=function(e){return(0,i.v4)(a(e))},r.isNormalKeyringType=function(e){return e!==s.KeyringTypes.snap}}}},{package:"@metamask/accounts-controller",file:"node_modules/@metamask/accounts-controller/dist/utils.cjs"}],[1339,{"./errors.cjs":1347,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.assertExhaustive=r.assertStruct=r.assert=r.AssertionError=void 0;const n=e("@metamask/superstruct"),s=e("./errors.cjs");function o(e,t){return r=e,Boolean("string"==typeof r?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var r}class i extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}r.AssertionError=i,r.assert=function(e,t="Assertion failed.",r=i){if(!e){if(t instanceof Error)throw t;throw o(r,t)}},r.assertStruct=function(e,t,r="Assertion failed",a=i){try{(0,n.assert)(e,t)}catch(e){throw o(a,`${r}: ${function(e){return(0,s.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},r.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/assert.cjs"}],[134,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:4,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/004.js"}],[1340,{"./assert.cjs":1339,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.base64=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs");r.base64=(e,t={})=>{const r=t.paddingRequired??!1,o=t.characterSet??"base64";let i,a;return"base64"===o?i=String.raw`[A-Za-z0-9+\/]`:((0,s.assert)("base64url"===o),i=String.raw`[-_A-Za-z0-9]`),a=r?new RegExp(`^(?:${i}{4})*(?:${i}{3}=|${i}{2}==)?$`,"u"):new RegExp(`^(?:${i}{4})*(?:${i}{2,3}|${i}{3}=|${i}{2}==)?$`,"u"),(0,n.pattern)(e,a)}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/base64.cjs"}],[1341,{"./assert.cjs":1339,"./hex.cjs":1348,"@scure/base":3270,buffer:4001},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.createDataView=r.concatBytes=r.valueToBytes=r.base64ToBytes=r.stringToBytes=r.numberToBytes=r.signedBigIntToBytes=r.bigIntToBytes=r.hexToBytes=r.bytesToBase64=r.bytesToString=r.bytesToNumber=r.bytesToSignedBigInt=r.bytesToBigInt=r.bytesToHex=r.assertIsBytes=r.isBytes=void 0;const n=e("@scure/base"),s=e("./assert.cjs"),o=e("./hex.cjs"),i=48,a=58,c=87;const l=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function d(e){return e instanceof Uint8Array}function u(e){(0,s.assert)(d(e),"Value must be a Uint8Array.")}function h(e){if(u(e),0===e.length)return"0x";const t=l(),r=new Array(e.length);for(let n=0;n<e.length;n++)r[n]=t[e[n]];return(0,o.add0x)(r.join(""))}function p(e){u(e);const t=h(e);return BigInt(t)}function m(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,o.assertIsHexString)(e);const t=(0,o.remove0x)(e).toLowerCase(),r=t.length%2==0?t:`0${t}`,n=new Uint8Array(r.length/2);for(let e=0;e<n.length;e++){const t=r.charCodeAt(2*e),s=r.charCodeAt(2*e+1),o=t-(t<a?i:c),l=s-(s<a?i:c);n[e]=16*o+l}return n}function g(e){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return m(e.toString(16))}function f(e){(0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return m(e.toString(16))}function C(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function y(e){if("bigint"==typeof e)return g(e);if("number"==typeof e)return f(e);if("string"==typeof e)return e.startsWith("0x")?m(e):C(e);if(d(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}r.isBytes=d,r.assertIsBytes=u,r.bytesToHex=h,r.bytesToBigInt=p,r.bytesToSignedBigInt=function(e){u(e);let t=BigInt(0);for(const r of e)t=(t<<BigInt(8))+BigInt(r);return BigInt.asIntN(8*e.length,t)},r.bytesToNumber=function(e){u(e);const t=p(e);return(0,s.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},r.bytesToString=function(e){return u(e),(new TextDecoder).decode(e)},r.bytesToBase64=function(e){return u(e),n.base64.encode(e)},r.hexToBytes=m,r.bigIntToBytes=g,r.signedBigIntToBytes=function(e,t){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)("number"==typeof t,"Byte length must be a number."),(0,s.assert)(t>0,"Byte length must be greater than 0."),(0,s.assert)(function(e,t){(0,s.assert)(t>0);const r=e>>BigInt(31);return!((~e&r)+(e&~r)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let r=e;const n=new Uint8Array(t);for(let e=0;e<n.length;e++)n[e]=Number(BigInt.asUintN(8,r)),r>>=BigInt(8);return n.reverse()},r.numberToBytes=f,r.stringToBytes=C,r.base64ToBytes=function(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),n.base64.decode(e)},r.valueToBytes=y,r.concatBytes=function(e){const t=new Array(e.length);let r=0;for(let n=0;n<e.length;n++){const s=y(e[n]);t[n]=s,r+=s.length}const n=new Uint8Array(r);for(let e=0,r=0;e<t.length;e++)n.set(t[e],r),r+=t[e].length;return n},r.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/bytes.cjs"}],[1342,{"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.toCaipChainId=r.parseCaipAccountId=r.parseCaipChainId=r.isCaipAssetId=r.isCaipAssetType=r.isCaipAccountAddress=r.isCaipAccountId=r.isCaipReference=r.isCaipNamespace=r.isCaipChainId=r.KnownCaipNamespace=r.CaipAssetIdStruct=r.CaipAssetTypeStruct=r.CaipAccountAddressStruct=r.CaipAccountIdStruct=r.CaipReferenceStruct=r.CaipNamespaceStruct=r.CaipChainIdStruct=r.CAIP_ASSET_ID_REGEX=r.CAIP_ASSET_TYPE_REGEX=r.CAIP_ACCOUNT_ADDRESS_REGEX=r.CAIP_ACCOUNT_ID_REGEX=r.CAIP_REFERENCE_REGEX=r.CAIP_NAMESPACE_REGEX=r.CAIP_CHAIN_ID_REGEX=void 0;const n=e("@metamask/superstruct");function s(e){return(0,n.is)(e,r.CaipNamespaceStruct)}function o(e){return(0,n.is)(e,r.CaipReferenceStruct)}r.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,r.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,r.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,r.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,r.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,r.CAIP_ASSET_TYPE_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u,r.CAIP_ASSET_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u,r.CaipChainIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_CHAIN_ID_REGEX),r.CaipNamespaceStruct=(0,n.pattern)((0,n.string)(),r.CAIP_NAMESPACE_REGEX),r.CaipReferenceStruct=(0,n.pattern)((0,n.string)(),r.CAIP_REFERENCE_REGEX),r.CaipAccountIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ACCOUNT_ID_REGEX),r.CaipAccountAddressStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ACCOUNT_ADDRESS_REGEX),r.CaipAssetTypeStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ASSET_TYPE_REGEX),r.CaipAssetIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ASSET_ID_REGEX),function(e){e.Bip122="bip122",e.Eip155="eip155",e.Wallet="wallet"}(r.KnownCaipNamespace||(r.KnownCaipNamespace={})),r.isCaipChainId=function(e){return(0,n.is)(e,r.CaipChainIdStruct)},r.isCaipNamespace=s,r.isCaipReference=o,r.isCaipAccountId=function(e){return(0,n.is)(e,r.CaipAccountIdStruct)},r.isCaipAccountAddress=function(e){return(0,n.is)(e,r.CaipAccountAddressStruct)},r.isCaipAssetType=function(e){return(0,n.is)(e,r.CaipAssetTypeStruct)},r.isCaipAssetId=function(e){return(0,n.is)(e,r.CaipAssetIdStruct)},r.parseCaipChainId=function(e){const t=r.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},r.parseCaipAccountId=function(e){const t=r.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},r.toCaipChainId=function(e,t){if(!s(e))throw new Error(`Invalid "namespace", must match: ${r.CAIP_NAMESPACE_REGEX.toString()}`);if(!o(t))throw new Error(`Invalid "reference", must match: ${r.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1343,{"./base64.cjs":1340,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ChecksumStruct=void 0;const n=e("@metamask/superstruct"),s=e("./base64.cjs");r.ChecksumStruct=(0,n.size)((0,s.base64)((0,n.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/checksum.cjs"}],[1344,{"./assert.cjs":1339,"./bytes.cjs":1341,"./hex.cjs":1348,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createHex=r.createBytes=r.createBigInt=r.createNumber=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs"),o=e("./bytes.cjs"),i=e("./hex.cjs"),a=(0,n.union)([(0,n.number)(),(0,n.bigint)(),(0,n.string)(),i.StrictHexStruct]),c=(0,n.coerce)((0,n.number)(),a,Number),l=(0,n.coerce)((0,n.bigint)(),a,BigInt),d=((0,n.union)([i.StrictHexStruct,(0,n.instance)(Uint8Array)]),(0,n.coerce)((0,n.instance)(Uint8Array),(0,n.union)([i.StrictHexStruct]),o.hexToBytes)),u=(0,n.coerce)(i.StrictHexStruct,(0,n.instance)(Uint8Array),o.bytesToHex);r.createNumber=function(e){try{const t=(0,n.create)(e,c);return(0,s.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof n.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},r.createBigInt=function(e){try{return(0,n.create)(e,l)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},r.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,n.create)(e,d)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},r.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,n.create)(e,u)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/coercers.cjs"}],[1345,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,s,o=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)},i=this&&this.__classPrivateFieldSet||function(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r};Object.defineProperty(r,"__esModule",{value:!0}),r.FrozenSet=r.FrozenMap=void 0;class a{get size(){return o(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return o(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),i(this,n,new Map(e),"f"),Object.freeze(this)}entries(){return o(this,n,"f").entries()}forEach(e,t){return o(this,n,"f").forEach(((r,n,s)=>e.call(t,r,n,this)))}get(e){return o(this,n,"f").get(e)}has(e){return o(this,n,"f").has(e)}keys(){return o(this,n,"f").keys()}values(){return o(this,n,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}}r.FrozenMap=a;class c{get size(){return o(this,s,"f").size}[(s=new WeakMap,Symbol.iterator)](){return o(this,s,"f")[Symbol.iterator]()}constructor(e){s.set(this,void 0),i(this,s,new Set(e),"f"),Object.freeze(this)}entries(){return o(this,s,"f").entries()}forEach(e,t){return o(this,s,"f").forEach(((r,n,s)=>e.call(t,r,n,this)))}has(e){return o(this,s,"f").has(e)}keys(){return o(this,s,"f").keys()}values(){return o(this,s,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}}r.FrozenSet=c,Object.freeze(a),Object.freeze(a.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/collections.cjs"}],[1346,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1347,{"./misc.cjs":1353,"pony-cause":4957},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.wrapError=r.getErrorMessage=r.isErrorWithStack=r.isErrorWithMessage=r.isErrorWithCode=void 0;const n=e("pony-cause"),s=e("./misc.cjs");function o(e){return"object"==typeof e&&null!==e&&"code"in e}function i(e){return"object"==typeof e&&null!==e&&"message"in e}r.isErrorWithCode=o,r.isErrorWithMessage=i,r.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},r.getErrorMessage=function(e){return i(e)&&"string"==typeof e.message?e.message:(0,s.isNullOrUndefined)(e)?"":String(e)},r.wrapError=function(e,t){if((r=e)instanceof Error||(0,s.isObject)(r)&&"Error"===r.constructor.name){let r;return r=2===Error.length?new Error(t,{cause:e}):new n.ErrorWithCause(t,{cause:e}),o(e)&&(r.code=e.code),r}var r;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/errors.cjs"}],[1348,{"./assert.cjs":1339,"./bytes.cjs":1341,"@metamask/superstruct":3067,"@noble/hashes/sha3":3251},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.remove0x=r.add0x=r.isValidChecksumAddress=r.getChecksumAddress=r.isValidHexAddress=r.assertIsStrictHexString=r.assertIsHexString=r.isStrictHexString=r.isHexString=r.HexChecksumAddressStruct=r.HexAddressStruct=r.StrictHexStruct=r.HexStruct=void 0;const n=e("@metamask/superstruct"),s=e("@noble/hashes/sha3"),o=e("./assert.cjs"),i=e("./bytes.cjs");function a(e){return(0,n.is)(e,r.HexStruct)}function c(e){return(0,n.is)(e,r.StrictHexStruct)}function l(e){(0,o.assert)((0,n.is)(e,r.HexChecksumAddressStruct),"Invalid hex address.");const t=u(e.toLowerCase()),a=u((0,i.bytesToHex)((0,s.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const r=a[t];return(0,o.assert)((0,n.is)(r,(0,n.string)()),"Hash shorter than address."),parseInt(r,16)>7?e.toUpperCase():e})).join("")}`}function d(e){return!!(0,n.is)(e,r.HexChecksumAddressStruct)&&l(e)===e}function u(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}r.HexStruct=(0,n.pattern)((0,n.string)(),/^(?:0x)?[0-9a-f]+$/iu),r.StrictHexStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]+$/iu),r.HexAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]{40}$/u),r.HexChecksumAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-fA-F]{40}$/u),r.isHexString=a,r.isStrictHexString=c,r.assertIsHexString=function(e){(0,o.assert)(a(e),"Value must be a hexadecimal string.")},r.assertIsStrictHexString=function(e){(0,o.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},r.isValidHexAddress=function(e){return(0,n.is)(e,r.HexAddressStruct)||d(e)},r.getChecksumAddress=l,r.isValidChecksumAddress=d,r.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},r.remove0x=u}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/hex.cjs"}],[1349,{"./assert.cjs":1339,"./base64.cjs":1340,"./bytes.cjs":1341,"./caip-types.cjs":1342,"./checksum.cjs":1343,"./coercers.cjs":1344,"./collections.cjs":1345,"./encryption-types.cjs":1346,"./errors.cjs":1347,"./hex.cjs":1348,"./json.cjs":1350,"./keyring.cjs":1351,"./logging.cjs":1352,"./misc.cjs":1353,"./number.cjs":1354,"./opaque.cjs":1355,"./promise.cjs":1356,"./time.cjs":1357,"./transaction-types.cjs":1358,"./versions.cjs":1359},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./assert.cjs"),r),s(e("./base64.cjs"),r),s(e("./bytes.cjs"),r),s(e("./caip-types.cjs"),r),s(e("./checksum.cjs"),r),s(e("./coercers.cjs"),r),s(e("./collections.cjs"),r),s(e("./encryption-types.cjs"),r),s(e("./errors.cjs"),r),s(e("./hex.cjs"),r),s(e("./json.cjs"),r),s(e("./keyring.cjs"),r),s(e("./logging.cjs"),r),s(e("./misc.cjs"),r),s(e("./number.cjs"),r),s(e("./opaque.cjs"),r),s(e("./promise.cjs"),r),s(e("./time.cjs"),r),s(e("./transaction-types.cjs"),r),s(e("./versions.cjs"),r)}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/index.cjs"}],[135,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:5,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/005.js"}],[1350,{"./assert.cjs":1339,"./misc.cjs":1353,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getJsonRpcIdValidator=r.assertIsJsonRpcError=r.isJsonRpcError=r.assertIsJsonRpcFailure=r.isJsonRpcFailure=r.assertIsJsonRpcSuccess=r.isJsonRpcSuccess=r.assertIsJsonRpcResponse=r.isJsonRpcResponse=r.assertIsPendingJsonRpcResponse=r.isPendingJsonRpcResponse=r.JsonRpcResponseStruct=r.JsonRpcFailureStruct=r.JsonRpcSuccessStruct=r.PendingJsonRpcResponseStruct=r.assertIsJsonRpcRequest=r.isJsonRpcRequest=r.assertIsJsonRpcNotification=r.isJsonRpcNotification=r.JsonRpcNotificationStruct=r.JsonRpcRequestStruct=r.JsonRpcParamsStruct=r.JsonRpcErrorStruct=r.JsonRpcIdStruct=r.JsonRpcVersionStruct=r.jsonrpc2=r.getJsonSize=r.getSafeJson=r.isValidJson=r.JsonStruct=r.UnsafeJsonStruct=r.exactOptional=r.object=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs"),o=e("./misc.cjs");function i({path:e,branch:t}){const r=e[e.length-1];return(0,o.hasProperty)(t[t.length-2],r)}function a(e){return new n.Struct({...e,type:`optional ${e.type}`,validator:(t,r)=>!i(r)||e.validator(t,r),refiner:(t,r)=>!i(r)||e.refiner(t,r)})}r.object=e=>(0,n.object)(e),r.exactOptional=a;function c(e){return(0,n.create)(e,r.JsonStruct)}r.UnsafeJsonStruct=(0,n.union)([(0,n.literal)(null),(0,n.boolean)(),(0,n.define)("finite number",(e=>(0,n.is)(e,(0,n.number)())&&Number.isFinite(e))),(0,n.string)(),(0,n.array)((0,n.lazy)((()=>r.UnsafeJsonStruct))),(0,n.record)((0,n.string)(),(0,n.lazy)((()=>r.UnsafeJsonStruct)))]),r.JsonStruct=(0,n.coerce)(r.UnsafeJsonStruct,(0,n.any)(),(e=>((0,s.assertStruct)(e,r.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))))),r.isValidJson=function(e){try{return c(e),!0}catch{return!1}},r.getSafeJson=c,r.getJsonSize=function(e){(0,s.assertStruct)(e,r.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},r.jsonrpc2="2.0",r.JsonRpcVersionStruct=(0,n.literal)(r.jsonrpc2),r.JsonRpcIdStruct=(0,n.nullable)((0,n.union)([(0,n.number)(),(0,n.string)()])),r.JsonRpcErrorStruct=(0,r.object)({code:(0,n.integer)(),message:(0,n.string)(),data:a(r.JsonStruct),stack:a((0,n.string)())}),r.JsonRpcParamsStruct=(0,n.union)([(0,n.record)((0,n.string)(),r.JsonStruct),(0,n.array)(r.JsonStruct)]),r.JsonRpcRequestStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,method:(0,n.string)(),params:a(r.JsonRpcParamsStruct)}),r.JsonRpcNotificationStruct=(0,r.object)({jsonrpc:r.JsonRpcVersionStruct,method:(0,n.string)(),params:a(r.JsonRpcParamsStruct)}),r.isJsonRpcNotification=function(e){return(0,n.is)(e,r.JsonRpcNotificationStruct)},r.assertIsJsonRpcNotification=function(e,t){(0,s.assertStruct)(e,r.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},r.isJsonRpcRequest=function(e){return(0,n.is)(e,r.JsonRpcRequestStruct)},r.assertIsJsonRpcRequest=function(e,t){(0,s.assertStruct)(e,r.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},r.PendingJsonRpcResponseStruct=(0,n.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,result:(0,n.optional)((0,n.unknown)()),error:(0,n.optional)(r.JsonRpcErrorStruct)}),r.JsonRpcSuccessStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,result:r.JsonStruct}),r.JsonRpcFailureStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,error:r.JsonRpcErrorStruct}),r.JsonRpcResponseStruct=(0,n.union)([r.JsonRpcSuccessStruct,r.JsonRpcFailureStruct]),r.isPendingJsonRpcResponse=function(e){return(0,n.is)(e,r.PendingJsonRpcResponseStruct)},r.assertIsPendingJsonRpcResponse=function(e,t){(0,s.assertStruct)(e,r.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},r.isJsonRpcResponse=function(e){return(0,n.is)(e,r.JsonRpcResponseStruct)},r.assertIsJsonRpcResponse=function(e,t){(0,s.assertStruct)(e,r.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},r.isJsonRpcSuccess=function(e){return(0,n.is)(e,r.JsonRpcSuccessStruct)},r.assertIsJsonRpcSuccess=function(e,t){(0,s.assertStruct)(e,r.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},r.isJsonRpcFailure=function(e){return(0,n.is)(e,r.JsonRpcFailureStruct)},r.assertIsJsonRpcFailure=function(e,t){(0,s.assertStruct)(e,r.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},r.isJsonRpcError=function(e){return(0,n.is)(e,r.JsonRpcErrorStruct)},r.assertIsJsonRpcError=function(e,t){(0,s.assertStruct)(e,r.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},r.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:r,permitNull:n}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(r||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||n&&null===e)}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/json.cjs"}],[1351,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/keyring.cjs"}],[1352,{debug:4145},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createModuleLogger=r.createProjectLogger=void 0;const s=(0,n(e("debug")).default)("metamask");r.createProjectLogger=function(e){return s.extend(e)},r.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/logging.cjs"}],[1353,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.calculateNumberSize=r.calculateStringSize=r.isASCII=r.isPlainObject=r.ESCAPE_CHARACTERS_REGEXP=r.JsonSize=r.getKnownPropertyNames=r.hasProperty=r.isObject=r.isNullOrUndefined=r.isNonEmptyArray=void 0,r.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},r.isNullOrUndefined=function(e){return null===e||e===undefined},r.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function n(e){return e.charCodeAt(0)<=127}r.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),r.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(r.JsonSize||(r.JsonSize={})),r.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,r.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},r.isASCII=n,r.calculateStringSize=function(e){return e.split("").reduce(((e,t)=>n(t)?e+1:e+2),0)+(e.match(r.ESCAPE_CHARACTERS_REGEXP)??[]).length},r.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/misc.cjs"}],[1354,{"./assert.cjs":1339,"./hex.cjs":1348},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.hexToBigInt=r.hexToNumber=r.bigIntToHex=r.numberToHex=void 0;const n=e("./assert.cjs"),s=e("./hex.cjs");r.numberToHex=e=>((0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,s.add0x)(e.toString(16)));r.bigIntToHex=e=>((0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=0,"Value must be a non-negative bigint."),(0,s.add0x)(e.toString(16)));r.hexToNumber=e=>{(0,s.assertIsHexString)(e);const t=parseInt(e,16);return(0,n.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};r.hexToBigInt=e=>((0,s.assertIsHexString)(e),BigInt((0,s.add0x)(e)))}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/number.cjs"}],[1355,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/opaque.cjs"}],[1356,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createDeferredPromise=void 0,r.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,r;const n=new Promise(((e,n)=>{t=e,r=n}));return e&&n.catch((e=>{})),{promise:n,resolve:t,reject:r}}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/promise.cjs"}],[1357,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.timeSince=r.inMilliseconds=r.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(r.Duration||(r.Duration={}));const n=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};r.inMilliseconds=function(e,t){return n(e,"count"),e*t},r.timeSince=function(e){return n(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/time.cjs"}],[1358,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1359,{"./assert.cjs":1339,"@metamask/superstruct":3067,semver:5503},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.satisfiesVersionRange=r.gtRange=r.gtVersion=r.assertIsSemVerRange=r.assertIsSemVerVersion=r.isValidSemVerRange=r.isValidSemVerVersion=r.VersionRangeStruct=r.VersionStruct=void 0;const n=e("@metamask/superstruct"),s=e("semver"),o=e("./assert.cjs");r.VersionStruct=(0,n.refine)((0,n.string)(),"Version",(e=>null!==(0,s.valid)(e)||`Expected SemVer version, got "${e}"`)),r.VersionRangeStruct=(0,n.refine)((0,n.string)(),"Version range",(e=>null!==(0,s.validRange)(e)||`Expected SemVer range, got "${e}"`)),r.isValidSemVerVersion=function(e){return(0,n.is)(e,r.VersionStruct)},r.isValidSemVerRange=function(e){return(0,n.is)(e,r.VersionRangeStruct)},r.assertIsSemVerVersion=function(e){(0,o.assertStruct)(e,r.VersionStruct)},r.assertIsSemVerRange=function(e){(0,o.assertStruct)(e,r.VersionRangeStruct)},r.gtVersion=function(e,t){return(0,s.gt)(e,t)},r.gtRange=function(e,t){return(0,s.gtr)(e,t)},r.satisfiesVersionRange=function(e,t){return(0,s.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/accounts-controller>@metamask/utils",file:"node_modules/@metamask/accounts-controller/node_modules/@metamask/utils/dist/versions.cjs"}],[136,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:6,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/006.js"}],[1360,{"@metamask/base-controller":1408,"@metamask/controller-utils":1434},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("@metamask/base-controller"),s=e("@metamask/controller-utils"),o=(e=>(e.externallyOwnedAccounts="EXTERNALLY_OWNED_ACCOUNTS",e.contractAccounts="CONTRACT_ACCOUNTS",e.nonAccounts="NON_ACCOUNTS",e))(o||{}),i="AddressBookController",a={addressBook:{persist:!0,anonymous:!1}},c=()=>({addressBook:{}}),l=class extends n.BaseController{constructor({messenger:e,state:t}){const r={addressBook:{},...t};super({messenger:e,metadata:a,name:i,state:r})}clear(){this.update((e=>{e.addressBook={}}))}delete(e,t){return t=s.toChecksumHexAddress.call(void 0,t),!!([e,t].every((e=>s.isSafeDynamicKey.call(void 0,e)))&&s.isValidHexAddress.call(void 0,t)&&this.state.addressBook[e]&&this.state.addressBook[e][t])&&(this.update((r=>{delete r.addressBook[e][t],0===Object.keys(r.addressBook[e]).length&&delete r.addressBook[e]})),!0)}set(e,t,r=s.toHex.call(void 0,1),n="",o){if(e=s.toChecksumHexAddress.call(void 0,e),!s.isValidHexAddress.call(void 0,e))return!1;const i={address:e,chainId:r,isEns:!1,memo:n,name:t,addressType:o},a=s.normalizeEnsName.call(void 0,t);return a&&(i.name=a,i.isEns=!0),this.update((t=>{t.addressBook={...this.state.addressBook,[r]:{...this.state.addressBook[r],[e]:i}}})),!0}},d=l;r.AddressType=o,r.controllerName=i,r.getDefaultAddressBookControllerState=c,r.AddressBookController=l,r.AddressBookController_default=d}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/chunk-QIOW2RCR.js"}],[1361,{"./chunk-QIOW2RCR.js":1360},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./chunk-QIOW2RCR.js");r.AddressBookController=n.AddressBookController,r.getDefaultAddressBookControllerState=n.getDefaultAddressBookControllerState}}},{package:"@metamask/address-book-controller",file:"node_modules/@metamask/address-book-controller/dist/index.js"}],[1362,{"@metamask/base-controller":1369},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o=(e,t,r)=>(((e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)})(e,t,"access private method"),r),i=e("@metamask/base-controller"),a={announcements:{}},c={announcements:{persist:!0,anonymous:!0}},l=class extends i.BaseController{constructor({messenger:e,state:t,allAnnouncements:r}){const i={...a,...t};super({messenger:e,metadata:c,name:"AnnouncementController",state:i}),((e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)})(this,n),o(this,n,s).call(this,r)}resetViewed(){this.update((({announcements:e})=>{for(const t of Object.values(e))t.isShown=!1}))}updateViewed(e){this.update((({announcements:t})=>{for(const r of Object.keys(e).map(Number))t[r].isShown=e[r]}))}};n=new WeakSet,s=function(e){this.update((t=>{Object.values(e).forEach((e=>{t.announcements[e.id]=t.announcements[e.id]??{...e,isShown:!1}}))}))},r.AnnouncementController=l}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/chunk-ZGM3XNIO.js"}],[1363,{"./chunk-ZGM3XNIO.js":1362},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./chunk-ZGM3XNIO.js");r.AnnouncementController=n.AnnouncementController}}},{package:"@metamask/announcement-controller",file:"node_modules/@metamask/announcement-controller/dist/index.js"}],[1364,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=class{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e of Object.keys(this.internalConfig)){const t=this.internalConfig[e];void 0!==t&&(this[e]=t)}}else for(const t of Object.keys(e))if(void 0!==this.internalConfig[t]){const r=e[t];this.internalConfig[t]=r,this[t]=r}}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}},s=n;r.BaseControllerV1=n,r.BaseControllerV1_default=s}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js"}],[1365,{"./chunk-UJFCPTF3.js":1367,"./chunk-Z4BLTVTB.js":1368},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i,a=e("./chunk-UJFCPTF3.js"),c=e("./chunk-Z4BLTVTB.js");n=new WeakMap,s=new WeakMap,o=new WeakMap,i=new WeakMap,r.ControllerMessenger=class{constructor(){c.__privateAdd.call(void 0,this,n,new Map),c.__privateAdd.call(void 0,this,s,new Map),c.__privateAdd.call(void 0,this,o,new Map),c.__privateAdd.call(void 0,this,i,new Map)}registerActionHandler(e,t){if(c.__privateGet.call(void 0,this,n).has(e))throw new Error(`A handler for ${e} has already been registered`);c.__privateGet.call(void 0,this,n).set(e,t)}unregisterActionHandler(e){c.__privateGet.call(void 0,this,n).delete(e)}clearActions(){c.__privateGet.call(void 0,this,n).clear()}call(e,...t){const r=c.__privateGet.call(void 0,this,n).get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}registerInitialEventPayload({eventType:e,getPayload:t}){c.__privateGet.call(void 0,this,o).set(e,t)}publish(e,...t){const r=c.__privateGet.call(void 0,this,s).get(e);if(r)for(const[e,n]of r.entries())try{if(n){const r=c.__privateGet.call(void 0,this,i).get(e),s=n(...t);s!==r&&(c.__privateGet.call(void 0,this,i).set(e,s),e(s,r))}else e(...t)}catch(e){setTimeout((()=>{throw e}))}}subscribe(e,t,r){let n=c.__privateGet.call(void 0,this,s).get(e);if(n||(n=new Map,c.__privateGet.call(void 0,this,s).set(e,n)),n.set(t,r),r){const n=c.__privateGet.call(void 0,this,o).get(e);if(n){const e=r(...n());c.__privateGet.call(void 0,this,i).set(t,e)}}}unsubscribe(e,t){const r=c.__privateGet.call(void 0,this,s).get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&c.__privateGet.call(void 0,this,i).delete(t),r.delete(t)}clearEventSubscriptions(e){c.__privateGet.call(void 0,this,s).delete(e)}clearSubscriptions(){c.__privateGet.call(void 0,this,s).clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new(0,a.RestrictedControllerMessenger)({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js"}],[1366,{"./chunk-Z4BLTVTB.js":1368,immer:4635},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("./chunk-Z4BLTVTB.js"),o=e("immer");o.enablePatches.call(void 0);function i(e,t,r){return Object.keys(e).reduce(((n,s)=>{try{const o=t[s];if(!o)throw new Error(`No metadata found for '${String(s)}'`);const i=o[r],a=e[s];return"function"==typeof i?n[s]=i(a):i&&(n[s]=a),n}catch(e){return setTimeout((()=>{throw e})),n}}),{})}n=new WeakMap,r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:i}){s.__privateAdd.call(void 0,this,n,void 0),this.messagingSystem=e,this.name=r,s.__privateSet.call(void 0,this,n,o.freeze.call(void 0,i,!0)),this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state)),this.messagingSystem.registerInitialEventPayload({eventType:`${r}:stateChange`,getPayload:()=>[this.state,[]]})}get state(){return s.__privateGet.call(void 0,this,n)}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r,i]=o.produceWithPatches.call(void 0,s.__privateGet.call(void 0,this,n),e);return s.__privateSet.call(void 0,this,n,t),this.messagingSystem.publish(`${this.name}:stateChange`,t,r),{nextState:t,patches:r,inversePatches:i}}applyPatches(e){const t=o.applyPatches.call(void 0,s.__privateGet.call(void 0,this,n),e);s.__privateSet.call(void 0,this,n,t),this.messagingSystem.publish(`${this.name}:stateChange`,t,e)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return i(e,t,"anonymous")},r.getPersistentState=function(e,t){return i(e,t,"persist")}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js"}],[1367,{"./chunk-Z4BLTVTB.js":1368},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i,a,c,l,d,u,h,p=e("./chunk-Z4BLTVTB.js");n=new WeakMap,s=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function(e){const t=p.__privateGet.call(void 0,this,i);return p.__privateMethod.call(void 0,this,u,h).call(this,e)||null!==t&&t.includes(e)},l=new WeakSet,d=function(e){const t=p.__privateGet.call(void 0,this,o);return p.__privateMethod.call(void 0,this,u,h).call(this,e)||null!==t&&t.includes(e)},u=new WeakSet,h=function(e){return e.startsWith(`${p.__privateGet.call(void 0,this,s)}:`)},r.RestrictedControllerMessenger=class{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:c}){p.__privateAdd.call(void 0,this,a),p.__privateAdd.call(void 0,this,l),p.__privateAdd.call(void 0,this,u),p.__privateAdd.call(void 0,this,n,void 0),p.__privateAdd.call(void 0,this,s,void 0),p.__privateAdd.call(void 0,this,o,void 0),p.__privateAdd.call(void 0,this,i,void 0),p.__privateSet.call(void 0,this,n,e),p.__privateSet.call(void 0,this,s,t),p.__privateSet.call(void 0,this,o,r),p.__privateSet.call(void 0,this,i,c)}registerActionHandler(e,t){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed registering action handlers prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).registerActionHandler(e,t)}unregisterActionHandler(e){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed unregistering action handlers prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).unregisterActionHandler(e)}call(e,...t){if(!p.__privateMethod.call(void 0,this,l,d).call(this,e))throw new Error(`Action missing from allow list: ${e}`);return p.__privateGet.call(void 0,this,n).call(e,...t)}registerInitialEventPayload({eventType:e,getPayload:t}){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).registerInitialEventPayload({eventType:e,getPayload:t})}publish(e,...t){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).publish(e,...t)}subscribe(e,t,r){if(!p.__privateMethod.call(void 0,this,a,c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);return r?p.__privateGet.call(void 0,this,n).subscribe(e,t,r):p.__privateGet.call(void 0,this,n).subscribe(e,t)}unsubscribe(e,t){if(!p.__privateMethod.call(void 0,this,a,c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);p.__privateGet.call(void 0,this,n).unsubscribe(e,t)}clearEventSubscriptions(e){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed clearing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).clearEventSubscriptions(e)}}}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js"}],[1368,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};r.__privateGet=(e,t,r)=>(n(e,t,"read from private field"),r?r.call(e):t.get(e)),r.__privateAdd=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},r.__privateSet=(e,t,r,s)=>(n(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),r.__privateMethod=(e,t,r)=>(n(e,t,"access private method"),r)}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js"}],[1369,{"./chunk-FTHCJ6HY.js":1364,"./chunk-G42723LG.js":1365,"./chunk-IURK6TKD.js":1366,"./chunk-UJFCPTF3.js":1367,"./chunk-Z4BLTVTB.js":1368},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./chunk-FTHCJ6HY.js"),s=e("./chunk-IURK6TKD.js"),o=e("./chunk-G42723LG.js"),i=e("./chunk-UJFCPTF3.js");e("./chunk-Z4BLTVTB.js"),r.BaseController=s.BaseController,r.BaseControllerV1=n.BaseControllerV1,r.ControllerMessenger=o.ControllerMessenger,r.RestrictedControllerMessenger=i.RestrictedControllerMessenger,r.getAnonymizedState=s.getAnonymizedState,r.getPersistentState=s.getPersistentState}}},{package:"@metamask/announcement-controller>@metamask/base-controller",file:"node_modules/@metamask/announcement-controller/node_modules/@metamask/base-controller/dist/index.js"}],[137,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:7,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/007.js"}],[138,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:8,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/008.js"}],[139,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:9,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,n.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/009.js"}],[14,{"../../../../shared/modules/bridge-utils/balance":5740,"../../../../shared/modules/conversion.utils":5745,"../../../../ui/pages/bridge/bridge.util":6818,"../../../../ui/pages/bridge/utils/quote":6827,"../../../../ui/pages/swaps/swaps.util":7391,"./constants":15,"./types":16,"@metamask/polling-controller":2424,"@metamask/utils":3201},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/utils"),s=e("@metamask/polling-controller"),o=e("../../../../ui/pages/bridge/bridge.util"),i=e("../../../../ui/pages/swaps/swaps.util"),a=e("../../../../shared/modules/conversion.utils"),c=e("../../../../ui/pages/bridge/utils/quote"),l=e("../../../../shared/modules/bridge-utils/balance"),d=e("./constants"),u=e("./types");function h(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t,r){m(e,t),t.set(e,r)}function m(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function g(e,t){return e.get(f(e,t))}function f(e,t,r){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:r;throw new TypeError("Private element is not present on this object")}const C={bridgeState:{persist:!1,anonymous:!1}},y="Reset controller state";var v=new WeakMap,b=new WeakMap,w=new WeakMap,S=new WeakMap,k=new WeakMap,A=new WeakSet;class T extends s.StaticIntervalPollingController{constructor({messenger:e}){var t,r;super({name:d.BRIDGE_CONTROLLER_NAME,metadata:C,messenger:e,state:{bridgeState:d.DEFAULT_BRIDGE_CONTROLLER_STATE}}),m(t=this,r=A),r.add(t),p(this,v,void 0),h(this,"_executePoll",(async(e,t)=>{await g(w,this).call(this,t)})),h(this,"updateBridgeQuoteRequestParams",(async e=>{var t;this.stopAllPolling(),null===(t=g(v,this))||void 0===t||t.abort("Quote request updated");const{bridgeState:r}=this.state,s={...d.DEFAULT_BRIDGE_CONTROLLER_STATE.quoteRequest,...e};if(this.update((e=>{e.bridgeState={...r,quoteRequest:s,quotes:d.DEFAULT_BRIDGE_CONTROLLER_STATE.quotes,quotesLastFetched:d.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLastFetched,quotesLoadingStatus:d.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesLoadingStatus,quotesRefreshCount:d.DEFAULT_BRIDGE_CONTROLLER_STATE.quotesRefreshCount}})),(0,c.isValidQuoteRequest)(s)){const t=f(A,this,E).call(this).address,r=(0,n.add0x)((0,a.decimalToHex)(s.srcChainId)),o=e.insufficientBal||!await g(b,this).call(this,s),i=f(A,this,_).call(this,r);this.startPollingByNetworkClientId(i,{...s,walletAddress:t,insufficientBal:o})}})),p(this,b,(async e=>{var t;const r=f(A,this,E).call(this).address,s=(0,n.add0x)((0,a.decimalToHex)(e.srcChainId)),o=null===(t=f(A,this,M).call(this))||void 0===t?void 0:t.provider;return o&&await(0,l.hasSufficientBalance)(o,r,e.srcTokenAddress,e.srcTokenAmount,s)})),h(this,"resetState",(()=>{var e;this.stopAllPolling(),null===(e=g(v,this))||void 0===e||e.abort(y),this.update((e=>{e.bridgeState={...d.DEFAULT_BRIDGE_CONTROLLER_STATE,quotes:[],bridgeFeatureFlags:e.bridgeState.bridgeFeatureFlags}}))})),h(this,"setBridgeFeatureFlags",(async()=>{const{bridgeState:e}=this.state,t=await(0,o.fetchBridgeFeatureFlags)();this.update((r=>{r.bridgeState={...e,bridgeFeatureFlags:t}})),this.setIntervalLength(t[u.BridgeFeatureFlagsKey.EXTENSION_CONFIG].refreshRate)})),h(this,"selectSrcNetwork",(async e=>{await g(S,this).call(this,e,"srcTopAssets"),await g(k,this).call(this,e,"srcTokens")})),h(this,"selectDestNetwork",(async e=>{await g(S,this).call(this,e,"destTopAssets"),await g(k,this).call(this,e,"destTokens")})),p(this,w,(async e=>{var t;if(null===(t=g(v,this))||void 0===t||t.abort("New quote request"),function(e,t,r){e.set(f(e,t),r)}(v,this,new AbortController),e.srcChainId===e.destChainId)return;const{bridgeState:r}=this.state;this.update((t=>{t.bridgeState={...r,quotesLoadingStatus:d.RequestStatus.LOADING,quoteRequest:e}}));const{maxRefreshCount:n}=r.bridgeFeatureFlags[u.BridgeFeatureFlagsKey.EXTENSION_CONFIG],s=r.quotesRefreshCount+1;try{const t=await(0,o.fetchBridgeQuotes)(e,g(v,this).signal);(e.insufficientBal&&s>=1||!e.insufficientBal&&s>=n)&&this.stopAllPolling(),this.update((e=>{e.bridgeState={...e.bridgeState,quotes:t,quotesLastFetched:Date.now(),quotesLoadingStatus:d.RequestStatus.FETCHED,quotesRefreshCount:s}}))}catch(e){const t="AbortError"===e.name;if(e===y||t)return;this.update((e=>{e.bridgeState={...r,quotesLoadingStatus:d.RequestStatus.ERROR,quotesRefreshCount:s}})),console.log("Failed to fetch bridge quotes",e)}})),p(this,S,(async(e,t)=>{const{bridgeState:r}=this.state,n=await(0,i.fetchTopAssetsList)(e);this.update((e=>{e.bridgeState={...r,[t]:n}}))})),p(this,k,(async(e,t)=>{const{bridgeState:r}=this.state,n=await(0,o.fetchBridgeTokens)(e);this.update((e=>{e.bridgeState={...r,[t]:n}}))})),this.setIntervalLength(d.REFRESH_INTERVAL_MS),this.messagingSystem.registerActionHandler(`${d.BRIDGE_CONTROLLER_NAME}:setBridgeFeatureFlags`,this.setBridgeFeatureFlags.bind(this)),this.messagingSystem.registerActionHandler(`${d.BRIDGE_CONTROLLER_NAME}:selectSrcNetwork`,this.selectSrcNetwork.bind(this)),this.messagingSystem.registerActionHandler(`${d.BRIDGE_CONTROLLER_NAME}:selectDestNetwork`,this.selectDestNetwork.bind(this)),this.messagingSystem.registerActionHandler(`${d.BRIDGE_CONTROLLER_NAME}:updateBridgeQuoteRequestParams`,this.updateBridgeQuoteRequestParams.bind(this)),this.messagingSystem.registerActionHandler(`${d.BRIDGE_CONTROLLER_NAME}:resetState`,this.resetState.bind(this))}}function E(){return this.messagingSystem.call("AccountsController:getSelectedAccount")}function M(){return this.messagingSystem.call("NetworkController:getSelectedNetworkClient")}function _(e){return this.messagingSystem.call("NetworkController:findNetworkClientIdByChainId",e)}r.default=T}}},{package:"$root$",file:"app/scripts/controllers/bridge/bridge-controller.ts"}],[140,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:10,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,n.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/010.js"}],[141,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:11,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/011.js"}],[142,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:12,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=12;try{const e=function(e){const t=e;return t.NoticeController.noticesList.forEach((e=>{e.read&&(e.body="")})),t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #12${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/012.js"}],[143,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:13,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=13;try{const e=function(e){const t=e,{config:r}=t;r&&r.provider&&"testnet"===r.provider.type&&(t.config.provider.type="ropsten");return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #13${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/013.js"}],[144,{lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");r.default={version:14,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=14;try{const e=function(e){const t=e;return t.NetworkController={},t.NetworkController.provider=t.config.provider,delete t.config.provider,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #14${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/014.js"}],[145,{"@metamask/transaction-controller":3093,lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),s=e("lodash");r.default={version:15,migrate(e){const t=(0,s.cloneDeep)(e);t.meta.version=15;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=r;t.TransactionController.transactions=e.map((e=>e.err?("Gave up submitting tx."===e.err.message&&(e.status=n.TransactionStatus.failed),e):e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #15${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/015.js"}],[146,{"@metamask/transaction-controller":3093,lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),s=e("lodash");r.default={version:16,migrate(e){const t=(0,s.cloneDeep)(e);t.meta.version=16;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>e.err?("transaction with the same hash was already imported."===e.err&&(e.status=n.TransactionStatus.submitted,delete e.err),e):e))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #16${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/016.js"}],[1461,{"@ethersproject/providers":551,"@metamask/base-controller":1468,"@metamask/controller-utils":1434,"@metamask/utils":1479,"punycode/":5025},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},a=(e,t,r)=>(i(e,t,"read from private field"),r?r.call(e):t.get(e)),c=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},l=(e,t,r,n)=>(i(e,t,"write to private field"),n?n.call(e,r):t.set(e,r),r),d=e("@ethersproject/providers"),u=e("@metamask/base-controller"),h=e("@metamask/controller-utils"),p=e("@metamask/utils"),m=e("punycode/"),g=p.createProjectLogger.call(void 0,"ens-controller"),f={1:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",3:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",4:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",5:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",17e3:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",11155111:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"},C={ensEntries:{persist:!0,anonymous:!1},ensResolutionsByAddress:{persist:!0,anonymous:!1}},y={ensEntries:{},ensResolutionsByAddress:{}},v=class extends u.BaseController{constructor({registriesByChainId:e=f,messenger:t,state:r={},provider:a,onNetworkDidChange:u}){super({name:"EnsController",metadata:C,messenger:t,state:{...y,ensEntries:Object.fromEntries(Object.entries(e).map((([e,t])=>[h.toHex.call(void 0,e),{".":{address:t,chainId:h.toHex.call(void 0,e),ensName:"."}}]))),...r}}),c(this,s),c(this,n,null),a&&u&&u((({selectedNetworkClientId:t})=>{this.resetState();const r=this.messagingSystem.call("NetworkController:getNetworkClientById",t).configuration.chainId;var c,u,p;(c=this,u=s,p=o,i(c,u,"access private method"),p).call(this,r)?l(this,n,new(0,d.Web3Provider)(a,{chainId:h.convertHexToDecimal.call(void 0,r),name:h.CHAIN_ID_TO_ETHERS_NETWORK_NAME_MAP[r],ensAddress:e[parseInt(r,16)]})):l(this,n,null)}))}resetState(){this.update((e=>{e.ensResolutionsByAddress={}}))}clear(){this.update((e=>{e.ensEntries={}}))}delete(e,t){const r=h.normalizeEnsName.call(void 0,t);return!!(h.isSafeDynamicKey.call(void 0,e)&&r&&this.state.ensEntries[e]&&this.state.ensEntries[e][r])&&(this.update((t=>{delete t.ensEntries[e][r],0===Object.keys(t.ensEntries[e]).length&&delete t.ensEntries[e]})),!0)}get(e,t){const r=h.normalizeEnsName.call(void 0,t);return r&&this.state.ensEntries[e]&&this.state.ensEntries[e][r]||null}set(e,t,r){if(!Number.isInteger(Number.parseInt(e,10))||!t||"string"!=typeof t||r&&!h.isValidHexAddress.call(void 0,r))throw new Error(`Invalid ENS entry: { chainId:${e}, ensName:${t}, address:${r}}`);const n=h.normalizeEnsName.call(void 0,t);if(!n)throw new Error(`Invalid ENS name: ${t}`);const s=r?h.toChecksumHexAddress.call(void 0,r):null,o=this.state.ensEntries[e];return(!o?.[n]||o[n].address!==s)&&(this.update((t=>{t.ensEntries={...this.state.ensEntries,[e]:{...this.state.ensEntries[e],[n]:{address:s,chainId:e,ensName:n}}}})),!0)}async reverseResolveAddress(e){if(!a(this,n))return;const t=h.toChecksumHexAddress.call(void 0,e);if(this.state.ensResolutionsByAddress[t])return this.state.ensResolutionsByAddress[t];let r,s;try{r=await a(this,n).lookupAddress(t)}catch(e){return void g(e)}if(r){try{s=await a(this,n).resolveName(r)}catch(e){return void g(e)}return s&&"0x0000000000000000000000000000000000000000"!==s&&"0x"!==s&&h.toChecksumHexAddress.call(void 0,s)===t?(this.update((e=>{e.ensResolutionsByAddress[t]=m.toASCII.call(void 0,r)})),r):void 0}}};n=new WeakMap,s=new WeakSet,o=function(e){return Boolean(this.state.ensEntries[e])};var b=v;r.DEFAULT_ENS_NETWORK_MAP=f,r.EnsController=v,r.EnsController_default=b}}},{package:"@metamask/ens-controller",file:"node_modules/@metamask/ens-controller/dist/chunk-BG4UCEGM.js"}],[1462,{"./chunk-BG4UCEGM.js":1461},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./chunk-BG4UCEGM.js");r.DEFAULT_ENS_NETWORK_MAP=n.DEFAULT_ENS_NETWORK_MAP,r.EnsController=n.EnsController}}},{package:"@metamask/ens-controller",file:"node_modules/@metamask/ens-controller/dist/index.js"}],[1463,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=class{constructor(e={},t={}){this.defaultConfig={},this.defaultState={},this.disabled=!1,this.name="BaseController",this.internalConfig=this.defaultConfig,this.internalState=this.defaultState,this.internalListeners=[],this.initialState=t,this.initialConfig=e}initialize(){return this.internalState=this.defaultState,this.internalConfig=this.defaultConfig,this.configure(this.initialConfig),this.update(this.initialState),this}get config(){return this.internalConfig}get state(){return this.internalState}configure(e,t=!1,r=!0){if(r){this.internalConfig=t?e:Object.assign(this.internalConfig,e);for(const e of Object.keys(this.internalConfig)){const t=this.internalConfig[e];void 0!==t&&(this[e]=t)}}else for(const t of Object.keys(e))if(void 0!==this.internalConfig[t]){const r=e[t];this.internalConfig[t]=r,this[t]=r}}notify(){this.disabled||this.internalListeners.forEach((e=>{e(this.internalState)}))}subscribe(e){this.internalListeners.push(e)}unsubscribe(e){const t=this.internalListeners.findIndex((t=>e===t));return t>-1&&this.internalListeners.splice(t,1),t>-1}update(e,t=!1){this.internalState=t?Object.assign({},e):Object.assign({},this.internalState,e),this.notify()}},s=n;r.BaseControllerV1=n,r.BaseControllerV1_default=s}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/chunk-FTHCJ6HY.js"}],[1464,{"./chunk-UJFCPTF3.js":1466,"./chunk-Z4BLTVTB.js":1467},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i,a=e("./chunk-UJFCPTF3.js"),c=e("./chunk-Z4BLTVTB.js");n=new WeakMap,s=new WeakMap,o=new WeakMap,i=new WeakMap,r.ControllerMessenger=class{constructor(){c.__privateAdd.call(void 0,this,n,new Map),c.__privateAdd.call(void 0,this,s,new Map),c.__privateAdd.call(void 0,this,o,new Map),c.__privateAdd.call(void 0,this,i,new Map)}registerActionHandler(e,t){if(c.__privateGet.call(void 0,this,n).has(e))throw new Error(`A handler for ${e} has already been registered`);c.__privateGet.call(void 0,this,n).set(e,t)}unregisterActionHandler(e){c.__privateGet.call(void 0,this,n).delete(e)}clearActions(){c.__privateGet.call(void 0,this,n).clear()}call(e,...t){const r=c.__privateGet.call(void 0,this,n).get(e);if(!r)throw new Error(`A handler for ${e} has not been registered`);return r(...t)}registerInitialEventPayload({eventType:e,getPayload:t}){c.__privateGet.call(void 0,this,o).set(e,t)}publish(e,...t){const r=c.__privateGet.call(void 0,this,s).get(e);if(r)for(const[e,n]of r.entries())try{if(n){const r=c.__privateGet.call(void 0,this,i).get(e),s=n(...t);s!==r&&(c.__privateGet.call(void 0,this,i).set(e,s),e(s,r))}else e(...t)}catch(e){setTimeout((()=>{throw e}))}}subscribe(e,t,r){let n=c.__privateGet.call(void 0,this,s).get(e);if(n||(n=new Map,c.__privateGet.call(void 0,this,s).set(e,n)),n.set(t,r),r){const n=c.__privateGet.call(void 0,this,o).get(e);if(n){const e=r(...n());c.__privateGet.call(void 0,this,i).set(t,e)}}}unsubscribe(e,t){const r=c.__privateGet.call(void 0,this,s).get(e);if(!r||!r.has(t))throw new Error(`Subscription not found for event: ${e}`);r.get(t)&&c.__privateGet.call(void 0,this,i).delete(t),r.delete(t)}clearEventSubscriptions(e){c.__privateGet.call(void 0,this,s).delete(e)}clearSubscriptions(){c.__privateGet.call(void 0,this,s).clear()}getRestricted({name:e,allowedActions:t,allowedEvents:r}){return new(0,a.RestrictedControllerMessenger)({controllerMessenger:this,name:e,allowedActions:t,allowedEvents:r})}}}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/chunk-G42723LG.js"}],[1465,{"./chunk-Z4BLTVTB.js":1467,immer:4635},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("./chunk-Z4BLTVTB.js"),o=e("immer");o.enablePatches.call(void 0);function i(e,t,r){return Object.keys(e).reduce(((n,s)=>{try{const o=t[s];if(!o)throw new Error(`No metadata found for '${String(s)}'`);const i=o[r],a=e[s];return"function"==typeof i?n[s]=i(a):i&&(n[s]=a),n}catch(e){return setTimeout((()=>{throw e})),n}}),{})}n=new WeakMap,r.BaseController=class{constructor({messenger:e,metadata:t,name:r,state:i}){s.__privateAdd.call(void 0,this,n,void 0),this.messagingSystem=e,this.name=r,s.__privateSet.call(void 0,this,n,o.freeze.call(void 0,i,!0)),this.metadata=t,this.messagingSystem.registerActionHandler(`${r}:getState`,(()=>this.state)),this.messagingSystem.registerInitialEventPayload({eventType:`${r}:stateChange`,getPayload:()=>[this.state,[]]})}get state(){return s.__privateGet.call(void 0,this,n)}set state(e){throw new Error("Controller state cannot be directly mutated; use 'update' method instead.")}update(e){const[t,r,i]=o.produceWithPatches.call(void 0,s.__privateGet.call(void 0,this,n),e);return s.__privateSet.call(void 0,this,n,t),this.messagingSystem.publish(`${this.name}:stateChange`,t,r),{nextState:t,patches:r,inversePatches:i}}applyPatches(e){const t=o.applyPatches.call(void 0,s.__privateGet.call(void 0,this,n),e);s.__privateSet.call(void 0,this,n,t),this.messagingSystem.publish(`${this.name}:stateChange`,t,e)}destroy(){this.messagingSystem.clearEventSubscriptions(`${this.name}:stateChange`)}},r.getAnonymizedState=function(e,t){return i(e,t,"anonymous")},r.getPersistentState=function(e,t){return i(e,t,"persist")}}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/chunk-IURK6TKD.js"}],[1466,{"./chunk-Z4BLTVTB.js":1467},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i,a,c,l,d,u,h,p=e("./chunk-Z4BLTVTB.js");n=new WeakMap,s=new WeakMap,o=new WeakMap,i=new WeakMap,a=new WeakSet,c=function(e){const t=p.__privateGet.call(void 0,this,i);return p.__privateMethod.call(void 0,this,u,h).call(this,e)||null!==t&&t.includes(e)},l=new WeakSet,d=function(e){const t=p.__privateGet.call(void 0,this,o);return p.__privateMethod.call(void 0,this,u,h).call(this,e)||null!==t&&t.includes(e)},u=new WeakSet,h=function(e){return e.startsWith(`${p.__privateGet.call(void 0,this,s)}:`)},r.RestrictedControllerMessenger=class{constructor({controllerMessenger:e,name:t,allowedActions:r,allowedEvents:c}){p.__privateAdd.call(void 0,this,a),p.__privateAdd.call(void 0,this,l),p.__privateAdd.call(void 0,this,u),p.__privateAdd.call(void 0,this,n,void 0),p.__privateAdd.call(void 0,this,s,void 0),p.__privateAdd.call(void 0,this,o,void 0),p.__privateAdd.call(void 0,this,i,void 0),p.__privateSet.call(void 0,this,n,e),p.__privateSet.call(void 0,this,s,t),p.__privateSet.call(void 0,this,o,r),p.__privateSet.call(void 0,this,i,c)}registerActionHandler(e,t){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed registering action handlers prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).registerActionHandler(e,t)}unregisterActionHandler(e){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed unregistering action handlers prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).unregisterActionHandler(e)}call(e,...t){if(!p.__privateMethod.call(void 0,this,l,d).call(this,e))throw new Error(`Action missing from allow list: ${e}`);return p.__privateGet.call(void 0,this,n).call(e,...t)}registerInitialEventPayload({eventType:e,getPayload:t}){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).registerInitialEventPayload({eventType:e,getPayload:t})}publish(e,...t){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed publishing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).publish(e,...t)}subscribe(e,t,r){if(!p.__privateMethod.call(void 0,this,a,c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);return r?p.__privateGet.call(void 0,this,n).subscribe(e,t,r):p.__privateGet.call(void 0,this,n).subscribe(e,t)}unsubscribe(e,t){if(!p.__privateMethod.call(void 0,this,a,c).call(this,e))throw new Error(`Event missing from allow list: ${e}`);p.__privateGet.call(void 0,this,n).unsubscribe(e,t)}clearEventSubscriptions(e){if(!p.__privateMethod.call(void 0,this,u,h).call(this,e))throw new Error(`Only allowed clearing events prefixed by '${p.__privateGet.call(void 0,this,s)}:'`);p.__privateGet.call(void 0,this,n).clearEventSubscriptions(e)}}}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/chunk-UJFCPTF3.js"}],[1467,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)};r.__privateGet=(e,t,r)=>(n(e,t,"read from private field"),r?r.call(e):t.get(e)),r.__privateAdd=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},r.__privateSet=(e,t,r,s)=>(n(e,t,"write to private field"),s?s.call(e,r):t.set(e,r),r),r.__privateMethod=(e,t,r)=>(n(e,t,"access private method"),r)}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/chunk-Z4BLTVTB.js"}],[1468,{"./chunk-FTHCJ6HY.js":1463,"./chunk-G42723LG.js":1464,"./chunk-IURK6TKD.js":1465,"./chunk-UJFCPTF3.js":1466,"./chunk-Z4BLTVTB.js":1467},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./chunk-FTHCJ6HY.js"),s=e("./chunk-IURK6TKD.js"),o=e("./chunk-G42723LG.js"),i=e("./chunk-UJFCPTF3.js");e("./chunk-Z4BLTVTB.js"),r.BaseController=s.BaseController,r.BaseControllerV1=n.BaseControllerV1,r.ControllerMessenger=o.ControllerMessenger,r.RestrictedControllerMessenger=i.RestrictedControllerMessenger,r.getAnonymizedState=s.getAnonymizedState,r.getPersistentState=s.getPersistentState}}},{package:"@metamask/ens-controller>@metamask/base-controller",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/base-controller/dist/index.js"}],[1469,{"./errors.cjs":1477,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.assertExhaustive=r.assertStruct=r.assert=r.AssertionError=void 0;const n=e("@metamask/superstruct"),s=e("./errors.cjs");function o(e,t){return r=e,Boolean("string"==typeof r?.prototype?.constructor?.name)?new e({message:t}):e({message:t});var r}class i extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}}r.AssertionError=i,r.assert=function(e,t="Assertion failed.",r=i){if(!e){if(t instanceof Error)throw t;throw o(r,t)}},r.assertStruct=function(e,t,r="Assertion failed",a=i){try{(0,n.assert)(e,t)}catch(e){throw o(a,`${r}: ${function(e){return(0,s.getErrorMessage)(e).replace(/\.$/u,"")}(e)}.`)}},r.assertExhaustive=function(e){throw new Error("Invalid branch reached. Should be detected during compilation.")}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/assert.cjs"}],[147,{"@metamask/transaction-controller":3093,lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),s=e("lodash");r.default={version:17,migrate(e){const t=(0,s.cloneDeep)(e);t.meta.version=17;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>(!e.status===n.TransactionStatus.failed||e.retryCount>0&&e.retryCount<2&&(e.status=n.TransactionStatus.submitted,delete e.err),e)))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #17${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/017.js"}],[1470,{"./assert.cjs":1469,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.base64=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs");r.base64=(e,t={})=>{const r=t.paddingRequired??!1,o=t.characterSet??"base64";let i,a;return"base64"===o?i=String.raw`[A-Za-z0-9+\/]`:((0,s.assert)("base64url"===o),i=String.raw`[-_A-Za-z0-9]`),a=r?new RegExp(`^(?:${i}{4})*(?:${i}{3}=|${i}{2}==)?$`,"u"):new RegExp(`^(?:${i}{4})*(?:${i}{2,3}|${i}{3}=|${i}{2}==)?$`,"u"),(0,n.pattern)(e,a)}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/base64.cjs"}],[1471,{"./assert.cjs":1469,"./hex.cjs":1478,"@scure/base":3270,buffer:4001},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.createDataView=r.concatBytes=r.valueToBytes=r.base64ToBytes=r.stringToBytes=r.numberToBytes=r.signedBigIntToBytes=r.bigIntToBytes=r.hexToBytes=r.bytesToBase64=r.bytesToString=r.bytesToNumber=r.bytesToSignedBigInt=r.bytesToBigInt=r.bytesToHex=r.assertIsBytes=r.isBytes=void 0;const n=e("@scure/base"),s=e("./assert.cjs"),o=e("./hex.cjs"),i=48,a=58,c=87;const l=function(){const e=[];return()=>{if(0===e.length)for(let t=0;t<256;t++)e.push(t.toString(16).padStart(2,"0"));return e}}();function d(e){return e instanceof Uint8Array}function u(e){(0,s.assert)(d(e),"Value must be a Uint8Array.")}function h(e){if(u(e),0===e.length)return"0x";const t=l(),r=new Array(e.length);for(let n=0;n<e.length;n++)r[n]=t[e[n]];return(0,o.add0x)(r.join(""))}function p(e){u(e);const t=h(e);return BigInt(t)}function m(e){if("0x"===e?.toLowerCase?.())return new Uint8Array;(0,o.assertIsHexString)(e);const t=(0,o.remove0x)(e).toLowerCase(),r=t.length%2==0?t:`0${t}`,n=new Uint8Array(r.length/2);for(let e=0;e<n.length;e++){const t=r.charCodeAt(2*e),s=r.charCodeAt(2*e+1),o=t-(t<a?i:c),l=s-(s<a?i:c);n[e]=16*o+l}return n}function g(e){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)(e>=BigInt(0),"Value must be a non-negative bigint.");return m(e.toString(16))}function f(e){(0,s.assert)("number"==typeof e,"Value must be a number."),(0,s.assert)(e>=0,"Value must be a non-negative number."),(0,s.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToBytes` instead.");return m(e.toString(16))}function C(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),(new TextEncoder).encode(e)}function y(e){if("bigint"==typeof e)return g(e);if("number"==typeof e)return f(e);if("string"==typeof e)return e.startsWith("0x")?m(e):C(e);if(d(e))return e;throw new TypeError(`Unsupported value type: "${typeof e}".`)}r.isBytes=d,r.assertIsBytes=u,r.bytesToHex=h,r.bytesToBigInt=p,r.bytesToSignedBigInt=function(e){u(e);let t=BigInt(0);for(const r of e)t=(t<<BigInt(8))+BigInt(r);return BigInt.asIntN(8*e.length,t)},r.bytesToNumber=function(e){u(e);const t=p(e);return(0,s.assert)(t<=BigInt(Number.MAX_SAFE_INTEGER),"Number is not a safe integer. Use `bytesToBigInt` instead."),Number(t)},r.bytesToString=function(e){return u(e),(new TextDecoder).decode(e)},r.bytesToBase64=function(e){return u(e),n.base64.encode(e)},r.hexToBytes=m,r.bigIntToBytes=g,r.signedBigIntToBytes=function(e,t){(0,s.assert)("bigint"==typeof e,"Value must be a bigint."),(0,s.assert)("number"==typeof t,"Byte length must be a number."),(0,s.assert)(t>0,"Byte length must be greater than 0."),(0,s.assert)(function(e,t){(0,s.assert)(t>0);const r=e>>BigInt(31);return!((~e&r)+(e&~r)>>BigInt(8*t-1))}(e,t),"Byte length is too small to represent the given value.");let r=e;const n=new Uint8Array(t);for(let e=0;e<n.length;e++)n[e]=Number(BigInt.asUintN(8,r)),r>>=BigInt(8);return n.reverse()},r.numberToBytes=f,r.stringToBytes=C,r.base64ToBytes=function(e){return(0,s.assert)("string"==typeof e,"Value must be a string."),n.base64.decode(e)},r.valueToBytes=y,r.concatBytes=function(e){const t=new Array(e.length);let r=0;for(let n=0;n<e.length;n++){const s=y(e[n]);t[n]=s,r+=s.length}const n=new Uint8Array(r);for(let e=0,r=0;e<t.length;e++)n.set(t[e],r),r+=t[e].length;return n},r.createDataView=function(e){if(void 0!==t&&e instanceof t){const t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return new DataView(t)}return new DataView(e.buffer,e.byteOffset,e.byteLength)}}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/bytes.cjs"}],[1472,{"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.toCaipChainId=r.parseCaipAccountId=r.parseCaipChainId=r.isCaipAssetId=r.isCaipAssetType=r.isCaipAccountAddress=r.isCaipAccountId=r.isCaipReference=r.isCaipNamespace=r.isCaipChainId=r.KnownCaipNamespace=r.CaipAssetIdStruct=r.CaipAssetTypeStruct=r.CaipAccountAddressStruct=r.CaipAccountIdStruct=r.CaipReferenceStruct=r.CaipNamespaceStruct=r.CaipChainIdStruct=r.CAIP_ASSET_ID_REGEX=r.CAIP_ASSET_TYPE_REGEX=r.CAIP_ACCOUNT_ADDRESS_REGEX=r.CAIP_ACCOUNT_ID_REGEX=r.CAIP_REFERENCE_REGEX=r.CAIP_NAMESPACE_REGEX=r.CAIP_CHAIN_ID_REGEX=void 0;const n=e("@metamask/superstruct");function s(e){return(0,n.is)(e,r.CaipNamespaceStruct)}function o(e){return(0,n.is)(e,r.CaipReferenceStruct)}r.CAIP_CHAIN_ID_REGEX=/^(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})$/u,r.CAIP_NAMESPACE_REGEX=/^[-a-z0-9]{3,8}$/u,r.CAIP_REFERENCE_REGEX=/^[-_a-zA-Z0-9]{1,32}$/u,r.CAIP_ACCOUNT_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32})):(?<accountAddress>[-.%a-zA-Z0-9]{1,128})$/u,r.CAIP_ACCOUNT_ADDRESS_REGEX=/^[-.%a-zA-Z0-9]{1,128}$/u,r.CAIP_ASSET_TYPE_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})$/u,r.CAIP_ASSET_ID_REGEX=/^(?<chainId>(?<namespace>[-a-z0-9]{3,8}):(?<reference>[-_a-zA-Z0-9]{1,32}))\/(?<assetNamespace>[-a-z0-9]{3,8}):(?<assetReference>[-.%a-zA-Z0-9]{1,128})\/(?<tokenId>[-.%a-zA-Z0-9]{1,78})$/u,r.CaipChainIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_CHAIN_ID_REGEX),r.CaipNamespaceStruct=(0,n.pattern)((0,n.string)(),r.CAIP_NAMESPACE_REGEX),r.CaipReferenceStruct=(0,n.pattern)((0,n.string)(),r.CAIP_REFERENCE_REGEX),r.CaipAccountIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ACCOUNT_ID_REGEX),r.CaipAccountAddressStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ACCOUNT_ADDRESS_REGEX),r.CaipAssetTypeStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ASSET_TYPE_REGEX),r.CaipAssetIdStruct=(0,n.pattern)((0,n.string)(),r.CAIP_ASSET_ID_REGEX),function(e){e.Bip122="bip122",e.Eip155="eip155",e.Wallet="wallet"}(r.KnownCaipNamespace||(r.KnownCaipNamespace={})),r.isCaipChainId=function(e){return(0,n.is)(e,r.CaipChainIdStruct)},r.isCaipNamespace=s,r.isCaipReference=o,r.isCaipAccountId=function(e){return(0,n.is)(e,r.CaipAccountIdStruct)},r.isCaipAccountAddress=function(e){return(0,n.is)(e,r.CaipAccountAddressStruct)},r.isCaipAssetType=function(e){return(0,n.is)(e,r.CaipAssetTypeStruct)},r.isCaipAssetId=function(e){return(0,n.is)(e,r.CaipAssetIdStruct)},r.parseCaipChainId=function(e){const t=r.CAIP_CHAIN_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP chain ID.");return{namespace:t.groups.namespace,reference:t.groups.reference}},r.parseCaipAccountId=function(e){const t=r.CAIP_ACCOUNT_ID_REGEX.exec(e);if(!t?.groups)throw new Error("Invalid CAIP account ID.");return{address:t.groups.accountAddress,chainId:t.groups.chainId,chain:{namespace:t.groups.namespace,reference:t.groups.reference}}},r.toCaipChainId=function(e,t){if(!s(e))throw new Error(`Invalid "namespace", must match: ${r.CAIP_NAMESPACE_REGEX.toString()}`);if(!o(t))throw new Error(`Invalid "reference", must match: ${r.CAIP_REFERENCE_REGEX.toString()}`);return`${e}:${t}`}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/caip-types.cjs"}],[1473,{"./base64.cjs":1470,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ChecksumStruct=void 0;const n=e("@metamask/superstruct"),s=e("./base64.cjs");r.ChecksumStruct=(0,n.size)((0,s.base64)((0,n.string)(),{paddingRequired:!0}),44,44)}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/checksum.cjs"}],[1474,{"./assert.cjs":1469,"./bytes.cjs":1471,"./hex.cjs":1478,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createHex=r.createBytes=r.createBigInt=r.createNumber=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs"),o=e("./bytes.cjs"),i=e("./hex.cjs"),a=(0,n.union)([(0,n.number)(),(0,n.bigint)(),(0,n.string)(),i.StrictHexStruct]),c=(0,n.coerce)((0,n.number)(),a,Number),l=(0,n.coerce)((0,n.bigint)(),a,BigInt),d=((0,n.union)([i.StrictHexStruct,(0,n.instance)(Uint8Array)]),(0,n.coerce)((0,n.instance)(Uint8Array),(0,n.union)([i.StrictHexStruct]),o.hexToBytes)),u=(0,n.coerce)(i.StrictHexStruct,(0,n.instance)(Uint8Array),o.bytesToHex);r.createNumber=function(e){try{const t=(0,n.create)(e,c);return(0,s.assert)(Number.isFinite(t),`Expected a number-like value, got "${e}".`),t}catch(t){if(t instanceof n.StructError)throw new Error(`Expected a number-like value, got "${e}".`);throw t}},r.createBigInt=function(e){try{return(0,n.create)(e,l)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a number-like value, got "${String(e.value)}".`);throw e}},r.createBytes=function(e){if("string"==typeof e&&"0x"===e.toLowerCase())return new Uint8Array;try{return(0,n.create)(e,d)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}},r.createHex=function(e){if(e instanceof Uint8Array&&0===e.length||"string"==typeof e&&"0x"===e.toLowerCase())return"0x";try{return(0,n.create)(e,u)}catch(e){if(e instanceof n.StructError)throw new Error(`Expected a bytes-like value, got "${String(e.value)}".`);throw e}}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/coercers.cjs"}],[1475,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n,s,o=this&&this.__classPrivateFieldGet||function(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)},i=this&&this.__classPrivateFieldSet||function(e,t,r,n,s){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!s)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!s:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?s.call(e,r):s?s.value=r:t.set(e,r),r};Object.defineProperty(r,"__esModule",{value:!0}),r.FrozenSet=r.FrozenMap=void 0;class a{get size(){return o(this,n,"f").size}[(n=new WeakMap,Symbol.iterator)](){return o(this,n,"f")[Symbol.iterator]()}constructor(e){n.set(this,void 0),i(this,n,new Map(e),"f"),Object.freeze(this)}entries(){return o(this,n,"f").entries()}forEach(e,t){return o(this,n,"f").forEach(((r,n,s)=>e.call(t,r,n,this)))}get(e){return o(this,n,"f").get(e)}has(e){return o(this,n,"f").has(e)}keys(){return o(this,n,"f").keys()}values(){return o(this,n,"f").values()}toString(){return`FrozenMap(${this.size}) {${this.size>0?` ${[...this.entries()].map((([e,t])=>`${String(e)} => ${String(t)}`)).join(", ")} `:""}}`}}r.FrozenMap=a;class c{get size(){return o(this,s,"f").size}[(s=new WeakMap,Symbol.iterator)](){return o(this,s,"f")[Symbol.iterator]()}constructor(e){s.set(this,void 0),i(this,s,new Set(e),"f"),Object.freeze(this)}entries(){return o(this,s,"f").entries()}forEach(e,t){return o(this,s,"f").forEach(((r,n,s)=>e.call(t,r,n,this)))}has(e){return o(this,s,"f").has(e)}keys(){return o(this,s,"f").keys()}values(){return o(this,s,"f").values()}toString(){return`FrozenSet(${this.size}) {${this.size>0?` ${[...this.values()].map((e=>String(e))).join(", ")} `:""}}`}}r.FrozenSet=c,Object.freeze(a),Object.freeze(a.prototype),Object.freeze(c),Object.freeze(c.prototype)}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/collections.cjs"}],[1476,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/encryption-types.cjs"}],[1477,{"./misc.cjs":1483,"pony-cause":4957},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.wrapError=r.getErrorMessage=r.isErrorWithStack=r.isErrorWithMessage=r.isErrorWithCode=void 0;const n=e("pony-cause"),s=e("./misc.cjs");function o(e){return"object"==typeof e&&null!==e&&"code"in e}function i(e){return"object"==typeof e&&null!==e&&"message"in e}r.isErrorWithCode=o,r.isErrorWithMessage=i,r.isErrorWithStack=function(e){return"object"==typeof e&&null!==e&&"stack"in e},r.getErrorMessage=function(e){return i(e)&&"string"==typeof e.message?e.message:(0,s.isNullOrUndefined)(e)?"":String(e)},r.wrapError=function(e,t){if((r=e)instanceof Error||(0,s.isObject)(r)&&"Error"===r.constructor.name){let r;return r=2===Error.length?new Error(t,{cause:e}):new n.ErrorWithCause(t,{cause:e}),o(e)&&(r.code=e.code),r}var r;return t.length>0?new Error(`${String(e)}: ${t}`):new Error(String(e))}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/errors.cjs"}],[1478,{"./assert.cjs":1469,"./bytes.cjs":1471,"@metamask/superstruct":3067,"@noble/hashes/sha3":3251},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.remove0x=r.add0x=r.isValidChecksumAddress=r.getChecksumAddress=r.isValidHexAddress=r.assertIsStrictHexString=r.assertIsHexString=r.isStrictHexString=r.isHexString=r.HexChecksumAddressStruct=r.HexAddressStruct=r.StrictHexStruct=r.HexStruct=void 0;const n=e("@metamask/superstruct"),s=e("@noble/hashes/sha3"),o=e("./assert.cjs"),i=e("./bytes.cjs");function a(e){return(0,n.is)(e,r.HexStruct)}function c(e){return(0,n.is)(e,r.StrictHexStruct)}function l(e){(0,o.assert)((0,n.is)(e,r.HexChecksumAddressStruct),"Invalid hex address.");const t=u(e.toLowerCase()),a=u((0,i.bytesToHex)((0,s.keccak_256)(t)));return`0x${t.split("").map(((e,t)=>{const r=a[t];return(0,o.assert)((0,n.is)(r,(0,n.string)()),"Hash shorter than address."),parseInt(r,16)>7?e.toUpperCase():e})).join("")}`}function d(e){return!!(0,n.is)(e,r.HexChecksumAddressStruct)&&l(e)===e}function u(e){return e.startsWith("0x")||e.startsWith("0X")?e.substring(2):e}r.HexStruct=(0,n.pattern)((0,n.string)(),/^(?:0x)?[0-9a-f]+$/iu),r.StrictHexStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]+$/iu),r.HexAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-f]{40}$/u),r.HexChecksumAddressStruct=(0,n.pattern)((0,n.string)(),/^0x[0-9a-fA-F]{40}$/u),r.isHexString=a,r.isStrictHexString=c,r.assertIsHexString=function(e){(0,o.assert)(a(e),"Value must be a hexadecimal string.")},r.assertIsStrictHexString=function(e){(0,o.assert)(c(e),'Value must be a hexadecimal string, starting with "0x".')},r.isValidHexAddress=function(e){return(0,n.is)(e,r.HexAddressStruct)||d(e)},r.getChecksumAddress=l,r.isValidChecksumAddress=d,r.add0x=function(e){return e.startsWith("0x")?e:e.startsWith("0X")?`0x${e.substring(2)}`:`0x${e}`},r.remove0x=u}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/hex.cjs"}],[1479,{"./assert.cjs":1469,"./base64.cjs":1470,"./bytes.cjs":1471,"./caip-types.cjs":1472,"./checksum.cjs":1473,"./coercers.cjs":1474,"./collections.cjs":1475,"./encryption-types.cjs":1476,"./errors.cjs":1477,"./hex.cjs":1478,"./json.cjs":1480,"./keyring.cjs":1481,"./logging.cjs":1482,"./misc.cjs":1483,"./number.cjs":1484,"./opaque.cjs":1485,"./promise.cjs":1486,"./time.cjs":1487,"./transaction-types.cjs":1488,"./versions.cjs":1489},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,s)}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./assert.cjs"),r),s(e("./base64.cjs"),r),s(e("./bytes.cjs"),r),s(e("./caip-types.cjs"),r),s(e("./checksum.cjs"),r),s(e("./coercers.cjs"),r),s(e("./collections.cjs"),r),s(e("./encryption-types.cjs"),r),s(e("./errors.cjs"),r),s(e("./hex.cjs"),r),s(e("./json.cjs"),r),s(e("./keyring.cjs"),r),s(e("./logging.cjs"),r),s(e("./misc.cjs"),r),s(e("./number.cjs"),r),s(e("./opaque.cjs"),r),s(e("./promise.cjs"),r),s(e("./time.cjs"),r),s(e("./transaction-types.cjs"),r),s(e("./versions.cjs"),r)}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/index.cjs"}],[148,{"fast-json-patch":4342,lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("fast-json-patch"))&&n.__esModule?n:{default:n},o=e("lodash");r.default={version:18,migrate(e){const t=(0,o.cloneDeep)(e);t.meta.version=18;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map((e=>{if(!e.history||0===e.history.length){const t=function(e){const t={...e};return delete t.history,(0,o.cloneDeep)(t)}(e);return e.history=[t],e}const t=(r=e.history,r.map(((e,t)=>0===t?e:function(e,t,r){const n=s.default.compare(e,t);return n[0]&&(r&&(n[0].note=r),n[0].timestamp=Date.now()),n}(r[t-1],e)))).filter((e=>!Array.isArray(e)||e.length>0));var r;return e.history=t,e}))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #18${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/018.js"}],[1480,{"./assert.cjs":1469,"./misc.cjs":1483,"@metamask/superstruct":3067},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.getJsonRpcIdValidator=r.assertIsJsonRpcError=r.isJsonRpcError=r.assertIsJsonRpcFailure=r.isJsonRpcFailure=r.assertIsJsonRpcSuccess=r.isJsonRpcSuccess=r.assertIsJsonRpcResponse=r.isJsonRpcResponse=r.assertIsPendingJsonRpcResponse=r.isPendingJsonRpcResponse=r.JsonRpcResponseStruct=r.JsonRpcFailureStruct=r.JsonRpcSuccessStruct=r.PendingJsonRpcResponseStruct=r.assertIsJsonRpcRequest=r.isJsonRpcRequest=r.assertIsJsonRpcNotification=r.isJsonRpcNotification=r.JsonRpcNotificationStruct=r.JsonRpcRequestStruct=r.JsonRpcParamsStruct=r.JsonRpcErrorStruct=r.JsonRpcIdStruct=r.JsonRpcVersionStruct=r.jsonrpc2=r.getJsonSize=r.getSafeJson=r.isValidJson=r.JsonStruct=r.UnsafeJsonStruct=r.exactOptional=r.object=void 0;const n=e("@metamask/superstruct"),s=e("./assert.cjs"),o=e("./misc.cjs");function i({path:e,branch:t}){const r=e[e.length-1];return(0,o.hasProperty)(t[t.length-2],r)}function a(e){return new n.Struct({...e,type:`optional ${e.type}`,validator:(t,r)=>!i(r)||e.validator(t,r),refiner:(t,r)=>!i(r)||e.refiner(t,r)})}r.object=e=>(0,n.object)(e),r.exactOptional=a;function c(e){return(0,n.create)(e,r.JsonStruct)}r.UnsafeJsonStruct=(0,n.union)([(0,n.literal)(null),(0,n.boolean)(),(0,n.define)("finite number",(e=>(0,n.is)(e,(0,n.number)())&&Number.isFinite(e))),(0,n.string)(),(0,n.array)((0,n.lazy)((()=>r.UnsafeJsonStruct))),(0,n.record)((0,n.string)(),(0,n.lazy)((()=>r.UnsafeJsonStruct)))]),r.JsonStruct=(0,n.coerce)(r.UnsafeJsonStruct,(0,n.any)(),(e=>((0,s.assertStruct)(e,r.UnsafeJsonStruct),JSON.parse(JSON.stringify(e,((e,t)=>"__proto__"===e||"constructor"===e?undefined:t)))))),r.isValidJson=function(e){try{return c(e),!0}catch{return!1}},r.getSafeJson=c,r.getJsonSize=function(e){(0,s.assertStruct)(e,r.JsonStruct,"Invalid JSON value");const t=JSON.stringify(e);return(new TextEncoder).encode(t).byteLength},r.jsonrpc2="2.0",r.JsonRpcVersionStruct=(0,n.literal)(r.jsonrpc2),r.JsonRpcIdStruct=(0,n.nullable)((0,n.union)([(0,n.number)(),(0,n.string)()])),r.JsonRpcErrorStruct=(0,r.object)({code:(0,n.integer)(),message:(0,n.string)(),data:a(r.JsonStruct),stack:a((0,n.string)())}),r.JsonRpcParamsStruct=(0,n.union)([(0,n.record)((0,n.string)(),r.JsonStruct),(0,n.array)(r.JsonStruct)]),r.JsonRpcRequestStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,method:(0,n.string)(),params:a(r.JsonRpcParamsStruct)}),r.JsonRpcNotificationStruct=(0,r.object)({jsonrpc:r.JsonRpcVersionStruct,method:(0,n.string)(),params:a(r.JsonRpcParamsStruct)}),r.isJsonRpcNotification=function(e){return(0,n.is)(e,r.JsonRpcNotificationStruct)},r.assertIsJsonRpcNotification=function(e,t){(0,s.assertStruct)(e,r.JsonRpcNotificationStruct,"Invalid JSON-RPC notification",t)},r.isJsonRpcRequest=function(e){return(0,n.is)(e,r.JsonRpcRequestStruct)},r.assertIsJsonRpcRequest=function(e,t){(0,s.assertStruct)(e,r.JsonRpcRequestStruct,"Invalid JSON-RPC request",t)},r.PendingJsonRpcResponseStruct=(0,n.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,result:(0,n.optional)((0,n.unknown)()),error:(0,n.optional)(r.JsonRpcErrorStruct)}),r.JsonRpcSuccessStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,result:r.JsonStruct}),r.JsonRpcFailureStruct=(0,r.object)({id:r.JsonRpcIdStruct,jsonrpc:r.JsonRpcVersionStruct,error:r.JsonRpcErrorStruct}),r.JsonRpcResponseStruct=(0,n.union)([r.JsonRpcSuccessStruct,r.JsonRpcFailureStruct]),r.isPendingJsonRpcResponse=function(e){return(0,n.is)(e,r.PendingJsonRpcResponseStruct)},r.assertIsPendingJsonRpcResponse=function(e,t){(0,s.assertStruct)(e,r.PendingJsonRpcResponseStruct,"Invalid pending JSON-RPC response",t)},r.isJsonRpcResponse=function(e){return(0,n.is)(e,r.JsonRpcResponseStruct)},r.assertIsJsonRpcResponse=function(e,t){(0,s.assertStruct)(e,r.JsonRpcResponseStruct,"Invalid JSON-RPC response",t)},r.isJsonRpcSuccess=function(e){return(0,n.is)(e,r.JsonRpcSuccessStruct)},r.assertIsJsonRpcSuccess=function(e,t){(0,s.assertStruct)(e,r.JsonRpcSuccessStruct,"Invalid JSON-RPC success response",t)},r.isJsonRpcFailure=function(e){return(0,n.is)(e,r.JsonRpcFailureStruct)},r.assertIsJsonRpcFailure=function(e,t){(0,s.assertStruct)(e,r.JsonRpcFailureStruct,"Invalid JSON-RPC failure response",t)},r.isJsonRpcError=function(e){return(0,n.is)(e,r.JsonRpcErrorStruct)},r.assertIsJsonRpcError=function(e,t){(0,s.assertStruct)(e,r.JsonRpcErrorStruct,"Invalid JSON-RPC error",t)},r.getJsonRpcIdValidator=function(e){const{permitEmptyString:t,permitFractions:r,permitNull:n}={permitEmptyString:!0,permitFractions:!1,permitNull:!0,...e};return e=>Boolean("number"==typeof e&&(r||Number.isInteger(e))||"string"==typeof e&&(t||e.length>0)||n&&null===e)}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/json.cjs"}],[1481,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/keyring.cjs"}],[1482,{debug:4145},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.createModuleLogger=r.createProjectLogger=void 0;const s=(0,n(e("debug")).default)("metamask");r.createProjectLogger=function(e){return s.extend(e)},r.createModuleLogger=function(e,t){return e.extend(t)}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/logging.cjs"}],[1483,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.calculateNumberSize=r.calculateStringSize=r.isASCII=r.isPlainObject=r.ESCAPE_CHARACTERS_REGEXP=r.JsonSize=r.getKnownPropertyNames=r.hasProperty=r.isObject=r.isNullOrUndefined=r.isNonEmptyArray=void 0,r.isNonEmptyArray=function(e){return Array.isArray(e)&&e.length>0},r.isNullOrUndefined=function(e){return null===e||e===undefined},r.isObject=function(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)};function n(e){return e.charCodeAt(0)<=127}r.hasProperty=(e,t)=>Object.hasOwnProperty.call(e,t),r.getKnownPropertyNames=function(e){return Object.getOwnPropertyNames(e)},function(e){e[e.Null=4]="Null",e[e.Comma=1]="Comma",e[e.Wrapper=1]="Wrapper",e[e.True=4]="True",e[e.False=5]="False",e[e.Quote=1]="Quote",e[e.Colon=1]="Colon",e[e.Date=24]="Date"}(r.JsonSize||(r.JsonSize={})),r.ESCAPE_CHARACTERS_REGEXP=/"|\\|\n|\r|\t/gu,r.isPlainObject=function(e){if("object"!=typeof e||null===e)return!1;try{let t=e;for(;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}catch(e){return!1}},r.isASCII=n,r.calculateStringSize=function(e){return e.split("").reduce(((e,t)=>n(t)?e+1:e+2),0)+(e.match(r.ESCAPE_CHARACTERS_REGEXP)??[]).length},r.calculateNumberSize=function(e){return e.toString().length}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/misc.cjs"}],[1484,{"./assert.cjs":1469,"./hex.cjs":1478},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.hexToBigInt=r.hexToNumber=r.bigIntToHex=r.numberToHex=void 0;const n=e("./assert.cjs"),s=e("./hex.cjs");r.numberToHex=e=>((0,n.assert)("number"==typeof e,"Value must be a number."),(0,n.assert)(e>=0,"Value must be a non-negative number."),(0,n.assert)(Number.isSafeInteger(e),"Value is not a safe integer. Use `bigIntToHex` instead."),(0,s.add0x)(e.toString(16)));r.bigIntToHex=e=>((0,n.assert)("bigint"==typeof e,"Value must be a bigint."),(0,n.assert)(e>=0,"Value must be a non-negative bigint."),(0,s.add0x)(e.toString(16)));r.hexToNumber=e=>{(0,s.assertIsHexString)(e);const t=parseInt(e,16);return(0,n.assert)(Number.isSafeInteger(t),"Value is not a safe integer. Use `hexToBigInt` instead."),t};r.hexToBigInt=e=>((0,s.assertIsHexString)(e),BigInt((0,s.add0x)(e)))}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/number.cjs"}],[1485,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/opaque.cjs"}],[1486,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.createDeferredPromise=void 0,r.createDeferredPromise=function({suppressUnhandledRejection:e=!1}={}){let t,r;const n=new Promise(((e,n)=>{t=e,r=n}));return e&&n.catch((e=>{})),{promise:n,resolve:t,reject:r}}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/promise.cjs"}],[1487,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.timeSince=r.inMilliseconds=r.Duration=void 0,function(e){e[e.Millisecond=1]="Millisecond",e[e.Second=1e3]="Second",e[e.Minute=6e4]="Minute",e[e.Hour=36e5]="Hour",e[e.Day=864e5]="Day",e[e.Week=6048e5]="Week",e[e.Year=31536e6]="Year"}(r.Duration||(r.Duration={}));const n=(e,t)=>{if(!(e=>Number.isInteger(e)&&e>=0)(e))throw new Error(`"${t}" must be a non-negative integer. Received: "${e}".`)};r.inMilliseconds=function(e,t){return n(e,"count"),e*t},r.timeSince=function(e){return n(e,"timestamp"),Date.now()-e}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/time.cjs"}],[1488,{},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/transaction-types.cjs"}],[1489,{"./assert.cjs":1469,"@metamask/superstruct":3067,semver:5503},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.satisfiesVersionRange=r.gtRange=r.gtVersion=r.assertIsSemVerRange=r.assertIsSemVerVersion=r.isValidSemVerRange=r.isValidSemVerVersion=r.VersionRangeStruct=r.VersionStruct=void 0;const n=e("@metamask/superstruct"),s=e("semver"),o=e("./assert.cjs");r.VersionStruct=(0,n.refine)((0,n.string)(),"Version",(e=>null!==(0,s.valid)(e)||`Expected SemVer version, got "${e}"`)),r.VersionRangeStruct=(0,n.refine)((0,n.string)(),"Version range",(e=>null!==(0,s.validRange)(e)||`Expected SemVer range, got "${e}"`)),r.isValidSemVerVersion=function(e){return(0,n.is)(e,r.VersionStruct)},r.isValidSemVerRange=function(e){return(0,n.is)(e,r.VersionRangeStruct)},r.assertIsSemVerVersion=function(e){(0,o.assertStruct)(e,r.VersionStruct)},r.assertIsSemVerRange=function(e){(0,o.assertStruct)(e,r.VersionRangeStruct)},r.gtVersion=function(e,t){return(0,s.gt)(e,t)},r.gtRange=function(e,t){return(0,s.gtr)(e,t)},r.satisfiesVersionRange=function(e,t){return(0,s.satisfies)(e,t,{includePrerelease:!0})}}}},{package:"@metamask/ens-controller>@metamask/utils",file:"node_modules/@metamask/ens-controller/node_modules/@metamask/utils/dist/versions.cjs"}],[149,{"@metamask/transaction-controller":3093,lodash:4820},function(){with(this.scopeTerminator)with(this.globalThis)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("@metamask/transaction-controller"),s=e("lodash");r.default={version:19,migrate(e){const t=(0,s.cloneDeep)(e);t.meta.version=19;try{const e=function(e){const t=e,{TransactionController:r}=t;if(r&&r.transactions){const{transactions:e}=t.TransactionController;t.TransactionController.transactions=e.map(((e,t,r)=>{if(e.status!==n.TransactionStatus.submitted)return e;const s=function(e){const t=e.map((e=>{const{nonce:t}=e.txParams;return parseInt(t||"0x0",16)}));return Math.max.apply(null,t)}(r.filter((e=>e.status===n.TransactionStatus.confirmed)).filter((t=>t.txParams.from===e.txParams.from)).filter((t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from))),o=function(e,t){const r=e.map((e=>{const{nonce:t}=e.txParams;return parseInt(t,16)}));let n=t;for(;r.includes(n);)n+=1;return n}(r.filter((e=>e.status===n.TransactionStatus.submitted)).filter((t=>t.txParams.from===e.txParams.from)).filter((t=>t.metamaskNetworkId.from===e.metamaskNetworkId.from)),s),i=Math.max(o,s);return parseInt(e.txParams.nonce,16)>i+1&&(e.status=n.TransactionStatus.failed,e.err={message:"nonce too high",note:"migration 019 custom error"}),e}))}return t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #19${e.stack}`)}return Promise.resolve(t)}}}}},{package:"$root$",file:"app/scripts/migrations/019.js"}]],[],{});